\* MV CONSTANT declarations
CONSTANTS
s0 = s0
s1 = s1
s2 = s2
\* MV CONSTANT declarations
CONSTANTS
t0 = t0
\* CONSTANT declarations
CONSTANT CONT_SEQ = CONT_SEQ
\* CONSTANT declarations
CONSTANT IR_RECONCILE = IR_RECONCILE
\* CONSTANT declarations
CONSTANT NO_TAG = NO_TAG
\* CONSTANT declarations
CONSTANT OFA_DOWN = OFA_DOWN
\* CONSTANT declarations
CONSTANT SW_RESOLVE_PROC = SW_RESOLVE_PROC
\* CONSTANT declarations
CONSTANT NIC_ASIC_IN = NIC_ASIC_IN
\* CONSTANT declarations
CONSTANT NO_LOCK = NO_LOCK
\* CONSTANT declarations
CONSTANT INSTALL_FLOW = INSTALL_FLOW
\* CONSTANT declarations
CONSTANT KEEP_ALIVE = KEEP_ALIVE
\* CONSTANT declarations
CONSTANT ofc0 = ofc0
\* CONSTANT declarations
CONSTANT IR_NONE = IR_NONE
\* CONSTANT declarations
CONSTANT SW_FAILURE_PROC = SW_FAILURE_PROC
\* CONSTANT declarations
CONSTANT NotFailed = NotFailed
\* CONSTANT declarations
CONSTANT IR_UNLOCK = IR_UNLOCK
\* CONSTANT declarations
CONSTANT SW_SUSPEND = SW_SUSPEND
\* CONSTANT declarations
CONSTANT STATUS_NONE = STATUS_NONE
\* CONSTANT declarations
CONSTANT STATUS_LOCKING = STATUS_LOCKING
\* CONSTANT declarations
CONSTANT GHOST_UNLOCK_PROC = GHOST_UNLOCK_PROC
\* CONSTANT declarations
CONSTANT INSTALLER = INSTALLER
\* CONSTANT declarations
CONSTANT SW_SIMPLE_ID = SW_SIMPLE_ID
\* CONSTANT declarations
CONSTANT START_RESET_IR = START_RESET_IR
\* CONSTANT declarations
CONSTANT SW_UP = SW_UP
\* MV CONSTANT definitions
CONSTANT
SW <- const_1624295748279324000
\* CONSTANT declarations
CONSTANT Failed = Failed
\* CONSTANT declarations
CONSTANT RECONCILIATION_REQUEST = RECONCILIATION_REQUEST
\* CONSTANT declarations
CONSTANT OFA_IN = OFA_IN
\* CONSTANT declarations
CONSTANT IR_PENDING = IR_PENDING
\* CONSTANT declarations
CONSTANT INSTALLER_UP = INSTALLER_UP
\* CONSTANT declarations
CONSTANT WATCH_DOG = WATCH_DOG
\* CONSTANT declarations
CONSTANT INSTALLER_DOWN = INSTALLER_DOWN
\* MV CONSTANT definitions
CONSTANT
CONTROLLER_THREAD_POOL <- const_1624295748279325000
\* CONSTANT declarations
CONSTANT RECEIVED_SUCCESSFULLY = RECEIVED_SUCCESSFULLY
\* CONSTANT declarations
CONSTANT RECONCILIATION_RESPONSE = RECONCILIATION_RESPONSE
\* CONSTANT declarations
CONSTANT SW_SIMPLE_MODEL = SW_SIMPLE_MODEL
\* CONSTANT declarations
CONSTANT CONT_MONITOR = CONT_MONITOR
\* CONSTANT declarations
CONSTANT CONT_EVENT = CONT_EVENT
\* CONSTANT declarations
CONSTANT SW_RUN = SW_RUN
\* CONSTANT declarations
CONSTANT STATUS_SENT_DONE = STATUS_SENT_DONE
\* CONSTANT declarations
CONSTANT SW_DOWN = SW_DOWN
\* CONSTANT declarations
CONSTANT IR_DONE = IR_DONE
\* CONSTANT declarations
CONSTANT SW_COMPLEX_MODEL = SW_COMPLEX_MODEL
\* CONSTANT declarations
CONSTANT STATUS_START_SCHEDULING = STATUS_START_SCHEDULING
\* CONSTANT declarations
CONSTANT NIC_ASIC_DOWN = NIC_ASIC_DOWN
\* CONSTANT declarations
CONSTANT rc0 = rc0
\* CONSTANT declarations
CONSTANT NO_STATUS = NO_STATUS
\* CONSTANT declarations
CONSTANT OFA_OUT = OFA_OUT
\* CONSTANT declarations
CONSTANT IR_SENT = IR_SENT
\* CONSTANT declarations
CONSTANT NIC_ASIC_OUT = NIC_ASIC_OUT
\* CONSTANT declarations
CONSTANT INSTALLED_SUCCESSFULLY = INSTALLED_SUCCESSFULLY
\* CONSTANT declarations
CONSTANT nib0 = nib0
\* CONSTANT declarations
CONSTANT CONT_NIB_OFC_EVENT = CONT_NIB_OFC_EVENT
\* CONSTANT declarations
CONSTANT CONT_RC_NIB_EVENT = CONT_RC_NIB_EVENT
\* CONSTANT declarations
CONSTANT CONT_OFC_NIB_EVENT = CONT_OFC_NIB_EVENT
\* CONSTANT declarations
CONSTANT CONT_NIB_RC_EVENT = CONT_NIB_RC_EVENT
\* CONSTANT declarations
CONSTANT NULL = NULL
\* CONSTANT declarations
CONSTANT NIBT_SET_SCHEDULED_IRS = NIBT_SET_SCHEDULED_IRS
\* CONSTANT declarations
CONSTANT NIBT_IR_QUEUE = NIBT_IR_QUEUE
\* CONSTANT declarations
CONSTANT NIBT_CONTROLLER_STATE = NIBT_CONTROLLER_STATE
\* CONSTANT declarations
CONSTANT NIBT_IR_STATUS = NIBT_IR_STATUS
\* CONSTANT declarations
CONSTANT NIBT_FIRST_INSTALL = NIBT_FIRST_INSTALL
\* CONSTANT declarations
CONSTANT InReconciliation = InReconciliation
\* CONSTANT declarations
CONSTANT RC_FAILOVER = RC_FAILOVER
\* CONSTANT declarations
CONSTANT RC_OFC_NIB_FAILURE = RC_OFC_NIB_FAILURE
\* CONSTANT declarations
CONSTANT OFC_FAILOVER = OFC_FAILOVER
\* CONSTANT declarations
CONSTANT CONT_NIB_FAILOVER = CONT_NIB_FAILOVER
\* CONSTANT declarations
CONSTANT OFC_FAILURE = OFC_FAILURE
\* CONSTANT declarations
CONSTANT RC_FAILURE = RC_FAILURE
\* CONSTANT declarations
CONSTANT NIB_FAILURE = NIB_FAILURE
\* CONSTANT declarations
CONSTANT DELETE_FLOW = DELETE_FLOW
\* CONSTANT declarations
CONSTANT DELETED_SUCCESSFULLY = DELETED_SUCCESSFULLY
\* CONSTANT declarations
CONSTANT FLOW_STAT_REPLY = FLOW_STAT_REPLY
\* CONSTANT declarations
CONSTANT NIBT_SW_STATUS = NIBT_SW_STATUS
\* CONSTANT declarations
CONSTANT IR_MOD = IR_MOD
\* CONSTANT declarations
CONSTANT TOPO_MOD = TOPO_MOD
\* CONSTANT declarations
CONSTANT CONT_TE = CONT_TE
\* CONSTANT declarations
CONSTANT SEQ_WORKER_STALE_REMOVED = SEQ_WORKER_STALE_REMOVED
\* CONSTANT declarations
CONSTANT DAG_SUBMIT = DAG_SUBMIT
\* CONSTANT declarations
CONSTANT SEQ_WORKER_RUN = SEQ_WORKER_RUN
\* CONSTANT declarations
CONSTANT DAG_STALE = DAG_STALE
\* CONSTANT declarations
CONSTANT DAG_NEW = DAG_NEW
\* CONSTANT declarations
CONSTANT CONT_WORKER_SEQ = CONT_WORKER_SEQ
\* CONSTANT declarations
CONSTANT DAG_UNLOCK = DAG_UNLOCK
\* CONSTANT declarations
CONSTANT CONT_BOSS_SEQ = CONT_BOSS_SEQ
\* CONSTANT declarations
CONSTANT DAG_NONE = DAG_NONE
\* CONSTANT declarations
CONSTANT SEQ_WORKER_STALE_SIGNAL = SEQ_WORKER_STALE_SIGNAL
\* CONSTANT definitions
CONSTANT
SW_FAIL_ORDERING <- const_1624295748279326000
\* CONSTANT definitions
CONSTANT
MaxNumIRs <- const_1624295748279327000
\* CONSTANT definitions
CONSTANT
MAX_NUM_CONTROLLER_SUB_FAILURE <- const_1624295748279328000
\* CONSTANT definitions
CONSTANT
WHICH_SWITCH_MODEL <- const_1624295748279329000
\* CONSTANT definitions
CONSTANT
IR2FLOW <- const_1624295748279330000
\* CONSTANT definitions
CONSTANT
IR2SW <- const_1624295748279331000
\* CONSTANT definitions
CONSTANT
MaxNumFlows <- const_1624295748279332000
\* CONSTANT definitions
CONSTANT
TOPO_DAG_MAPPING <- const_1624295748279333000
\* CONSTANT definitions
CONSTANT
FINAL_DAG <- const_1624295748279334000
\* SPECIFICATION definition
SPECIFICATION
Spec
\* INVARIANT definition
INVARIANT
RedundantInstallation
ConsistencyReq
\* PROPERTY definition
PROPERTY
InstallationLivenessProp
\* Generated on Mon Jun 21 10:15:48 PDT 2021