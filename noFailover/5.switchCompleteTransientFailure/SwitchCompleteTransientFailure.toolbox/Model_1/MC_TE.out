@!@!@STARTMSG 2262:0 @!@!@
TLC2 Version 2.16 of 31 December 2020 (rev: cdddf55)
@!@!@ENDMSG 2262 @!@!@
@!@!@STARTMSG 2187:0 @!@!@
Running breadth-first search Model-Checking with fp 46 and seed 2442268671191713565 with 8 workers on 16 cores with 2379MB heap and 5348MB offheap memory [pid: 17229] (Linux 4.15.0-140-generic amd64, AdoptOpenJDK 14.0.1 x86_64, OffHeapDiskFPSet, DiskStateQueue).
@!@!@ENDMSG 2187 @!@!@
@!@!@STARTMSG 2220:0 @!@!@
Starting SANY...
@!@!@ENDMSG 2220 @!@!@
Parsing file /home/pooria/RoutingConsistency/noFailover/5.switchCompleteTransientFailure/SwitchCompleteTransientFailure.toolbox/Model_1/MC.tla
Parsing file /home/pooria/RoutingConsistency/noFailover/5.switchCompleteTransientFailure/SwitchCompleteTransientFailure.toolbox/Model_1/SwitchCompleteTransientFailure.tla
Warning: symbols were renamed.
Parsing file /home/pooria/TLAToolBox/toolbox/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/TLC.tla
Parsing file /home/pooria/TLAToolBox/toolbox/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Integers.tla
Parsing file /home/pooria/TLAToolBox/toolbox/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Sequences.tla
Parsing file /usr/local/lib/tlaps/FiniteSets.tla
Parsing file /home/pooria/TLAToolBox/toolbox/plugins/org.lamport.tlatools_1.0.0.202012311918/tla2sany/StandardModules/Naturals.tla
Semantic processing of module Naturals
Semantic processing of module Integers
Semantic processing of module Sequences
Semantic processing of module FiniteSets
Semantic processing of module TLC
Semantic processing of module SwitchCompleteTransientFailure
Semantic processing of module MC
@!@!@STARTMSG 2219:0 @!@!@
SANY finished.
@!@!@ENDMSG 2219 @!@!@
@!@!@STARTMSG 2185:0 @!@!@
Starting... (2021-04-01 06:45:04)
@!@!@ENDMSG 2185 @!@!@
@!@!@STARTMSG 2212:0 @!@!@
Implied-temporal checking--satisfiability problem has 1 branches.
@!@!@ENDMSG 2212 @!@!@
@!@!@STARTMSG 2189:0 @!@!@
Computing initial states...
@!@!@ENDMSG 2189 @!@!@
@!@!@STARTMSG 2190:0 @!@!@
Finished computing initial states: 1 distinct state generated at 2021-04-01 06:45:04.
@!@!@ENDMSG 2190 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 8586 total distinct states at (2021-04-01 06:45:07)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 00s at 2021-04-01 06:45:07
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(32) at 2021-04-01 06:45:07: 26,809 states generated (26,809 s/min), 10,029 distinct states found (10,029 ds/min), 1,435 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 306167 total distinct states at (2021-04-01 06:46:07)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 02s at 2021-04-01 06:46:10
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(59) at 2021-04-01 06:46:10: 1,039,362 states generated (1,012,553 s/min), 336,117 distinct states found (326,088 ds/min), 29,946 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 600688 total distinct states at (2021-04-01 06:47:10)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 04s at 2021-04-01 06:47:14
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(67) at 2021-04-01 06:47:14: 2,074,608 states generated (1,035,246 s/min), 644,912 distinct states found (308,795 ds/min), 44,223 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 881670 total distinct states at (2021-04-01 06:48:14)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 06s at 2021-04-01 06:48:21
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(73) at 2021-04-01 06:48:21: 3,079,652 states generated (1,005,044 s/min), 940,935 distinct states found (296,023 ds/min), 59,263 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2201:0 @!@!@
The coverage statistics at 2021-04-01 06:48:21
@!@!@ENDMSG 2201 @!@!@
@!@!@STARTMSG 2773:0 @!@!@
<Init line 2414, col 1 to line 2414, col 4 of module SwitchCompleteTransientFailure>: 1:1
@!@!@ENDMSG 2773 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2415, col 12 to line 2415, col 44 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2416, col 12 to line 2416, col 48 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2417, col 12 to line 2417, col 52 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2418, col 12 to line 2418, col 50 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2419, col 12 to line 2422, col 63 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2423, col 12 to line 2426, col 59 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2427, col 12 to line 2427, col 97 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2428, col 12 to line 2428, col 24 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2429, col 12 to line 2429, col 36 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2430, col 12 to line 2430, col 49 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2431, col 12 to line 2431, col 35 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2432, col 12 to line 2433, col 71 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2434, col 12 to line 2434, col 30 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2435, col 12 to line 2435, col 48 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2436, col 12 to line 2436, col 48 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2437, col 12 to line 2437, col 50 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2438, col 12 to line 2438, col 50 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2439, col 12 to line 2439, col 37 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2440, col 12 to line 2440, col 47 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2441, col 12 to line 2441, col 75 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2442, col 12 to line 2442, col 65 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2443, col 12 to line 2443, col 74 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2444, col 30 to line 2444, col 107 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2444, col 71 to line 2444, col 107 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2444, col 72 to line 2444, col 107 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2444, col 88 to line 2444, col 107 of module SwitchCompleteTransientFailure: 6
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2444, col 88 to line 2444, col 92 of module SwitchCompleteTransientFailure: 6
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2444, col 97 to line 2444, col 107 of module SwitchCompleteTransientFailure: 3
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2444, col 84 to line 2444, col 85 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |line 2444, col 43 to line 2444, col 68 of module SwitchCompleteTransientFailure: 1:14
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2445, col 12 to line 2445, col 48 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2446, col 12 to line 2446, col 49 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2447, col 12 to line 2447, col 44 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2450, col 12 to line 2450, col 54 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2451, col 12 to line 2451, col 51 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2452, col 12 to line 2452, col 74 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2453, col 12 to line 2453, col 73 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2454, col 12 to line 2454, col 37 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2455, col 12 to line 2455, col 68 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2456, col 12 to line 2456, col 66 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2457, col 12 to line 2457, col 127 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2458, col 12 to line 2458, col 159 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2459, col 12 to line 2459, col 64 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2460, col 12 to line 2460, col 76 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2461, col 12 to line 2461, col 57 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2462, col 12 to line 2462, col 53 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2463, col 12 to line 2463, col 28 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2464, col 12 to line 2464, col 46 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2466, col 12 to line 2466, col 74 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2468, col 12 to line 2468, col 72 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2470, col 12 to line 2470, col 73 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2472, col 12 to line 2472, col 66 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2474, col 12 to line 2474, col 66 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2476, col 12 to line 2476, col 63 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2478, col 12 to line 2478, col 68 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2479, col 12 to line 2479, col 69 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2480, col 12 to line 2480, col 67 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2481, col 12 to line 2481, col 70 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2483, col 12 to line 2483, col 66 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2484, col 12 to line 2484, col 75 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2485, col 12 to line 2485, col 70 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2487, col 12 to line 2487, col 77 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2489, col 12 to line 2489, col 77 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2490, col 12 to line 2490, col 65 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2491, col 12 to line 2491, col 62 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2492, col 12 to line 2492, col 55 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2493, col 12 to line 2493, col 68 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2494, col 12 to line 2494, col 67 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2495, col 12 to line 2495, col 57 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2496, col 12 to line 2496, col 62 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2497, col 12 to line 2497, col 66 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2498, col 12 to line 2498, col 63 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2499, col 12 to line 2499, col 78 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2501, col 12 to line 2501, col 76 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2502, col 12 to line 2502, col 63 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2504, col 12 to line 2504, col 76 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2505, col 12 to line 2505, col 65 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2506, col 12 to line 2506, col 73 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2507, col 12 to line 2507, col 76 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2509, col 12 to line 2509, col 77 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2510, col 12 to line 2510, col 74 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2511, col 12 to line 2511, col 75 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2512, col 12 to line 2512, col 80 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2514, col 12 to line 2514, col 81 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2515, col 12 to line 2515, col 69 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2516, col 12 to line 2516, col 62 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2517, col 12 to line 2517, col 68 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2519, col 12 to line 2519, col 71 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2520, col 12 to line 2520, col 61 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2522, col 12 to line 2522, col 83 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2523, col 12 to line 2539, col 109 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchSimpleProcess line 2541, col 1 to line 2541, col 25 of module SwitchCompleteTransientFailure>: 14825:237485
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2541, col 33 to line 2541, col 64 of module SwitchCompleteTransientFailure: 2000877
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2541, col 33 to line 2541, col 40 of module SwitchCompleteTransientFailure: 1763392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2542, col 33 to line 2542, col 75 of module SwitchCompleteTransientFailure: 2000879
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2542, col 33 to line 2542, col 57 of module SwitchCompleteTransientFailure: 1763394
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2542, col 61 to line 2542, col 75 of module SwitchCompleteTransientFailure: 1763394
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2267, col 28 to line 2267, col 63 of module SwitchCompleteTransientFailure: 2000879
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2267, col 28 to line 2267, col 51 of module SwitchCompleteTransientFailure: 1763394
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2267, col 55 to line 2267, col 63 of module SwitchCompleteTransientFailure: 1763394
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2543, col 53 to line 2543, col 59 of module SwitchCompleteTransientFailure: 1763394
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2544, col 33 to line 2544, col 67 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2544, col 33 to line 2544, col 63 of module SwitchCompleteTransientFailure: 1749957
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2545, col 33 to line 2545, col 69 of module SwitchCompleteTransientFailure: 529231
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2545, col 33 to line 2545, col 46 of module SwitchCompleteTransientFailure: 291746
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2545, col 50 to line 2545, col 69 of module SwitchCompleteTransientFailure: 291746
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2546, col 33 to line 2546, col 75 of module SwitchCompleteTransientFailure: 479544
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2546, col 33 to line 2546, col 42 of module SwitchCompleteTransientFailure: 242059
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2546, col 48 to line 2546, col 75 of module SwitchCompleteTransientFailure: 242059
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2547, col 33 to line 2547, col 108 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2548, col 33 to line 2549, col 86 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2550, col 33 to line 2550, col 125 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2551, col 36 to line 2551, col 72 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2552, col 41 to line 2556, col 124 of module SwitchCompleteTransientFailure: 224428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2557, col 44 to line 2557, col 157 of module SwitchCompleteTransientFailure: 13057
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2558, col 44 to line 2560, col 124 of module SwitchCompleteTransientFailure: 13057
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2561, col 44 to line 2561, col 65 of module SwitchCompleteTransientFailure: 13057
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2562, col 33 to line 2564, col 124 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2562, col 40 to line 2563, col 65 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2562, col 43 to line 2562, col 65 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2563, col 43 to line 2563, col 65 of module SwitchCompleteTransientFailure: 184436
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2565, col 33 to line 2565, col 66 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2566, col 33 to line 2566, col 81 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2567, col 33 to line 2605, col 71 of module SwitchCompleteTransientFailure: 237485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchRcvPacket line 2609, col 1 to line 2609, col 21 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2609, col 29 to line 2609, col 56 of module SwitchCompleteTransientFailure: 1763398
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2610, col 29 to line 2610, col 72 of module SwitchCompleteTransientFailure: 1763398
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2613, col 29 to line 2613, col 102 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2618, col 29 to line 2618, col 46 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2619, col 29 to line 2619, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2620, col 29 to line 2620, col 86 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2621, col 29 to line 2657, col 67 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchNicAsicInsertToOfaBuff line 2659, col 1 to line 2659, col 34 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2659, col 42 to line 2659, col 82 of module SwitchCompleteTransientFailure: 1763400
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2663, col 53 to line 2663, col 85 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2664, col 53 to line 2664, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2665, col 53 to line 2665, col 97 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2666, col 53 to line 2666, col 71 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2667, col 53 to line 2667, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2668, col 53 to line 2668, col 97 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2669, col 53 to line 2670, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2671, col 42 to line 2731, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchFromOFAPacket line 2736, col 1 to line 2736, col 25 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2736, col 33 to line 2736, col 64 of module SwitchCompleteTransientFailure: 1763400
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2737, col 33 to line 2737, col 60 of module SwitchCompleteTransientFailure: 1763400
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2738, col 33 to line 2738, col 65 of module SwitchCompleteTransientFailure: 1749963
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2739, col 33 to line 2739, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2742, col 33 to line 2742, col 50 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2746, col 33 to line 2746, col 119 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2747, col 33 to line 2747, col 85 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2748, col 33 to line 2788, col 71 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchNicAsicSendOutMsg line 2790, col 1 to line 2790, col 29 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2790, col 37 to line 2790, col 72 of module SwitchCompleteTransientFailure: 1763402
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2797, col 48 to line 2797, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2798, col 48 to line 2798, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2799, col 48 to line 2799, col 96 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2800, col 48 to line 2800, col 66 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2801, col 48 to line 2801, col 101 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2802, col 48 to line 2802, col 96 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2803, col 48 to line 2804, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2805, col 37 to line 2854, col 75 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchOfaProcIn line 2859, col 1 to line 2859, col 21 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2859, col 29 to line 2859, col 56 of module SwitchCompleteTransientFailure: 1763406
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2270, col 30 to line 2270, col 61 of module SwitchCompleteTransientFailure: 1763406
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2271, col 30 to line 2271, col 61 of module SwitchCompleteTransientFailure: 1749969
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2860, col 48 to line 2860, col 54 of module SwitchCompleteTransientFailure: 1763408
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2861, col 29 to line 2861, col 61 of module SwitchCompleteTransientFailure: 1749967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2864, col 29 to line 2864, col 46 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2865, col 29 to line 2865, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2870, col 29 to line 2870, col 115 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2871, col 29 to line 2871, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2872, col 29 to line 2908, col 67 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchOfaProcessPacket line 2910, col 1 to line 2910, col 28 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2910, col 36 to line 2910, col 70 of module SwitchCompleteTransientFailure: 1763410
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2914, col 47 to line 2914, col 82 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2916, col 58 to line 2917, col 184 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2919, col 58 to line 2919, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2920, col 47 to line 2920, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2921, col 47 to line 2921, col 64 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2922, col 47 to line 2922, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2923, col 47 to line 2923, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2924, col 47 to line 2925, col 79 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2926, col 36 to line 2974, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchOfaProcOut line 2979, col 1 to line 2979, col 22 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2979, col 30 to line 2979, col 58 of module SwitchCompleteTransientFailure: 1763414
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2270, col 30 to line 2270, col 61 of module SwitchCompleteTransientFailure: 1763414
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2271, col 30 to line 2271, col 61 of module SwitchCompleteTransientFailure: 1749978
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2980, col 49 to line 2980, col 55 of module SwitchCompleteTransientFailure: 1763416
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2981, col 30 to line 2981, col 62 of module SwitchCompleteTransientFailure: 1749979
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2984, col 30 to line 2984, col 47 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2985, col 30 to line 2985, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2986, col 30 to line 2986, col 122 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2991, col 30 to line 2991, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2992, col 30 to line 3030, col 68 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SendInstallationConfirmation line 3032, col 1 to line 3032, col 34 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3032, col 42 to line 3032, col 82 of module SwitchCompleteTransientFailure: 1763416
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3036, col 53 to line 3036, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3038, col 64 to line 3040, col 194 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3041, col 64 to line 3043, col 194 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3044, col 53 to line 3044, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3045, col 53 to line 3045, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3046, col 53 to line 3046, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3047, col 53 to line 3047, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3048, col 53 to line 3049, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3050, col 42 to line 3109, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchInstallerProc line 3114, col 1 to line 3114, col 25 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3114, col 33 to line 3114, col 64 of module SwitchCompleteTransientFailure: 1763418
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2273, col 27 to line 2273, col 64 of module SwitchCompleteTransientFailure: 1763418
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2273, col 27 to line 2273, col 52 of module SwitchCompleteTransientFailure: 1763418
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2273, col 56 to line 2273, col 64 of module SwitchCompleteTransientFailure: 1763418
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2274, col 27 to line 2274, col 58 of module SwitchCompleteTransientFailure: 1749983
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3115, col 49 to line 3115, col 55 of module SwitchCompleteTransientFailure: 1763420
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3116, col 33 to line 3116, col 67 of module SwitchCompleteTransientFailure: 1749981
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3119, col 33 to line 3119, col 50 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3120, col 33 to line 3120, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3125, col 33 to line 3125, col 125 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3126, col 33 to line 3126, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3127, col 33 to line 3167, col 71 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchInstallerInsert2TCAM line 3169, col 1 to line 3169, col 32 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3169, col 40 to line 3169, col 78 of module SwitchCompleteTransientFailure: 1763424
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3173, col 51 to line 3173, col 68 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3175, col 62 to line 3175, col 123 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3176, col 62 to line 3176, col 143 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3177, col 62 to line 3177, col 177 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3178, col 62 to line 3178, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3179, col 51 to line 3179, col 111 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3180, col 51 to line 3180, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3181, col 51 to line 3181, col 101 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3182, col 51 to line 3182, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3183, col 51 to line 3185, col 70 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3186, col 40 to line 3243, col 78 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchInstallerSendConfirmation line 3245, col 1 to line 3245, col 37 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3245, col 45 to line 3245, col 88 of module SwitchCompleteTransientFailure: 1763424
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3249, col 56 to line 3249, col 89 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3250, col 56 to line 3250, col 171 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3251, col 56 to line 3251, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3252, col 56 to line 3252, col 78 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3253, col 56 to line 3253, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3254, col 56 to line 3254, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3255, col 56 to line 3256, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3257, col 45 to line 3324, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchFailure line 3330, col 1 to line 3330, col 19 of module SwitchCompleteTransientFailure>: 7:129
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3330, col 27 to line 3330, col 52 of module SwitchCompleteTransientFailure: 1763559
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3330, col 27 to line 3330, col 34 of module SwitchCompleteTransientFailure: 1763430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3331, col 30 to line 3331, col 66 of module SwitchCompleteTransientFailure: 1763559
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3331, col 30 to line 3331, col 43 of module SwitchCompleteTransientFailure: 1763430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3331, col 47 to line 3331, col 66 of module SwitchCompleteTransientFailure: 1763430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3332, col 33 to line 3332, col 65 of module SwitchCompleteTransientFailure: 1416581
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3332, col 33 to line 3332, col 42 of module SwitchCompleteTransientFailure: 1416454
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3332, col 46 to line 3332, col 65 of module SwitchCompleteTransientFailure: 1416454
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3333, col 33 to line 3333, col 55 of module SwitchCompleteTransientFailure: 1416458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3333, col 33 to line 3333, col 45 of module SwitchCompleteTransientFailure: 1416456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3333, col 49 to line 3333, col 55 of module SwitchCompleteTransientFailure: 1416456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3334, col 27 to line 3334, col 53 of module SwitchCompleteTransientFailure: 1363412
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3334, col 27 to line 3334, col 46 of module SwitchCompleteTransientFailure: 1363283
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3334, col 50 to line 3334, col 53 of module SwitchCompleteTransientFailure: 1363285
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3335, col 64 to line 3335, col 77 of module SwitchCompleteTransientFailure: 389
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3335, col 64 to line 3335, col 67 of module SwitchCompleteTransientFailure: 260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3335, col 71 to line 3335, col 77 of module SwitchCompleteTransientFailure: 260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3335, col 36 to line 3335, col 61 of module SwitchCompleteTransientFailure: 260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3336, col 27 to line 3336, col 111 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3337, col 27 to line 3338, col 107 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3339, col 27 to line 3340, col 118 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3341, col 30 to line 3341, col 72 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3342, col 35 to line 3342, col 87 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3343, col 38 to line 3343, col 136 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3344, col 27 to line 3344, col 83 of module SwitchCompleteTransientFailure: 258
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3344, col 27 to line 3344, col 58 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3345, col 30 to line 3345, col 51 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3346, col 41 to line 3346, col 81 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3347, col 46 to line 3351, col 112 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3353, col 49 to line 3355, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3356, col 38 to line 3357, col 128 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3358, col 38 to line 3358, col 98 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3359, col 38 to line 3359, col 98 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3360, col 38 to line 3360, col 102 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3361, col 38 to line 3361, col 102 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3362, col 38 to line 3362, col 76 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3363, col 38 to line 3363, col 102 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3364, col 38 to line 3364, col 77 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3365, col 38 to line 3365, col 123 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3368, col 40 to line 3368, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3372, col 49 to line 3374, col 115 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3375, col 49 to line 3375, col 109 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3376, col 49 to line 3376, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3377, col 49 to line 3377, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3378, col 49 to line 3378, col 109 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3380, col 60 to line 3380, col 150 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3381, col 60 to line 3383, col 138 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3384, col 60 to line 3384, col 123 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3386, col 60 to line 3388, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3389, col 49 to line 3389, col 75 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3393, col 60 to line 3393, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3395, col 71 to line 3395, col 161 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3396, col 71 to line 3398, col 149 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3399, col 71 to line 3399, col 134 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3401, col 71 to line 3403, col 95 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3404, col 60 to line 3404, col 86 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3408, col 71 to line 3408, col 137 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3412, col 82 to line 3412, col 172 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3413, col 82 to line 3416, col 210 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3417, col 82 to line 3417, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3419, col 82 to line 3421, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3422, col 71 to line 3422, col 97 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3426, col 82 to line 3426, col 146 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3427, col 82 to line 3427, col 146 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3428, col 82 to line 3428, col 172 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3429, col 82 to line 3431, col 160 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3432, col 82 to line 3432, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3435, col 82 to line 3439, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3440, col 49 to line 3443, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3444, col 38 to line 3444, col 49 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3445, col 27 to line 3445, col 69 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3446, col 27 to line 3474, col 76 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchResolveFailure line 3478, col 1 to line 3478, col 26 of module SwitchCompleteTransientFailure>: 160:10888
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3478, col 34 to line 3478, col 66 of module SwitchCompleteTransientFailure: 1774338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3478, col 34 to line 3478, col 41 of module SwitchCompleteTransientFailure: 1763450
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3479, col 34 to line 3479, col 70 of module SwitchCompleteTransientFailure: 1774338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3479, col 34 to line 3479, col 66 of module SwitchCompleteTransientFailure: 1763450
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3480, col 37 to line 3480, col 73 of module SwitchCompleteTransientFailure: 24325
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3480, col 37 to line 3480, col 50 of module SwitchCompleteTransientFailure: 13437
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3480, col 54 to line 3480, col 73 of module SwitchCompleteTransientFailure: 13437
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3481, col 37 to line 3481, col 69 of module SwitchCompleteTransientFailure: 22508
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3481, col 37 to line 3481, col 46 of module SwitchCompleteTransientFailure: 11620
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3481, col 50 to line 3481, col 69 of module SwitchCompleteTransientFailure: 11620
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3482, col 37 to line 3482, col 71 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3483, col 45 to line 3484, col 137 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3485, col 45 to line 3486, col 137 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3487, col 45 to line 3488, col 137 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3489, col 45 to line 3490, col 137 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2292, col 33 to line 2292, col 77 of module SwitchCompleteTransientFailure: 21776
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2292, col 33 to line 2292, col 57 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2293, col 33 to line 2293, col 82 of module SwitchCompleteTransientFailure: 21776
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2293, col 33 to line 2293, col 58 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3491, col 65 to line 3491, col 71 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2290, col 29 to line 2290, col 68 of module SwitchCompleteTransientFailure: 21776
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2290, col 29 to line 2290, col 48 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2291, col 29 to line 2291, col 70 of module SwitchCompleteTransientFailure: 21776
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2291, col 29 to line 2291, col 49 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3492, col 61 to line 3492, col 67 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2289, col 34 to line 2289, col 80 of module SwitchCompleteTransientFailure: 21776
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2289, col 34 to line 2289, col 56 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3493, col 69 to line 3493, col 75 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3494, col 45 to line 3495, col 141 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3496, col 45 to line 3496, col 105 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3497, col 45 to line 3497, col 105 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3498, col 45 to line 3498, col 109 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3499, col 45 to line 3499, col 109 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3500, col 45 to line 3500, col 83 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3501, col 45 to line 3501, col 109 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3502, col 45 to line 3502, col 135 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3503, col 45 to line 3506, col 187 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3507, col 45 to line 3507, col 115 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3508, col 45 to line 3509, col 73 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3510, col 45 to line 3510, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3513, col 47 to line 3513, col 100 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3518, col 56 to line 3520, col 125 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3521, col 56 to line 3521, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3522, col 56 to line 3522, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3523, col 56 to line 3523, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3524, col 56 to line 3524, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3526, col 67 to line 3526, col 157 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3527, col 67 to line 3530, col 209 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3531, col 67 to line 3531, col 137 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3533, col 67 to line 3535, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3536, col 56 to line 3536, col 82 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3541, col 67 to line 3541, col 134 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3542, col 67 to line 3542, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3544, col 78 to line 3544, col 168 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3545, col 78 to line 3547, col 170 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3548, col 78 to line 3548, col 168 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3549, col 78 to line 3552, col 220 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3553, col 67 to line 3553, col 137 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3558, col 78 to line 3558, col 141 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3560, col 89 to line 3560, col 179 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3561, col 89 to line 3564, col 231 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3565, col 89 to line 3565, col 159 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3567, col 89 to line 3569, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3574, col 89 to line 3574, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3578, col 100 to line 3578, col 190 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3579, col 100 to line 3582, col 242 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3583, col 100 to line 3583, col 170 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3585, col 100 to line 3587, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3590, col 89 to line 3593, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3594, col 67 to line 3594, col 93 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3595, col 56 to line 3598, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3599, col 45 to line 3599, col 56 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3600, col 34 to line 3600, col 120 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3601, col 34 to line 3601, col 83 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3602, col 34 to line 3637, col 78 of module SwitchCompleteTransientFailure: 10888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ghostProc line 3641, col 1 to line 3641, col 15 of module SwitchCompleteTransientFailure>: 16431:53173
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3641, col 23 to line 3641, col 44 of module SwitchCompleteTransientFailure: 1816633
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3641, col 23 to line 3641, col 30 of module SwitchCompleteTransientFailure: 1763460
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3642, col 26 to line 3642, col 58 of module SwitchCompleteTransientFailure: 1816633
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3642, col 26 to line 3642, col 35 of module SwitchCompleteTransientFailure: 1763460
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3642, col 39 to line 3642, col 58 of module SwitchCompleteTransientFailure: 1763460
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3643, col 26 to line 3643, col 48 of module SwitchCompleteTransientFailure: 159519
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3643, col 26 to line 3643, col 38 of module SwitchCompleteTransientFailure: 106346
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3643, col 42 to line 3643, col 48 of module SwitchCompleteTransientFailure: 106346
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3644, col 26 to line 3644, col 62 of module SwitchCompleteTransientFailure: 106346
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3644, col 26 to line 3644, col 39 of module SwitchCompleteTransientFailure: 53173
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3644, col 43 to line 3644, col 62 of module SwitchCompleteTransientFailure: 53173
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3645, col 26 to line 3645, col 97 of module SwitchCompleteTransientFailure: 53173
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3645, col 26 to line 3645, col 65 of module SwitchCompleteTransientFailure: 53173
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3645, col 70 to line 3645, col 97 of module SwitchCompleteTransientFailure: 124
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3647, col 31 to line 3658, col 70 of module SwitchCompleteTransientFailure: 53173
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3659, col 23 to line 3661, col 114 of module SwitchCompleteTransientFailure: 53173
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3662, col 23 to line 3662, col 56 of module SwitchCompleteTransientFailure: 53173
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3663, col 23 to line 3663, col 61 of module SwitchCompleteTransientFailure: 53173
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3664, col 23 to line 3694, col 67 of module SwitchCompleteTransientFailure: 53173
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<RCSNIBEventHndlerProc line 3698, col 1 to line 3698, col 27 of module SwitchCompleteTransientFailure>: 31907:507101
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3698, col 35 to line 3698, col 68 of module SwitchCompleteTransientFailure: 1388834
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3698, col 35 to line 3698, col 42 of module SwitchCompleteTransientFailure: 881732
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 881733
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 1388835
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 881733
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3699, col 54 to line 3699, col 60 of module SwitchCompleteTransientFailure: 881733
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1388835
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 881733
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 881733
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3700, col 46 to line 3700, col 49 of module SwitchCompleteTransientFailure: 881733
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3701, col 35 to line 3701, col 65 of module SwitchCompleteTransientFailure: 1388835
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3701, col 35 to line 3701, col 58 of module SwitchCompleteTransientFailure: 881733
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3701, col 62 to line 3701, col 65 of module SwitchCompleteTransientFailure: 881733
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3702, col 35 to line 3702, col 98 of module SwitchCompleteTransientFailure: 507102
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3703, col 35 to line 3704, col 88 of module SwitchCompleteTransientFailure: 507102
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3705, col 39 to line 3705, col 66 of module SwitchCompleteTransientFailure: 507102
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3706, col 49 to line 3706, col 115 of module SwitchCompleteTransientFailure: 32425
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3707, col 54 to line 3708, col 150 of module SwitchCompleteTransientFailure: 32425
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3710, col 57 to line 3711, col 92 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3712, col 46 to line 3713, col 76 of module SwitchCompleteTransientFailure: 32425
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3714, col 50 to line 3714, col 75 of module SwitchCompleteTransientFailure: 474677
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3715, col 60 to line 3715, col 116 of module SwitchCompleteTransientFailure: 474677
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3716, col 68 to line 3716, col 149 of module SwitchCompleteTransientFailure: 467284
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3717, col 71 to line 3717, col 120 of module SwitchCompleteTransientFailure: 467284
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3718, col 76 to line 3718, col 207 of module SwitchCompleteTransientFailure: 467283
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3720, col 79 to line 3720, col 103 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3721, col 68 to line 3721, col 71 of module SwitchCompleteTransientFailure: 7393
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3722, col 68 to line 3723, col 98 of module SwitchCompleteTransientFailure: 7393
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3725, col 57 to line 3726, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3727, col 46 to line 3728, col 81 of module SwitchCompleteTransientFailure: 474676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3729, col 35 to line 3729, col 121 of module SwitchCompleteTransientFailure: 507102
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3729, col 54 to line 3729, col 121 of module SwitchCompleteTransientFailure: 507102
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3730, col 35 to line 3730, col 85 of module SwitchCompleteTransientFailure: 507102
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3730, col 41 to line 3730, col 85 of module SwitchCompleteTransientFailure: 507102
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3731, col 35 to line 3774, col 79 of module SwitchCompleteTransientFailure: 507102
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEProc line 3778, col 1 to line 3778, col 22 of module SwitchCompleteTransientFailure>: 57733:58069
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3778, col 30 to line 3778, col 58 of module SwitchCompleteTransientFailure: 939777
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3778, col 30 to line 3778, col 37 of module SwitchCompleteTransientFailure: 881734
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 298685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 356728
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 298685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3779, col 49 to line 3779, col 55 of module SwitchCompleteTransientFailure: 298685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 356728
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 298685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 298685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3780, col 41 to line 3780, col 44 of module SwitchCompleteTransientFailure: 298685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3781, col 30 to line 3781, col 43 of module SwitchCompleteTransientFailure: 298748
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3781, col 30 to line 3781, col 39 of module SwitchCompleteTransientFailure: 298685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3781, col 48 to line 3781, col 75 of module SwitchCompleteTransientFailure: 356691
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3781, col 48 to line 3781, col 68 of module SwitchCompleteTransientFailure: 298685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3781, col 72 to line 3781, col 75 of module SwitchCompleteTransientFailure: 298685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3782, col 30 to line 3782, col 76 of module SwitchCompleteTransientFailure: 120928
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3782, col 30 to line 3782, col 43 of module SwitchCompleteTransientFailure: 62859
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3782, col 49 to line 3782, col 76 of module SwitchCompleteTransientFailure: 62859
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3783, col 30 to line 3783, col 62 of module SwitchCompleteTransientFailure: 120928
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3783, col 30 to line 3783, col 39 of module SwitchCompleteTransientFailure: 62859
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3783, col 43 to line 3783, col 62 of module SwitchCompleteTransientFailure: 62859
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3784, col 30 to line 3784, col 51 of module SwitchCompleteTransientFailure: 58069
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3785, col 30 to line 3785, col 86 of module SwitchCompleteTransientFailure: 58069
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3786, col 30 to line 3825, col 68 of module SwitchCompleteTransientFailure: 58069
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEEventProcessing line 3827, col 1 to line 3827, col 33 of module SwitchCompleteTransientFailure>: 63688:111770
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3827, col 41 to line 3827, col 80 of module SwitchCompleteTransientFailure: 993506
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3827, col 41 to line 3827, col 48 of module SwitchCompleteTransientFailure: 881736
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3828, col 44 to line 3828, col 71 of module SwitchCompleteTransientFailure: 111770
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3829, col 52 to line 3829, col 98 of module SwitchCompleteTransientFailure: 122170
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3829, col 52 to line 3829, col 65 of module SwitchCompleteTransientFailure: 61085
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3829, col 71 to line 3829, col 98 of module SwitchCompleteTransientFailure: 61085
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3830, col 52 to line 3830, col 84 of module SwitchCompleteTransientFailure: 122170
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3830, col 52 to line 3830, col 61 of module SwitchCompleteTransientFailure: 61085
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3830, col 65 to line 3830, col 84 of module SwitchCompleteTransientFailure: 61085
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3831, col 52 to line 3831, col 132 of module SwitchCompleteTransientFailure: 61085
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3832, col 52 to line 3833, col 106 of module SwitchCompleteTransientFailure: 61085
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3834, col 55 to line 3834, col 95 of module SwitchCompleteTransientFailure: 61085
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3835, col 60 to line 3835, col 164 of module SwitchCompleteTransientFailure: 12679
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3836, col 60 to line 3836, col 161 of module SwitchCompleteTransientFailure: 48406
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3837, col 52 to line 3837, col 129 of module SwitchCompleteTransientFailure: 61085
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3838, col 52 to line 3838, col 108 of module SwitchCompleteTransientFailure: 61085
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3839, col 52 to line 3839, col 75 of module SwitchCompleteTransientFailure: 61085
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3840, col 52 to line 3840, col 98 of module SwitchCompleteTransientFailure: 101370
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3840, col 52 to line 3840, col 65 of module SwitchCompleteTransientFailure: 50685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3840, col 71 to line 3840, col 98 of module SwitchCompleteTransientFailure: 50685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3841, col 52 to line 3841, col 84 of module SwitchCompleteTransientFailure: 101370
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3841, col 52 to line 3841, col 61 of module SwitchCompleteTransientFailure: 50685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3841, col 65 to line 3841, col 84 of module SwitchCompleteTransientFailure: 50685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3842, col 52 to line 3842, col 89 of module SwitchCompleteTransientFailure: 50685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3843, col 52 to line 3843, col 114 of module SwitchCompleteTransientFailure: 50685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3844, col 52 to line 3846, col 80 of module SwitchCompleteTransientFailure: 50685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3847, col 41 to line 3903, col 79 of module SwitchCompleteTransientFailure: 111770
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEComputeDagBasedOnTopo line 3905, col 1 to line 3905, col 39 of module SwitchCompleteTransientFailure>: 3346:54580
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3905, col 47 to line 3905, col 92 of module SwitchCompleteTransientFailure: 936320
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3905, col 47 to line 3905, col 54 of module SwitchCompleteTransientFailure: 881740
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3906, col 47 to line 3906, col 93 of module SwitchCompleteTransientFailure: 113237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3906, col 47 to line 3906, col 60 of module SwitchCompleteTransientFailure: 58657
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3906, col 66 to line 3906, col 93 of module SwitchCompleteTransientFailure: 58657
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3907, col 47 to line 3907, col 79 of module SwitchCompleteTransientFailure: 113237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3907, col 47 to line 3907, col 56 of module SwitchCompleteTransientFailure: 58657
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3907, col 60 to line 3907, col 79 of module SwitchCompleteTransientFailure: 58657
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3908, col 47 to line 3908, col 77 of module SwitchCompleteTransientFailure: 54580
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3909, col 47 to line 3909, col 144 of module SwitchCompleteTransientFailure: 54580
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3910, col 50 to line 3910, col 83 of module SwitchCompleteTransientFailure: 54580
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3911, col 58 to line 3911, col 103 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3912, col 58 to line 3915, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3916, col 58 to line 3916, col 128 of module SwitchCompleteTransientFailure: 54580
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3917, col 61 to line 3917, col 74 of module SwitchCompleteTransientFailure: 54580
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3918, col 69 to line 3918, col 130 of module SwitchCompleteTransientFailure: 54487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3919, col 69 to line 3919, col 127 of module SwitchCompleteTransientFailure: 54487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3920, col 69 to line 3921, col 88 of module SwitchCompleteTransientFailure: 54487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3922, col 69 to line 3922, col 101 of module SwitchCompleteTransientFailure: 93
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3923, col 69 to line 3923, col 120 of module SwitchCompleteTransientFailure: 93
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3924, col 69 to line 3924, col 130 of module SwitchCompleteTransientFailure: 93
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3925, col 69 to line 3925, col 86 of module SwitchCompleteTransientFailure: 93
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3926, col 47 to line 3997, col 85 of module SwitchCompleteTransientFailure: 54580
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTESendDagStaleNotif line 3999, col 1 to line 3999, col 35 of module SwitchCompleteTransientFailure>: 3040:79585
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3999, col 43 to line 3999, col 84 of module SwitchCompleteTransientFailure: 961325
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3999, col 43 to line 3999, col 50 of module SwitchCompleteTransientFailure: 881740
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4000, col 43 to line 4000, col 89 of module SwitchCompleteTransientFailure: 165285
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4000, col 43 to line 4000, col 56 of module SwitchCompleteTransientFailure: 85700
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4000, col 62 to line 4000, col 89 of module SwitchCompleteTransientFailure: 85700
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4001, col 43 to line 4001, col 75 of module SwitchCompleteTransientFailure: 165285
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4001, col 43 to line 4001, col 52 of module SwitchCompleteTransientFailure: 85700
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4001, col 56 to line 4001, col 75 of module SwitchCompleteTransientFailure: 85700
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4002, col 43 to line 4002, col 173 of module SwitchCompleteTransientFailure: 79585
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4003, col 43 to line 4003, col 110 of module SwitchCompleteTransientFailure: 79585
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4004, col 43 to line 4067, col 81 of module SwitchCompleteTransientFailure: 79585
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEWaitForStaleDAGToBeRemoved line 4069, col 1 to line 4069, col 44 of module SwitchCompleteTransientFailure>: 2557:44518
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4069, col 52 to line 4069, col 102 of module SwitchCompleteTransientFailure: 926258
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4069, col 52 to line 4069, col 59 of module SwitchCompleteTransientFailure: 881740
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4070, col 52 to line 4070, col 98 of module SwitchCompleteTransientFailure: 226298
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4070, col 52 to line 4070, col 65 of module SwitchCompleteTransientFailure: 181780
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4070, col 71 to line 4070, col 98 of module SwitchCompleteTransientFailure: 181780
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4071, col 52 to line 4071, col 84 of module SwitchCompleteTransientFailure: 226298
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4071, col 52 to line 4071, col 61 of module SwitchCompleteTransientFailure: 181780
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4071, col 65 to line 4071, col 84 of module SwitchCompleteTransientFailure: 181780
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4072, col 52 to line 4072, col 89 of module SwitchCompleteTransientFailure: 213456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4072, col 52 to line 4072, col 78 of module SwitchCompleteTransientFailure: 168938
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4072, col 82 to line 4072, col 89 of module SwitchCompleteTransientFailure: 168938
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4073, col 52 to line 4073, col 102 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4074, col 52 to line 4074, col 107 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4075, col 52 to line 4075, col 180 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4075, col 71 to line 4075, col 180 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4075, col 72 to line 4075, col 86 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4075, col 95 to line 4075, col 179 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4075, col 105 to line 4075, col 179 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2319, col 44 to line 2322, col 86 of module SwitchCompleteTransientFailure: 44518:5166
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2319, col 65 to line 2322, col 85 of module SwitchCompleteTransientFailure: 133554
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2319, col 68 to line 2320, col 101 of module SwitchCompleteTransientFailure: 133554
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2319, col 71 to line 2319, col 98 of module SwitchCompleteTransientFailure: 133554
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2320, col 71 to line 2320, col 101 of module SwitchCompleteTransientFailure: 92280
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2321, col 68 to line 2321, col 83 of module SwitchCompleteTransientFailure: 71311
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2322, col 68 to line 2322, col 85 of module SwitchCompleteTransientFailure: 40920
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2319, col 51 to line 2319, col 62 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4075, col 124 to line 4075, col 130 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4075, col 133 to line 4075, col 156 of module SwitchCompleteTransientFailure: 27162
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4075, col 159 to line 4075, col 178 of module SwitchCompleteTransientFailure: 43432
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4076, col 52 to line 4076, col 113 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4077, col 52 to line 4155, col 90 of module SwitchCompleteTransientFailure: 44518
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTERemoveUnnecessaryIRs line 4157, col 1 to line 4157, col 38 of module SwitchCompleteTransientFailure>: 25128:61463
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4157, col 46 to line 4157, col 90 of module SwitchCompleteTransientFailure: 943208
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4157, col 46 to line 4157, col 53 of module SwitchCompleteTransientFailure: 881745
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4158, col 49 to line 4158, col 74 of module SwitchCompleteTransientFailure: 64756
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4159, col 57 to line 4159, col 103 of module SwitchCompleteTransientFailure: 47660
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4159, col 57 to line 4159, col 70 of module SwitchCompleteTransientFailure: 24689
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4159, col 76 to line 4159, col 103 of module SwitchCompleteTransientFailure: 24689
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4160, col 57 to line 4160, col 89 of module SwitchCompleteTransientFailure: 47660
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4160, col 57 to line 4160, col 66 of module SwitchCompleteTransientFailure: 24689
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4160, col 70 to line 4160, col 89 of module SwitchCompleteTransientFailure: 24689
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4161, col 57 to line 4161, col 78 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4162, col 57 to line 4162, col 132 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4163, col 57 to line 4163, col 149 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4164, col 57 to line 4164, col 148 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4165, col 57 to line 4165, col 108 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4166, col 57 to line 4166, col 104 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4167, col 57 to line 4167, col 160 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4168, col 57 to line 4168, col 109 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4169, col 57 to line 4169, col 133 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4170, col 57 to line 4170, col 170 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4170, col 72 to line 4170, col 170 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4170, col 73 to line 4170, col 83 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4170, col 92 to line 4170, col 169 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4170, col 102 to line 4170, col 169 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2323, col 43 to line 2323, col 74 of module SwitchCompleteTransientFailure: 22971:2737
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2323, col 59 to line 2323, col 73 of module SwitchCompleteTransientFailure: 30488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2323, col 50 to line 2323, col 56 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4170, col 126 to line 4170, col 146 of module SwitchCompleteTransientFailure: 30488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4170, col 149 to line 4170, col 168 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4171, col 57 to line 4171, col 105 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4172, col 57 to line 4172, col 81 of module SwitchCompleteTransientFailure: 22971
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4173, col 57 to line 4173, col 103 of module SwitchCompleteTransientFailure: 78559
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4173, col 57 to line 4173, col 70 of module SwitchCompleteTransientFailure: 40067
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4173, col 76 to line 4173, col 103 of module SwitchCompleteTransientFailure: 40067
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4174, col 57 to line 4174, col 89 of module SwitchCompleteTransientFailure: 78559
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4174, col 57 to line 4174, col 66 of module SwitchCompleteTransientFailure: 40067
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4174, col 70 to line 4174, col 89 of module SwitchCompleteTransientFailure: 40067
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4175, col 57 to line 4175, col 94 of module SwitchCompleteTransientFailure: 38492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4176, col 57 to line 4176, col 131 of module SwitchCompleteTransientFailure: 38492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4177, col 57 to line 4177, col 110 of module SwitchCompleteTransientFailure: 38492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4178, col 57 to line 4186, col 83 of module SwitchCompleteTransientFailure: 38492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4187, col 46 to line 4251, col 84 of module SwitchCompleteTransientFailure: 61463
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEAddEdge line 4253, col 1 to line 4253, col 25 of module SwitchCompleteTransientFailure>: 42406:42417
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4253, col 33 to line 4253, col 64 of module SwitchCompleteTransientFailure: 924164
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4253, col 33 to line 4253, col 40 of module SwitchCompleteTransientFailure: 881747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4254, col 36 to line 4254, col 57 of module SwitchCompleteTransientFailure: 42417
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4255, col 44 to line 4255, col 90 of module SwitchCompleteTransientFailure: 43642
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4255, col 44 to line 4255, col 57 of module SwitchCompleteTransientFailure: 21821
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4255, col 63 to line 4255, col 90 of module SwitchCompleteTransientFailure: 21821
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4256, col 44 to line 4256, col 76 of module SwitchCompleteTransientFailure: 43642
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4256, col 44 to line 4256, col 53 of module SwitchCompleteTransientFailure: 21821
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4256, col 57 to line 4256, col 76 of module SwitchCompleteTransientFailure: 21821
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4257, col 44 to line 4257, col 65 of module SwitchCompleteTransientFailure: 21821
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4258, col 44 to line 4258, col 125 of module SwitchCompleteTransientFailure: 21821
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4259, col 44 to line 4259, col 129 of module SwitchCompleteTransientFailure: 21821
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4260, col 44 to line 4260, col 144 of module SwitchCompleteTransientFailure: 21821
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4261, col 44 to line 4261, col 92 of module SwitchCompleteTransientFailure: 21821
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4262, col 44 to line 4262, col 62 of module SwitchCompleteTransientFailure: 21821
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4263, col 44 to line 4263, col 69 of module SwitchCompleteTransientFailure: 20596
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4264, col 44 to line 4264, col 90 of module SwitchCompleteTransientFailure: 41192
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4264, col 44 to line 4264, col 57 of module SwitchCompleteTransientFailure: 20596
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4264, col 63 to line 4264, col 90 of module SwitchCompleteTransientFailure: 20596
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4265, col 44 to line 4265, col 76 of module SwitchCompleteTransientFailure: 41192
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4265, col 44 to line 4265, col 53 of module SwitchCompleteTransientFailure: 20596
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4265, col 57 to line 4265, col 76 of module SwitchCompleteTransientFailure: 20596
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4266, col 44 to line 4266, col 65 of module SwitchCompleteTransientFailure: 20596
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4267, col 44 to line 4267, col 105 of module SwitchCompleteTransientFailure: 20596
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4268, col 44 to line 4269, col 70 of module SwitchCompleteTransientFailure: 20596
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4270, col 33 to line 4311, col 71 of module SwitchCompleteTransientFailure: 42417
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTESubmitNewDAG line 4313, col 1 to line 4313, col 30 of module SwitchCompleteTransientFailure>: 2379:35029
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4313, col 38 to line 4313, col 74 of module SwitchCompleteTransientFailure: 916778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4313, col 38 to line 4313, col 45 of module SwitchCompleteTransientFailure: 881749
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4314, col 38 to line 4314, col 84 of module SwitchCompleteTransientFailure: 73004
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4314, col 38 to line 4314, col 51 of module SwitchCompleteTransientFailure: 37975
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4314, col 57 to line 4314, col 84 of module SwitchCompleteTransientFailure: 37975
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4315, col 38 to line 4315, col 70 of module SwitchCompleteTransientFailure: 73004
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4315, col 38 to line 4315, col 47 of module SwitchCompleteTransientFailure: 37975
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4315, col 51 to line 4315, col 70 of module SwitchCompleteTransientFailure: 37975
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4316, col 38 to line 4316, col 98 of module SwitchCompleteTransientFailure: 35029
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4317, col 38 to line 4317, col 166 of module SwitchCompleteTransientFailure: 35029
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4318, col 38 to line 4318, col 83 of module SwitchCompleteTransientFailure: 35029
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4319, col 38 to line 4372, col 76 of module SwitchCompleteTransientFailure: 35029
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerBossSeqProc line 4383, col 1 to line 4383, col 27 of module SwitchCompleteTransientFailure>: 5307:117129
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4383, col 35 to line 4383, col 68 of module SwitchCompleteTransientFailure: 998881
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4383, col 35 to line 4383, col 42 of module SwitchCompleteTransientFailure: 881752
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 829037
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 946166
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 829037
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4384, col 54 to line 4384, col 60 of module SwitchCompleteTransientFailure: 829038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 946167
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 829038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 829038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4385, col 46 to line 4385, col 49 of module SwitchCompleteTransientFailure: 829038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4386, col 35 to line 4386, col 63 of module SwitchCompleteTransientFailure: 946167
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4386, col 35 to line 4386, col 56 of module SwitchCompleteTransientFailure: 829038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4386, col 60 to line 4386, col 63 of module SwitchCompleteTransientFailure: 829038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4387, col 35 to line 4387, col 81 of module SwitchCompleteTransientFailure: 254634
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4387, col 35 to line 4387, col 48 of module SwitchCompleteTransientFailure: 137505
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4387, col 54 to line 4387, col 81 of module SwitchCompleteTransientFailure: 137505
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4388, col 35 to line 4388, col 67 of module SwitchCompleteTransientFailure: 243582
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4388, col 35 to line 4388, col 44 of module SwitchCompleteTransientFailure: 126453
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4388, col 48 to line 4388, col 67 of module SwitchCompleteTransientFailure: 126453
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4389, col 35 to line 4389, col 102 of module SwitchCompleteTransientFailure: 117129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4390, col 35 to line 4390, col 115 of module SwitchCompleteTransientFailure: 117129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4391, col 35 to line 4392, col 88 of module SwitchCompleteTransientFailure: 117129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4393, col 38 to line 4393, col 67 of module SwitchCompleteTransientFailure: 117129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4394, col 46 to line 4394, col 138 of module SwitchCompleteTransientFailure: 46059
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4395, col 46 to line 4395, col 96 of module SwitchCompleteTransientFailure: 46059
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4396, col 46 to line 4398, col 67 of module SwitchCompleteTransientFailure: 46059
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4399, col 46 to line 4399, col 121 of module SwitchCompleteTransientFailure: 71070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4400, col 49 to line 4400, col 74 of module SwitchCompleteTransientFailure: 71070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4401, col 57 to line 4401, col 148 of module SwitchCompleteTransientFailure: 39161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4402, col 57 to line 4402, col 113 of module SwitchCompleteTransientFailure: 39161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4403, col 57 to line 4403, col 74 of module SwitchCompleteTransientFailure: 39161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4404, col 57 to line 4404, col 118 of module SwitchCompleteTransientFailure: 31909
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4405, col 57 to line 4405, col 107 of module SwitchCompleteTransientFailure: 31909
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4406, col 57 to line 4406, col 83 of module SwitchCompleteTransientFailure: 31909
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4407, col 46 to line 4407, col 63 of module SwitchCompleteTransientFailure: 71070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4408, col 35 to line 4452, col 79 of module SwitchCompleteTransientFailure: 117129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<WaitForRCSeqWorkerTerminate line 4454, col 1 to line 4454, col 33 of module SwitchCompleteTransientFailure>: 1209:22495
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4454, col 41 to line 4454, col 80 of module SwitchCompleteTransientFailure: 904249
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4454, col 41 to line 4454, col 48 of module SwitchCompleteTransientFailure: 881755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4455, col 41 to line 4455, col 92 of module SwitchCompleteTransientFailure: 75210
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4455, col 41 to line 4455, col 79 of module SwitchCompleteTransientFailure: 52715
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4455, col 83 to line 4455, col 92 of module SwitchCompleteTransientFailure: 52715
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4456, col 41 to line 4456, col 101 of module SwitchCompleteTransientFailure: 22495
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4457, col 41 to line 4457, col 91 of module SwitchCompleteTransientFailure: 22495
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4458, col 41 to line 4519, col 79 of module SwitchCompleteTransientFailure: 22495
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerWorkerSeqProc line 4524, col 1 to line 4524, col 29 of module SwitchCompleteTransientFailure>: 3873:48342
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4524, col 37 to line 4524, col 72 of module SwitchCompleteTransientFailure: 930097
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4524, col 37 to line 4524, col 44 of module SwitchCompleteTransientFailure: 881755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 395817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 444159
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 395817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4525, col 56 to line 4525, col 62 of module SwitchCompleteTransientFailure: 395817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 444159
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 395817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 395817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4526, col 48 to line 4526, col 51 of module SwitchCompleteTransientFailure: 395817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4527, col 37 to line 4527, col 60 of module SwitchCompleteTransientFailure: 444159
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4527, col 37 to line 4527, col 53 of module SwitchCompleteTransientFailure: 395817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4527, col 57 to line 4527, col 60 of module SwitchCompleteTransientFailure: 395817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4528, col 37 to line 4528, col 83 of module SwitchCompleteTransientFailure: 110806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4528, col 37 to line 4528, col 50 of module SwitchCompleteTransientFailure: 62464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4528, col 56 to line 4528, col 83 of module SwitchCompleteTransientFailure: 62464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4529, col 37 to line 4529, col 69 of module SwitchCompleteTransientFailure: 100672
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4529, col 37 to line 4529, col 46 of module SwitchCompleteTransientFailure: 52330
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4529, col 50 to line 4529, col 69 of module SwitchCompleteTransientFailure: 52330
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4530, col 37 to line 4530, col 97 of module SwitchCompleteTransientFailure: 48342
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4531, col 37 to line 4531, col 120 of module SwitchCompleteTransientFailure: 48342
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4532, col 37 to line 4532, col 96 of module SwitchCompleteTransientFailure: 48342
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4533, col 37 to line 4583, col 75 of module SwitchCompleteTransientFailure: 48342
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerWorkerSeqScheduleDAG line 4585, col 1 to line 4585, col 36 of module SwitchCompleteTransientFailure>: 9182:137317
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4585, col 44 to line 4585, col 86 of module SwitchCompleteTransientFailure: 1019072
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4585, col 44 to line 4585, col 51 of module SwitchCompleteTransientFailure: 881755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4586, col 47 to line 4586, col 128 of module SwitchCompleteTransientFailure: 355177
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4586, col 47 to line 4586, col 95 of module SwitchCompleteTransientFailure: 355177
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4586, col 48 to line 4586, col 95 of module SwitchCompleteTransientFailure: 355177
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2331, col 35 to line 2331, col 79 of module SwitchCompleteTransientFailure: 355177
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2331, col 36 to line 2331, col 79 of module SwitchCompleteTransientFailure: 355177
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2331, col 52 to line 2331, col 79 of module SwitchCompleteTransientFailure: 412008
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2331, col 45 to line 2331, col 49 of module SwitchCompleteTransientFailure: 355177
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4586, col 69 to line 4586, col 75 of module SwitchCompleteTransientFailure: 355177
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4586, col 78 to line 4586, col 94 of module SwitchCompleteTransientFailure: 355177
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4586, col 100 to line 4586, col 128 of module SwitchCompleteTransientFailure: 342659
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4587, col 55 to line 4587, col 101 of module SwitchCompleteTransientFailure: 280982
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4587, col 55 to line 4587, col 68 of module SwitchCompleteTransientFailure: 249421
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4587, col 74 to line 4587, col 101 of module SwitchCompleteTransientFailure: 249421
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4588, col 55 to line 4588, col 87 of module SwitchCompleteTransientFailure: 218319
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4588, col 55 to line 4588, col 64 of module SwitchCompleteTransientFailure: 186758
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4588, col 68 to line 4588, col 87 of module SwitchCompleteTransientFailure: 186758
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4589, col 55 to line 4589, col 165 of module SwitchCompleteTransientFailure: 31561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4589, col 75 to line 4589, col 165 of module SwitchCompleteTransientFailure: 170653
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4589, col 76 to line 4589, col 91 of module SwitchCompleteTransientFailure: 170653
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4589, col 100 to line 4589, col 164 of module SwitchCompleteTransientFailure: 170653
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4589, col 110 to line 4589, col 164 of module SwitchCompleteTransientFailure: 170653
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2327, col 43 to line 2330, col 94 of module SwitchCompleteTransientFailure: 170653:51493
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2327, col 57 to line 2330, col 93 of module SwitchCompleteTransientFailure: 304487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2327, col 60 to line 2327, col 87 of module SwitchCompleteTransientFailure: 304487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2328, col 60 to line 2328, col 93 of module SwitchCompleteTransientFailure: 231757
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2325, col 40 to line 2326, col 87 of module SwitchCompleteTransientFailure: 231757
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2325, col 41 to line 2326, col 87 of module SwitchCompleteTransientFailure: 231757
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2325, col 57 to line 2326, col 87 of module SwitchCompleteTransientFailure: 419139
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2325, col 60 to line 2325, col 78 of module SwitchCompleteTransientFailure: 419139
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2326, col 60 to line 2326, col 87 of module SwitchCompleteTransientFailure: 100562
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2325, col 50 to line 2325, col 54 of module SwitchCompleteTransientFailure: 231757
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2328, col 82 to line 2328, col 84 of module SwitchCompleteTransientFailure: 99938
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2328, col 87 to line 2328, col 89 of module SwitchCompleteTransientFailure: 231757
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2328, col 92 to line 2328, col 92 of module SwitchCompleteTransientFailure: 231758
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2329, col 60 to line 2329, col 103 of module SwitchCompleteTransientFailure: 146010
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2330, col 60 to line 2330, col 93 of module SwitchCompleteTransientFailure: 143952
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2327, col 50 to line 2327, col 54 of module SwitchCompleteTransientFailure: 170654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4589, col 138 to line 4589, col 144 of module SwitchCompleteTransientFailure: 170654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4589, col 147 to line 4589, col 163 of module SwitchCompleteTransientFailure: 170654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4590, col 55 to line 4590, col 82 of module SwitchCompleteTransientFailure: 202215
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4590, col 55 to line 4590, col 77 of module SwitchCompleteTransientFailure: 170654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4590, col 81 to line 4590, col 82 of module SwitchCompleteTransientFailure: 170654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4591, col 55 to line 4591, col 102 of module SwitchCompleteTransientFailure: 31561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4592, col 55 to line 4594, col 87 of module SwitchCompleteTransientFailure: 31561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4595, col 55 to line 4595, col 120 of module SwitchCompleteTransientFailure: 105756
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4596, col 55 to line 4596, col 140 of module SwitchCompleteTransientFailure: 105756
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4597, col 55 to line 4597, col 129 of module SwitchCompleteTransientFailure: 105756
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4598, col 55 to line 4598, col 107 of module SwitchCompleteTransientFailure: 105756
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4599, col 55 to line 4599, col 80 of module SwitchCompleteTransientFailure: 105756
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4600, col 44 to line 4663, col 82 of module SwitchCompleteTransientFailure: 137317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SchedulerMechanism line 4665, col 1 to line 4665, col 24 of module SwitchCompleteTransientFailure>: 4974:51264
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4665, col 32 to line 4665, col 62 of module SwitchCompleteTransientFailure: 933027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4665, col 32 to line 4665, col 39 of module SwitchCompleteTransientFailure: 881763
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4666, col 32 to line 4666, col 78 of module SwitchCompleteTransientFailure: 117577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4666, col 32 to line 4666, col 45 of module SwitchCompleteTransientFailure: 66313
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4666, col 51 to line 4666, col 78 of module SwitchCompleteTransientFailure: 66313
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4667, col 32 to line 4667, col 64 of module SwitchCompleteTransientFailure: 106397
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4667, col 32 to line 4667, col 41 of module SwitchCompleteTransientFailure: 55133
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4667, col 45 to line 4667, col 64 of module SwitchCompleteTransientFailure: 55133
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4668, col 36 to line 4668, col 107 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4670, col 45 to line 4670, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4671, col 40 to line 4671, col 95 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4672, col 36 to line 4672, col 60 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4673, col 43 to line 4673, col 119 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4674, col 47 to line 4674, col 71 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4675, col 54 to line 4675, col 171 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4676, col 58 to line 4676, col 82 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4677, col 62 to line 4677, col 192 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4679, col 65 to line 4679, col 89 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4681, col 54 to line 4682, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4684, col 43 to line 4685, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4686, col 36 to line 4686, col 60 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4687, col 43 to line 4687, col 126 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4688, col 43 to line 4688, col 160 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4689, col 43 to line 4689, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4690, col 43 to line 4690, col 85 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4691, col 43 to line 4692, col 85 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4693, col 32 to line 4730, col 70 of module SwitchCompleteTransientFailure: 51264
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ScheduleTheIR line 4732, col 1 to line 4732, col 19 of module SwitchCompleteTransientFailure>: 4916:50027
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4732, col 27 to line 4732, col 52 of module SwitchCompleteTransientFailure: 931790
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4732, col 27 to line 4732, col 34 of module SwitchCompleteTransientFailure: 881763
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4733, col 27 to line 4733, col 73 of module SwitchCompleteTransientFailure: 114476
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4733, col 27 to line 4733, col 40 of module SwitchCompleteTransientFailure: 64449
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4733, col 46 to line 4733, col 73 of module SwitchCompleteTransientFailure: 64449
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4734, col 27 to line 4734, col 59 of module SwitchCompleteTransientFailure: 103807
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4734, col 27 to line 4734, col 36 of module SwitchCompleteTransientFailure: 53780
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4734, col 40 to line 4734, col 59 of module SwitchCompleteTransientFailure: 53780
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4735, col 31 to line 4735, col 102 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4737, col 40 to line 4737, col 94 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4738, col 35 to line 4738, col 90 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4739, col 31 to line 4739, col 55 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4740, col 38 to line 4740, col 108 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4741, col 38 to line 4741, col 130 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4742, col 42 to line 4742, col 66 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4743, col 46 to line 4743, col 128 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4745, col 49 to line 4745, col 76 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4747, col 38 to line 4748, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4749, col 31 to line 4749, col 55 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4750, col 38 to line 4750, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4751, col 38 to line 4751, col 155 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4752, col 38 to line 4752, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4753, col 41 to line 4753, col 100 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4753, col 41 to line 4753, col 68 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4753, col 73 to line 4753, col 100 of module SwitchCompleteTransientFailure: 2575
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4754, col 46 to line 4754, col 108 of module SwitchCompleteTransientFailure: 47452
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4755, col 46 to line 4755, col 96 of module SwitchCompleteTransientFailure: 2575
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4756, col 38 to line 4757, col 80 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4758, col 27 to line 4788, col 76 of module SwitchCompleteTransientFailure: 50027
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerSeqStateReconciliation line 4790, col 1 to line 4790, col 38 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4790, col 46 to line 4790, col 90 of module SwitchCompleteTransientFailure: 881765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4795, col 46 to line 4795, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4797, col 57 to line 4797, col 227 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4799, col 57 to line 4799, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4800, col 46 to line 4800, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4801, col 46 to line 4872, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThread line 4880, col 1 to line 4880, col 22 of module SwitchCompleteTransientFailure>: 6226:38487
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4880, col 30 to line 4880, col 58 of module SwitchCompleteTransientFailure: 915184
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4880, col 30 to line 4880, col 37 of module SwitchCompleteTransientFailure: 881771
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 90 of module SwitchCompleteTransientFailure: 224561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 42 to line 2301, col 60 of module SwitchCompleteTransientFailure: 224561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 65 to line 2301, col 92 of module SwitchCompleteTransientFailure: 257974
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2301, col 65 to line 2301, col 80 of module SwitchCompleteTransientFailure: 224561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4881, col 49 to line 4881, col 55 of module SwitchCompleteTransientFailure: 224561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 257974
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 224561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 224561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4882, col 41 to line 4882, col 44 of module SwitchCompleteTransientFailure: 224561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4883, col 30 to line 4883, col 46 of module SwitchCompleteTransientFailure: 257974
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4883, col 30 to line 4883, col 39 of module SwitchCompleteTransientFailure: 224561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4883, col 43 to line 4883, col 46 of module SwitchCompleteTransientFailure: 224561
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2341, col 77 to line 2341, col 92 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2341, col 55 to line 2341, col 74 of module SwitchCompleteTransientFailure: 42064
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 42064:90388
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 48843
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 42064
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2341, col 64 to line 2341, col 73 of module SwitchCompleteTransientFailure: 42064
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2342, col 80 to line 2342, col 93 of module SwitchCompleteTransientFailure: 86811
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2342, col 80 to line 2342, col 84 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2342, col 88 to line 2342, col 93 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2342, col 58 to line 2342, col 77 of module SwitchCompleteTransientFailure: 42064
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 42064:90388
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 48843
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 42064
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2342, col 67 to line 2342, col 76 of module SwitchCompleteTransientFailure: 42064
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2307, col 32 to line 2307, col 79 of module SwitchCompleteTransientFailure: 86811
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2307, col 33 to line 2307, col 79 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2307, col 64 to line 2307, col 79 of module SwitchCompleteTransientFailure: 61808
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2307, col 42 to line 2307, col 61 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 48324:110132
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 62431
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2307, col 51 to line 2307, col 60 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2343, col 67 to line 2343, col 74 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2344, col 49 to line 2344, col 139 of module SwitchCompleteTransientFailure: 86811
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2344, col 49 to line 2344, col 80 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2344, col 84 to line 2344, col 139 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2344, col 88 to line 2344, col 138 of module SwitchCompleteTransientFailure: 48324:144972
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2344, col 89 to line 2344, col 110 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2344, col 119 to line 2344, col 137 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||line 2339, col 24 to line 2340, col 109 of module SwitchCompleteTransientFailure: 48324:96648
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2339, col 55 to line 2340, col 108 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2339, col 58 to line 2339, col 86 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2307, col 32 to line 2307, col 79 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2307, col 33 to line 2307, col 79 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 64 to line 2307, col 79 of module SwitchCompleteTransientFailure: 61808
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 42 to line 2307, col 61 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 48324:110132
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 62431
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||||line 2307, col 51 to line 2307, col 60 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2339, col 76 to line 2339, col 85 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2340, col 58 to line 2340, col 108 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2339, col 31 to line 2339, col 52 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2344, col 134 to line 2344, col 136 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4884, col 54 to line 4884, col 60 of module SwitchCompleteTransientFailure: 42064
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4884, col 63 to line 4884, col 66 of module SwitchCompleteTransientFailure: 42064
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4885, col 30 to line 4885, col 76 of module SwitchCompleteTransientFailure: 86811
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4885, col 30 to line 4885, col 43 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4885, col 49 to line 4885, col 76 of module SwitchCompleteTransientFailure: 48324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4886, col 30 to line 4886, col 62 of module SwitchCompleteTransientFailure: 76974
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4886, col 30 to line 4886, col 39 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4886, col 43 to line 4886, col 62 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4887, col 30 to line 4887, col 96 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4887, col 42 to line 4887, col 96 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4887, col 43 to line 4887, col 50 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4887, col 59 to line 4887, col 95 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4887, col 69 to line 4887, col 95 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2310, col 36 to line 2313, col 99 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2310, col 68 to line 2313, col 99 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2310, col 71 to line 2310, col 98 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2311, col 71 to line 2313, col 99 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2311, col 74 to line 2311, col 100 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2307, col 32 to line 2307, col 79 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2307, col 33 to line 2307, col 79 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 64 to line 2307, col 79 of module SwitchCompleteTransientFailure: 49471
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 42 to line 2307, col 61 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 38487:87958
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 50094
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||||line 2307, col 51 to line 2307, col 60 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2311, col 92 to line 2311, col 99 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2312, col 74 to line 2312, col 104 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2308, col 38 to line 2309, col 76 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2308, col 39 to line 2309, col 76 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2308, col 67 to line 2309, col 76 of module SwitchCompleteTransientFailure: 50094
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2308, col 48 to line 2308, col 64 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2312, col 103 to line 2312, col 103 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2313, col 74 to line 2313, col 99 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2310, col 49 to line 2310, col 65 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4887, col 91 to line 4887, col 94 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4888, col 30 to line 4888, col 107 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4889, col 30 to line 4889, col 92 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4890, col 34 to line 4890, col 105 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4892, col 43 to line 4892, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4893, col 38 to line 4893, col 95 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4894, col 34 to line 4894, col 59 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4895, col 41 to line 4895, col 124 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4896, col 41 to line 4896, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4897, col 41 to line 4897, col 105 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4898, col 41 to line 4899, col 74 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4900, col 41 to line 4900, col 155 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4901, col 45 to line 4901, col 70 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4902, col 52 to line 4902, col 135 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4903, col 52 to line 4903, col 169 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4904, col 52 to line 4904, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4905, col 52 to line 4905, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4906, col 55 to line 4906, col 106 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2348, col 62 to line 2349, col 158 of module SwitchCompleteTransientFailure: 76974
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2348, col 62 to line 2348, col 93 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2348, col 97 to line 2349, col 158 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2348, col 101 to line 2349, col 157 of module SwitchCompleteTransientFailure: 38487:115461
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2348, col 102 to line 2348, col 123 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2349, col 111 to line 2349, col 156 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||line 2345, col 51 to line 2347, col 120 of module SwitchCompleteTransientFailure: 38487:76974
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2345, col 82 to line 2347, col 119 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2345, col 85 to line 2346, col 133 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2345, col 113 to line 2346, col 133 of module SwitchCompleteTransientFailure: 50046
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2345, col 116 to line 2345, col 125 of module SwitchCompleteTransientFailure: 50046
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2346, col 116 to line 2346, col 133 of module SwitchCompleteTransientFailure: 39062
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2345, col 94 to line 2345, col 110 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 38487:88533
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 50094
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2345, col 103 to line 2345, col 109 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2347, col 85 to line 2347, col 119 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2345, col 58 to line 2345, col 79 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2349, col 139 to line 2349, col 141 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2349, col 144 to line 2349, col 146 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2349, col 149 to line 2349, col 155 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 92 to line 4907, col 98 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 101 to line 4907, col 104 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 107 to line 4907, col 125 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 128 to line 4907, col 138 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4908, col 63 to line 4908, col 146 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4909, col 63 to line 4909, col 114 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4910, col 63 to line 4910, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4911, col 63 to line 4911, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4912, col 52 to line 4913, col 94 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4914, col 30 to line 4948, col 68 of module SwitchCompleteTransientFailure: 38487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadSendIR line 4950, col 1 to line 4950, col 28 of module SwitchCompleteTransientFailure>: 13843:31345
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4950, col 36 to line 4950, col 70 of module SwitchCompleteTransientFailure: 913122
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4950, col 36 to line 4950, col 43 of module SwitchCompleteTransientFailure: 881777
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4951, col 36 to line 4951, col 82 of module SwitchCompleteTransientFailure: 70722
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4951, col 36 to line 4951, col 49 of module SwitchCompleteTransientFailure: 39377
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4951, col 55 to line 4951, col 82 of module SwitchCompleteTransientFailure: 39377
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4952, col 36 to line 4952, col 68 of module SwitchCompleteTransientFailure: 62690
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4952, col 36 to line 4952, col 45 of module SwitchCompleteTransientFailure: 31345
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4952, col 49 to line 4952, col 68 of module SwitchCompleteTransientFailure: 31345
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4953, col 40 to line 4954, col 119 of module SwitchCompleteTransientFailure: 31345
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4955, col 53 to line 4955, col 136 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4956, col 53 to line 4956, col 170 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4958, col 53 to line 4958, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4959, col 47 to line 4959, col 50 of module SwitchCompleteTransientFailure: 31345
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4960, col 47 to line 4961, col 89 of module SwitchCompleteTransientFailure: 31345
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4962, col 40 to line 4962, col 85 of module SwitchCompleteTransientFailure: 31345
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4963, col 50 to line 4963, col 139 of module SwitchCompleteTransientFailure: 31345
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4963, col 50 to line 4963, col 94 of module SwitchCompleteTransientFailure: 31345
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4963, col 99 to line 4963, col 139 of module SwitchCompleteTransientFailure: 30859
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4964, col 55 to line 4966, col 112 of module SwitchCompleteTransientFailure: 26833
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4967, col 58 to line 4967, col 118 of module SwitchCompleteTransientFailure: 4512
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4968, col 58 to line 4969, col 84 of module SwitchCompleteTransientFailure: 4512
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4970, col 47 to line 4970, col 111 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4971, col 47 to line 4972, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4973, col 36 to line 5019, col 80 of module SwitchCompleteTransientFailure: 31345
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadForwardIR line 5021, col 1 to line 5021, col 31 of module SwitchCompleteTransientFailure>: 57022:57070
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5021, col 39 to line 5021, col 76 of module SwitchCompleteTransientFailure: 938852
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5021, col 39 to line 5021, col 46 of module SwitchCompleteTransientFailure: 881782
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5022, col 39 to line 5022, col 85 of module SwitchCompleteTransientFailure: 128696
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5022, col 39 to line 5022, col 52 of module SwitchCompleteTransientFailure: 71626
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5022, col 58 to line 5022, col 85 of module SwitchCompleteTransientFailure: 71626
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5023, col 39 to line 5023, col 71 of module SwitchCompleteTransientFailure: 114140
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5023, col 39 to line 5023, col 48 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5023, col 52 to line 5023, col 71 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5024, col 43 to line 5024, col 114 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5026, col 52 to line 5026, col 108 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5027, col 47 to line 5027, col 104 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5028, col 43 to line 5028, col 68 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5029, col 50 to line 5030, col 142 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5031, col 50 to line 5032, col 142 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5033, col 50 to line 5035, col 231 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5036, col 53 to line 5036, col 114 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5037, col 61 to line 5037, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5038, col 58 to line 5038, col 117 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5039, col 54 to line 5039, col 79 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5040, col 58 to line 5040, col 176 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5042, col 61 to line 5042, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5044, col 50 to line 5046, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5047, col 43 to line 5047, col 68 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5048, col 50 to line 5048, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5049, col 50 to line 5049, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5050, col 50 to line 5050, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5051, col 50 to line 5051, col 110 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5052, col 50 to line 5053, col 92 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5054, col 39 to line 5103, col 77 of module SwitchCompleteTransientFailure: 57070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadUnlockSemaphore line 5105, col 1 to line 5105, col 37 of module SwitchCompleteTransientFailure>: 34249:201260
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5105, col 45 to line 5105, col 88 of module SwitchCompleteTransientFailure: 1083043
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5105, col 45 to line 5105, col 52 of module SwitchCompleteTransientFailure: 881783
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5106, col 45 to line 5106, col 91 of module SwitchCompleteTransientFailure: 508943
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5106, col 45 to line 5106, col 58 of module SwitchCompleteTransientFailure: 307683
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5106, col 64 to line 5106, col 91 of module SwitchCompleteTransientFailure: 307683
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5107, col 45 to line 5107, col 77 of module SwitchCompleteTransientFailure: 455698
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5107, col 45 to line 5107, col 54 of module SwitchCompleteTransientFailure: 254438
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5107, col 58 to line 5107, col 77 of module SwitchCompleteTransientFailure: 254438
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5108, col 49 to line 5109, col 128 of module SwitchCompleteTransientFailure: 201260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5110, col 62 to line 5110, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5111, col 62 to line 5111, col 179 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5113, col 62 to line 5113, col 130 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5114, col 56 to line 5114, col 59 of module SwitchCompleteTransientFailure: 201260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5115, col 56 to line 5116, col 98 of module SwitchCompleteTransientFailure: 201260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5117, col 49 to line 5117, col 94 of module SwitchCompleteTransientFailure: 201260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5118, col 59 to line 5118, col 107 of module SwitchCompleteTransientFailure: 201260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5119, col 64 to line 5119, col 151 of module SwitchCompleteTransientFailure: 201260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5121, col 67 to line 5121, col 95 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5122, col 56 to line 5122, col 109 of module SwitchCompleteTransientFailure: 201260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5123, col 56 to line 5123, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5124, col 56 to line 5124, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5125, col 45 to line 5192, col 83 of module SwitchCompleteTransientFailure: 201260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<RemoveFromScheduledIRSet line 5194, col 1 to line 5194, col 30 of module SwitchCompleteTransientFailure>: 28583:188380
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5194, col 38 to line 5194, col 74 of module SwitchCompleteTransientFailure: 1070164
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5194, col 38 to line 5194, col 45 of module SwitchCompleteTransientFailure: 881784
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5195, col 38 to line 5195, col 84 of module SwitchCompleteTransientFailure: 426917
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5195, col 38 to line 5195, col 51 of module SwitchCompleteTransientFailure: 238537
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5195, col 57 to line 5195, col 84 of module SwitchCompleteTransientFailure: 238537
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5196, col 38 to line 5196, col 70 of module SwitchCompleteTransientFailure: 376760
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5196, col 38 to line 5196, col 47 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5196, col 51 to line 5196, col 70 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5197, col 42 to line 5197, col 113 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5199, col 51 to line 5199, col 107 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5200, col 46 to line 5200, col 103 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5201, col 42 to line 5201, col 67 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5202, col 49 to line 5202, col 128 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5203, col 53 to line 5203, col 78 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5204, col 60 to line 5204, col 144 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5205, col 60 to line 5205, col 116 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5205, col 74 to line 5205, col 116 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2194, col 30 to line 2195, col 76 of module SwitchCompleteTransientFailure: 188380:42340
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5205, col 88 to line 5205, col 97 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5205, col 100 to line 5205, col 115 of module SwitchCompleteTransientFailure: 40872
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5207, col 60 to line 5208, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5210, col 49 to line 5212, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5213, col 42 to line 5213, col 67 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5214, col 49 to line 5214, col 132 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5215, col 49 to line 5215, col 166 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5216, col 49 to line 5216, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5217, col 49 to line 5217, col 94 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5218, col 49 to line 5219, col 91 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5220, col 38 to line 5268, col 76 of module SwitchCompleteTransientFailure: 188380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadRemoveQueue1 line 5270, col 1 to line 5270, col 34 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5270, col 42 to line 5270, col 82 of module SwitchCompleteTransientFailure: 881784
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5273, col 42 to line 5273, col 126 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5274, col 42 to line 5274, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5275, col 42 to line 5275, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5276, col 42 to line 5336, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadStateReconciliation line 5338, col 1 to line 5338, col 41 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5338, col 49 to line 5338, col 96 of module SwitchCompleteTransientFailure: 881784
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5345, col 49 to line 5345, col 86 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5348, col 71 to line 5348, col 148 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5350, col 71 to line 5350, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5352, col 71 to line 5352, col 166 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5354, col 71 to line 5354, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5357, col 82 to line 5357, col 177 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5359, col 82 to line 5359, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5361, col 71 to line 5361, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5362, col 60 to line 5362, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5363, col 49 to line 5363, col 94 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5364, col 49 to line 5440, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerEventHandlerProc line 5450, col 1 to line 5450, col 32 of module SwitchCompleteTransientFailure>: 4512:12517
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5450, col 40 to line 5450, col 78 of module SwitchCompleteTransientFailure: 894301
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5450, col 40 to line 5450, col 47 of module SwitchCompleteTransientFailure: 881784
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 90 of module SwitchCompleteTransientFailure: 389219
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 42 to line 2301, col 60 of module SwitchCompleteTransientFailure: 389220
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 65 to line 2301, col 92 of module SwitchCompleteTransientFailure: 401737
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2301, col 65 to line 2301, col 80 of module SwitchCompleteTransientFailure: 389220
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5451, col 59 to line 5451, col 65 of module SwitchCompleteTransientFailure: 389220
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 401737
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 389220
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 389220
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5452, col 51 to line 5452, col 54 of module SwitchCompleteTransientFailure: 389220
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5453, col 40 to line 5453, col 64 of module SwitchCompleteTransientFailure: 401737
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5453, col 40 to line 5453, col 57 of module SwitchCompleteTransientFailure: 389221
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5453, col 61 to line 5453, col 64 of module SwitchCompleteTransientFailure: 389221
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5454, col 40 to line 5454, col 86 of module SwitchCompleteTransientFailure: 28010
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5454, col 40 to line 5454, col 53 of module SwitchCompleteTransientFailure: 15493
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5454, col 59 to line 5454, col 86 of module SwitchCompleteTransientFailure: 15493
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5455, col 40 to line 5455, col 72 of module SwitchCompleteTransientFailure: 25808
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5455, col 40 to line 5455, col 49 of module SwitchCompleteTransientFailure: 13291
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5455, col 53 to line 5455, col 72 of module SwitchCompleteTransientFailure: 13291
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5456, col 40 to line 5456, col 117 of module SwitchCompleteTransientFailure: 12517
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5457, col 43 to line 5457, col 141 of module SwitchCompleteTransientFailure: 12517
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5457, col 43 to line 5457, col 81 of module SwitchCompleteTransientFailure: 12517
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2354, col 30 to line 2357, col 83 of module SwitchCompleteTransientFailure: 12517
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2354, col 33 to line 2354, col 56 of module SwitchCompleteTransientFailure: 12517
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2355, col 33 to line 2355, col 61 of module SwitchCompleteTransientFailure: 12517
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2356, col 33 to line 2357, col 83 of module SwitchCompleteTransientFailure: 11869
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5457, col 59 to line 5457, col 80 of module SwitchCompleteTransientFailure: 48772
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5457, col 86 to line 5457, col 141 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5458, col 48 to line 5458, col 99 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5459, col 54 to line 5459, col 159 of module SwitchCompleteTransientFailure: 11869
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5459, col 54 to line 5459, col 95 of module SwitchCompleteTransientFailure: 11869
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2358, col 33 to line 2359, col 84 of module SwitchCompleteTransientFailure: 11869
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5459, col 73 to line 5459, col 94 of module SwitchCompleteTransientFailure: 23738
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5459, col 100 to line 5459, col 159 of module SwitchCompleteTransientFailure: 11869
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5460, col 59 to line 5460, col 123 of module SwitchCompleteTransientFailure: 11869
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5461, col 62 to line 5461, col 132 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5462, col 40 to line 5519, col 78 of module SwitchCompleteTransientFailure: 12517
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerEvenHanlderRemoveEventFromQueue line 5521, col 1 to line 5521, col 47 of module SwitchCompleteTransientFailure>: 66027:307135
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5521, col 55 to line 5521, col 108 of module SwitchCompleteTransientFailure: 1188923
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5521, col 55 to line 5521, col 62 of module SwitchCompleteTransientFailure: 881788
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5522, col 55 to line 5522, col 101 of module SwitchCompleteTransientFailure: 723205
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5522, col 55 to line 5522, col 68 of module SwitchCompleteTransientFailure: 416070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5522, col 74 to line 5522, col 101 of module SwitchCompleteTransientFailure: 416070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5523, col 55 to line 5523, col 87 of module SwitchCompleteTransientFailure: 639697
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5523, col 55 to line 5523, col 64 of module SwitchCompleteTransientFailure: 332562
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5523, col 68 to line 5523, col 87 of module SwitchCompleteTransientFailure: 332562
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5524, col 59 to line 5524, col 130 of module SwitchCompleteTransientFailure: 307135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5526, col 68 to line 5526, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5527, col 63 to line 5527, col 116 of module SwitchCompleteTransientFailure: 307135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5528, col 59 to line 5528, col 82 of module SwitchCompleteTransientFailure: 307135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5529, col 66 to line 5529, col 145 of module SwitchCompleteTransientFailure: 307135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5530, col 70 to line 5530, col 93 of module SwitchCompleteTransientFailure: 307135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5531, col 74 to line 5531, col 122 of module SwitchCompleteTransientFailure: 307135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5533, col 77 to line 5533, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5535, col 66 to line 5536, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5537, col 59 to line 5537, col 82 of module SwitchCompleteTransientFailure: 307135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5538, col 66 to line 5538, col 149 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5539, col 66 to line 5539, col 183 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5540, col 66 to line 5540, col 136 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5541, col 66 to line 5541, col 121 of module SwitchCompleteTransientFailure: 307135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5542, col 66 to line 5543, col 108 of module SwitchCompleteTransientFailure: 307135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5544, col 55 to line 5622, col 93 of module SwitchCompleteTransientFailure: 307135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerSuspendSW line 5624, col 1 to line 5624, col 25 of module SwitchCompleteTransientFailure>: 311:648
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5624, col 33 to line 5624, col 64 of module SwitchCompleteTransientFailure: 882437
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5624, col 33 to line 5624, col 40 of module SwitchCompleteTransientFailure: 881789
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5625, col 33 to line 5625, col 79 of module SwitchCompleteTransientFailure: 1330
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5625, col 33 to line 5625, col 46 of module SwitchCompleteTransientFailure: 682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5625, col 52 to line 5625, col 79 of module SwitchCompleteTransientFailure: 682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5626, col 33 to line 5626, col 65 of module SwitchCompleteTransientFailure: 1324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5626, col 33 to line 5626, col 42 of module SwitchCompleteTransientFailure: 676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5626, col 46 to line 5626, col 65 of module SwitchCompleteTransientFailure: 676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5627, col 37 to line 5628, col 116 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5629, col 50 to line 5629, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5630, col 50 to line 5630, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5632, col 50 to line 5632, col 118 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5633, col 44 to line 5633, col 47 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5634, col 44 to line 5635, col 86 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5636, col 37 to line 5636, col 82 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5637, col 41 to line 5640, col 114 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5641, col 44 to line 5641, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5642, col 44 to line 5643, col 77 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5644, col 33 to line 5683, col 71 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerCheckIfThisIsLastEvent line 5685, col 1 to line 5685, col 38 of module SwitchCompleteTransientFailure>: 4784:11665
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5685, col 46 to line 5685, col 90 of module SwitchCompleteTransientFailure: 893455
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5685, col 46 to line 5685, col 53 of module SwitchCompleteTransientFailure: 881790
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5686, col 46 to line 5686, col 92 of module SwitchCompleteTransientFailure: 26272
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5686, col 46 to line 5686, col 59 of module SwitchCompleteTransientFailure: 14607
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5686, col 65 to line 5686, col 92 of module SwitchCompleteTransientFailure: 14607
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5687, col 46 to line 5687, col 78 of module SwitchCompleteTransientFailure: 24076
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5687, col 46 to line 5687, col 55 of module SwitchCompleteTransientFailure: 12411
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5687, col 59 to line 5687, col 78 of module SwitchCompleteTransientFailure: 12411
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5688, col 50 to line 5689, col 129 of module SwitchCompleteTransientFailure: 11665
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5690, col 63 to line 5690, col 146 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5691, col 63 to line 5691, col 180 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5693, col 63 to line 5693, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5694, col 57 to line 5694, col 60 of module SwitchCompleteTransientFailure: 11665
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5695, col 57 to line 5696, col 99 of module SwitchCompleteTransientFailure: 11665
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5697, col 50 to line 5697, col 95 of module SwitchCompleteTransientFailure: 11665
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5698, col 60 to line 5698, col 113 of module SwitchCompleteTransientFailure: 11665
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5699, col 65 to line 5699, col 114 of module SwitchCompleteTransientFailure: 11665
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5700, col 68 to line 5700, col 122 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5701, col 57 to line 5701, col 127 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5702, col 46 to line 5773, col 84 of module SwitchCompleteTransientFailure: 11665
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<getIRsToBeChecked line 5775, col 1 to line 5775, col 23 of module SwitchCompleteTransientFailure>: 4900:11419
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5775, col 31 to line 5775, col 60 of module SwitchCompleteTransientFailure: 893218
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5775, col 31 to line 5775, col 38 of module SwitchCompleteTransientFailure: 881799
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5776, col 31 to line 5776, col 77 of module SwitchCompleteTransientFailure: 25776
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5776, col 31 to line 5776, col 44 of module SwitchCompleteTransientFailure: 14357
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5776, col 50 to line 5776, col 77 of module SwitchCompleteTransientFailure: 14357
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5777, col 31 to line 5777, col 63 of module SwitchCompleteTransientFailure: 23580
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5777, col 31 to line 5777, col 40 of module SwitchCompleteTransientFailure: 12161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5777, col 44 to line 5777, col 63 of module SwitchCompleteTransientFailure: 12161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5778, col 35 to line 5779, col 114 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5780, col 48 to line 5780, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5781, col 48 to line 5781, col 165 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5783, col 48 to line 5783, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5784, col 42 to line 5784, col 45 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5785, col 42 to line 5786, col 84 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5787, col 35 to line 5787, col 80 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5788, col 42 to line 5788, col 134 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5788, col 59 to line 5788, col 134 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5788, col 60 to line 5788, col 72 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5788, col 81 to line 5788, col 133 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5788, col 91 to line 5788, col 133 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2364, col 25 to line 2365, col 80 of module SwitchCompleteTransientFailure: 11419:18117
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2364, col 46 to line 2365, col 79 of module SwitchCompleteTransientFailure: 34257
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2364, col 49 to line 2364, col 62 of module SwitchCompleteTransientFailure: 34257
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2365, col 49 to line 2365, col 79 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2364, col 32 to line 2364, col 43 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 5788, col 107 to line 5788, col 132 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5789, col 46 to line 5789, col 70 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5790, col 50 to line 5790, col 107 of module SwitchCompleteTransientFailure: 842
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5791, col 50 to line 5791, col 93 of module SwitchCompleteTransientFailure: 10577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5792, col 42 to line 5792, col 112 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5793, col 42 to line 5793, col 64 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5794, col 31 to line 5831, col 69 of module SwitchCompleteTransientFailure: 11419
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ResetAllIRs line 5833, col 1 to line 5833, col 17 of module SwitchCompleteTransientFailure>: 6403:10317
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5833, col 25 to line 5833, col 48 of module SwitchCompleteTransientFailure: 892118
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5833, col 25 to line 5833, col 32 of module SwitchCompleteTransientFailure: 881801
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5834, col 25 to line 5834, col 71 of module SwitchCompleteTransientFailure: 23492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5834, col 25 to line 5834, col 38 of module SwitchCompleteTransientFailure: 13175
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5834, col 44 to line 5834, col 71 of module SwitchCompleteTransientFailure: 13175
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5835, col 25 to line 5835, col 57 of module SwitchCompleteTransientFailure: 21342
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5835, col 25 to line 5835, col 34 of module SwitchCompleteTransientFailure: 11025
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5835, col 38 to line 5835, col 57 of module SwitchCompleteTransientFailure: 11025
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5836, col 29 to line 5837, col 108 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5838, col 42 to line 5838, col 125 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5839, col 42 to line 5839, col 159 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5841, col 42 to line 5841, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5842, col 36 to line 5842, col 39 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5843, col 36 to line 5844, col 78 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5845, col 29 to line 5845, col 74 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5846, col 36 to line 5846, col 111 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5847, col 36 to line 5847, col 123 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5848, col 36 to line 5848, col 98 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5849, col 36 to line 5850, col 156 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5851, col 39 to line 5851, col 63 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5852, col 44 to line 5852, col 101 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5853, col 47 to line 5853, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5854, col 36 to line 5854, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5855, col 36 to line 5856, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5857, col 25 to line 5888, col 63 of module SwitchCompleteTransientFailure: 10317
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerFreeSuspendedSW line 5890, col 1 to line 5890, col 31 of module SwitchCompleteTransientFailure>: 14847:26488
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5890, col 39 to line 5890, col 76 of module SwitchCompleteTransientFailure: 908290
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5890, col 39 to line 5890, col 46 of module SwitchCompleteTransientFailure: 881802
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5891, col 39 to line 5891, col 85 of module SwitchCompleteTransientFailure: 60162
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5891, col 39 to line 5891, col 52 of module SwitchCompleteTransientFailure: 33674
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5891, col 58 to line 5891, col 85 of module SwitchCompleteTransientFailure: 33674
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5892, col 39 to line 5892, col 71 of module SwitchCompleteTransientFailure: 54900
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5892, col 39 to line 5892, col 48 of module SwitchCompleteTransientFailure: 28412
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5892, col 52 to line 5892, col 71 of module SwitchCompleteTransientFailure: 28412
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5893, col 43 to line 5893, col 114 of module SwitchCompleteTransientFailure: 26488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5895, col 52 to line 5895, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5896, col 47 to line 5896, col 100 of module SwitchCompleteTransientFailure: 26488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5897, col 43 to line 5897, col 66 of module SwitchCompleteTransientFailure: 26488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5898, col 50 to line 5898, col 169 of module SwitchCompleteTransientFailure: 26488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5899, col 54 to line 5899, col 77 of module SwitchCompleteTransientFailure: 26488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5900, col 58 to line 5902, col 198 of module SwitchCompleteTransientFailure: 26488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5904, col 61 to line 5905, col 94 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5907, col 50 to line 5909, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5910, col 43 to line 5910, col 66 of module SwitchCompleteTransientFailure: 26488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5911, col 50 to line 5911, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5912, col 50 to line 5912, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5913, col 50 to line 5913, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5914, col 50 to line 5914, col 120 of module SwitchCompleteTransientFailure: 26488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5915, col 50 to line 5916, col 92 of module SwitchCompleteTransientFailure: 26488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5917, col 39 to line 5966, col 77 of module SwitchCompleteTransientFailure: 26488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerEventHandlerStateReconciliation line 5968, col 1 to line 5968, col 47 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5968, col 55 to line 5968, col 108 of module SwitchCompleteTransientFailure: 881802
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5974, col 55 to line 5974, col 92 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5976, col 66 to line 5976, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5977, col 66 to line 5978, col 207 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5980, col 66 to line 5981, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5982, col 55 to line 5982, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5983, col 55 to line 6063, col 93 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerMonitorCheckIfMastr line 6074, col 1 to line 6074, col 35 of module SwitchCompleteTransientFailure>: 80659:86654
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6074, col 43 to line 6074, col 84 of module SwitchCompleteTransientFailure: 968457
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6074, col 43 to line 6074, col 50 of module SwitchCompleteTransientFailure: 881803
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 90 of module SwitchCompleteTransientFailure: 380007
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 42 to line 2301, col 60 of module SwitchCompleteTransientFailure: 380007
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 65 to line 2301, col 92 of module SwitchCompleteTransientFailure: 466661
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2301, col 65 to line 2301, col 80 of module SwitchCompleteTransientFailure: 380007
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6075, col 62 to line 6075, col 68 of module SwitchCompleteTransientFailure: 380007
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 466661
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 380007
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 380007
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6076, col 54 to line 6076, col 57 of module SwitchCompleteTransientFailure: 380007
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6077, col 43 to line 6077, col 66 of module SwitchCompleteTransientFailure: 466661
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6077, col 43 to line 6077, col 59 of module SwitchCompleteTransientFailure: 380008
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6077, col 63 to line 6077, col 66 of module SwitchCompleteTransientFailure: 380008
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6078, col 43 to line 6078, col 89 of module SwitchCompleteTransientFailure: 199685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6078, col 43 to line 6078, col 56 of module SwitchCompleteTransientFailure: 113031
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6078, col 62 to line 6078, col 89 of module SwitchCompleteTransientFailure: 113031
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6079, col 43 to line 6079, col 75 of module SwitchCompleteTransientFailure: 176941
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6079, col 43 to line 6079, col 52 of module SwitchCompleteTransientFailure: 90287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6079, col 56 to line 6079, col 75 of module SwitchCompleteTransientFailure: 90287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6080, col 43 to line 6080, col 80 of module SwitchCompleteTransientFailure: 86654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6081, col 43 to line 6081, col 95 of module SwitchCompleteTransientFailure: 86654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6082, col 43 to line 6085, col 96 of module SwitchCompleteTransientFailure: 86654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6082, col 50 to line 6084, col 89 of module SwitchCompleteTransientFailure: 86655
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6082, col 53 to line 6082, col 83 of module SwitchCompleteTransientFailure: 86655
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6083, col 53 to line 6084, col 89 of module SwitchCompleteTransientFailure: 81392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6086, col 43 to line 6087, col 96 of module SwitchCompleteTransientFailure: 86655
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6088, col 46 to line 6088, col 111 of module SwitchCompleteTransientFailure: 86655
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6089, col 54 to line 6089, col 133 of module SwitchCompleteTransientFailure: 81392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6089, col 62 to line 6089, col 133 of module SwitchCompleteTransientFailure: 81392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6089, col 63 to line 6089, col 66 of module SwitchCompleteTransientFailure: 81392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6089, col 75 to line 6089, col 132 of module SwitchCompleteTransientFailure: 81391
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6089, col 85 to line 6089, col 132 of module SwitchCompleteTransientFailure: 81392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 81392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 143069
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2369, col 73 to line 2372, col 113 of module SwitchCompleteTransientFailure: 143069
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 76 to line 2370, col 114 of module SwitchCompleteTransientFailure: 143069
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 79 to line 2369, col 109 of module SwitchCompleteTransientFailure: 143069
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2370, col 79 to line 2370, col 114 of module SwitchCompleteTransientFailure: 135961
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2371, col 76 to line 2372, col 113 of module SwitchCompleteTransientFailure: 7108
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2373, col 73 to line 2373, col 102 of module SwitchCompleteTransientFailure: 137738
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 81392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6089, col 100 to line 6089, col 114 of module SwitchCompleteTransientFailure: 137738
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6089, col 117 to line 6089, col 131 of module SwitchCompleteTransientFailure: 150177
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6090, col 54 to line 6091, col 108 of module SwitchCompleteTransientFailure: 81392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6092, col 54 to line 6092, col 102 of module SwitchCompleteTransientFailure: 81392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6093, col 54 to line 6093, col 81 of module SwitchCompleteTransientFailure: 81391
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6094, col 51 to line 6096, col 65 of module SwitchCompleteTransientFailure: 5263
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6097, col 43 to line 6158, col 81 of module SwitchCompleteTransientFailure: 86654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<MonitoringServerRemoveFromQueue line 6160, col 1 to line 6160, col 37 of module SwitchCompleteTransientFailure>: 253082:299666
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6160, col 45 to line 6160, col 88 of module SwitchCompleteTransientFailure: 1181472
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6160, col 45 to line 6160, col 52 of module SwitchCompleteTransientFailure: 881807
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6161, col 45 to line 6161, col 91 of module SwitchCompleteTransientFailure: 704278
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6161, col 45 to line 6161, col 58 of module SwitchCompleteTransientFailure: 404612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6161, col 64 to line 6161, col 91 of module SwitchCompleteTransientFailure: 404612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6162, col 45 to line 6162, col 77 of module SwitchCompleteTransientFailure: 625339
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6162, col 45 to line 6162, col 54 of module SwitchCompleteTransientFailure: 325673
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6162, col 58 to line 6162, col 77 of module SwitchCompleteTransientFailure: 325673
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6163, col 49 to line 6164, col 128 of module SwitchCompleteTransientFailure: 299666
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6165, col 62 to line 6165, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6166, col 62 to line 6166, col 179 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6168, col 62 to line 6168, col 130 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6169, col 56 to line 6169, col 59 of module SwitchCompleteTransientFailure: 299666
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6170, col 56 to line 6171, col 98 of module SwitchCompleteTransientFailure: 299666
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6172, col 49 to line 6172, col 94 of module SwitchCompleteTransientFailure: 299666
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6173, col 53 to line 6174, col 114 of module SwitchCompleteTransientFailure: 299666
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6175, col 56 to line 6175, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6176, col 56 to line 6176, col 82 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6177, col 45 to line 6244, col 83 of module SwitchCompleteTransientFailure: 299666
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerUpdateIR2 line 6246, col 1 to line 6246, col 25 of module SwitchCompleteTransientFailure>: 72500:74126
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6246, col 33 to line 6246, col 64 of module SwitchCompleteTransientFailure: 955942
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6246, col 33 to line 6246, col 40 of module SwitchCompleteTransientFailure: 881816
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6247, col 33 to line 6247, col 79 of module SwitchCompleteTransientFailure: 171315
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6247, col 33 to line 6247, col 46 of module SwitchCompleteTransientFailure: 97189
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6247, col 52 to line 6247, col 79 of module SwitchCompleteTransientFailure: 97189
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6248, col 33 to line 6248, col 65 of module SwitchCompleteTransientFailure: 151194
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6248, col 33 to line 6248, col 42 of module SwitchCompleteTransientFailure: 77068
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6248, col 46 to line 6248, col 65 of module SwitchCompleteTransientFailure: 77068
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6249, col 37 to line 6250, col 116 of module SwitchCompleteTransientFailure: 74126
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6251, col 50 to line 6251, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6252, col 50 to line 6252, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6254, col 50 to line 6254, col 118 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6255, col 44 to line 6255, col 47 of module SwitchCompleteTransientFailure: 74126
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6256, col 44 to line 6257, col 86 of module SwitchCompleteTransientFailure: 74126
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6258, col 37 to line 6258, col 82 of module SwitchCompleteTransientFailure: 74126
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6259, col 41 to line 6262, col 104 of module SwitchCompleteTransientFailure: 74126
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6263, col 44 to line 6263, col 102 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6264, col 44 to line 6266, col 70 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6267, col 33 to line 6305, col 71 of module SwitchCompleteTransientFailure: 74126
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerWatchDogProc line 6311, col 1 to line 6311, col 28 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6311, col 36 to line 6311, col 70 of module SwitchCompleteTransientFailure: 1763632
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6312, col 36 to line 6312, col 82 of module SwitchCompleteTransientFailure: 1763632
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6313, col 36 to line 6313, col 68 of module SwitchCompleteTransientFailure: 1416656
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6314, col 36 to line 6314, col 143 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6314, col 63 to line 6314, col 143 of module SwitchCompleteTransientFailure: 1310300
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6314, col 64 to line 6314, col 86 of module SwitchCompleteTransientFailure: 1310300
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6314, col 95 to line 6314, col 142 of module SwitchCompleteTransientFailure: 1310300
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6314, col 105 to line 6314, col 142 of module SwitchCompleteTransientFailure: 1310300
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2375, col 40 to line 2376, col 102 of module SwitchCompleteTransientFailure: 1310300:653912
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2375, col 60 to line 2376, col 101 of module SwitchCompleteTransientFailure: 9172100
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2375, col 63 to line 2375, col 73 of module SwitchCompleteTransientFailure: 9172100
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2376, col 63 to line 2376, col 101 of module SwitchCompleteTransientFailure: 4586050
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2375, col 47 to line 2375, col 57 of module SwitchCompleteTransientFailure: 1310300
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6314, col 135 to line 6314, col 141 of module SwitchCompleteTransientFailure: 1310300
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6315, col 36 to line 6315, col 82 of module SwitchCompleteTransientFailure: 1310300
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6319, col 41 to line 6319, col 64 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6320, col 41 to line 6320, col 129 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6321, col 36 to line 6321, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6322, col 36 to line 6370, col 55 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2774:0 @!@!@
<IRCriticalSection line 6511, col 1 to line 6511, col 17 of module SwitchCompleteTransientFailure>
@!@!@ENDMSG 2774 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6514, col 25 to line 6517, col 109 of module SwitchCompleteTransientFailure: 941044
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2774:0 @!@!@
<ConsistencyReq line 6524, col 1 to line 6524, col 14 of module SwitchCompleteTransientFailure>
@!@!@ENDMSG 2774 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6524, col 19 to line 6529, col 169 of module SwitchCompleteTransientFailure: 941045
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6524, col 55 to line 6529, col 169 of module SwitchCompleteTransientFailure: 2088747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6524, col 58 to line 6524, col 62 of module SwitchCompleteTransientFailure: 2088747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6525, col 58 to line 6525, col 162 of module SwitchCompleteTransientFailure: 816610
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6525, col 58 to line 6525, col 108 of module SwitchCompleteTransientFailure: 816610
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 816610
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 1548718
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 816610
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 816610:1548718
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 1633220
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 816610
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 816610
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6525, col 67 to line 6525, col 107 of module SwitchCompleteTransientFailure: 816610
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 1309426
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 82 to line 6525, col 82 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 85 to line 6525, col 106 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6525, col 112 to line 6525, col 162 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 1548730
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 816616:1548730
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 1633232
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6525, col 121 to line 6525, col 161 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 1309426
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 136 to line 6525, col 136 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 139 to line 6525, col 160 of module SwitchCompleteTransientFailure: 816616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6526, col 58 to line 6527, col 169 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6526, col 61 to line 6526, col 125 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6526, col 61 to line 6526, col 91 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 31 to line 2191, col 52 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 45 to line 2191, col 52 of module SwitchCompleteTransientFailure: 704630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 40 to line 2191, col 42 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 26 to line 2191, col 28 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 647612:1999854
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 1409260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 76 to line 6526, col 87 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 90 to line 6526, col 90 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6526, col 95 to line 6526, col 125 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 31 to line 2191, col 52 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 45 to line 2191, col 52 of module SwitchCompleteTransientFailure: 704630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 40 to line 2191, col 42 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 26 to line 2191, col 28 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 647612:1999854
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 1409260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 110 to line 6526, col 121 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 124 to line 6526, col 124 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6527, col 61 to line 6527, col 169 of module SwitchCompleteTransientFailure: 323806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6527, col 61 to line 6527, col 148 of module SwitchCompleteTransientFailure: 323806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6527, col 63 to line 6527, col 103 of module SwitchCompleteTransientFailure: 323806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 323806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 647612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 323806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6527, col 78 to line 6527, col 78 of module SwitchCompleteTransientFailure: 323806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6527, col 81 to line 6527, col 102 of module SwitchCompleteTransientFailure: 323806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6527, col 106 to line 6527, col 146 of module SwitchCompleteTransientFailure: 323806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6527, col 157 to line 6527, col 169 of module SwitchCompleteTransientFailure: 323806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6527, col 157 to line 6527, col 167 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 647626
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 323813:647626
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 647626
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6527, col 166 to line 6527, col 166 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6528, col 58 to line 6529, col 169 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6528, col 61 to line 6528, col 125 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6528, col 61 to line 6528, col 91 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 323813:971439
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 704647
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 323813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 76 to line 6528, col 87 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 90 to line 6528, col 90 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6528, col 95 to line 6528, col 125 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 31 to line 2191, col 52 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 45 to line 2191, col 52 of module SwitchCompleteTransientFailure: 380835
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 40 to line 2191, col 42 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 26 to line 2191, col 28 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 323814:1028463
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 704649
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 110 to line 6528, col 121 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 124 to line 6528, col 124 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6529, col 61 to line 6529, col 169 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6529, col 61 to line 6529, col 148 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6529, col 63 to line 6529, col 103 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 647628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6529, col 78 to line 6529, col 78 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6529, col 81 to line 6529, col 102 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6529, col 106 to line 6529, col 146 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6529, col 157 to line 6529, col 169 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6529, col 157 to line 6529, col 167 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 647628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 323814:647628
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 647628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6529, col 166 to line 6529, col 166 of module SwitchCompleteTransientFailure: 323814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6524, col 31 to line 6524, col 52 of module SwitchCompleteTransientFailure: 941056
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 941056:6438008
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 1421400
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 941056
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6524, col 40 to line 6524, col 51 of module SwitchCompleteTransientFailure: 941063
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2202:0 @!@!@
End of statistics.
@!@!@ENDMSG 2202 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 1151085 total distinct states at (2021-04-01 06:49:21)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 08s at 2021-04-01 06:49:29
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(77) at 2021-04-01 06:49:29: 4,062,596 states generated (982,944 s/min), 1,220,714 distinct states found (279,779 ds/min), 69,625 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 1419868 total distinct states at (2021-04-01 06:50:29)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 10s at 2021-04-01 06:50:40
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(81) at 2021-04-01 06:50:40: 5,072,293 states generated (1,009,697 s/min), 1,493,951 distinct states found (273,237 ds/min), 74,080 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 1687079 total distinct states at (2021-04-01 06:51:40)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 14s at 2021-04-01 06:51:54
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(85) at 2021-04-01 06:51:54: 6,104,206 states generated (1,031,913 s/min), 1,761,322 distinct states found (267,371 ds/min), 74,241 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 1937697 total distinct states at (2021-04-01 06:52:54)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 15s at 2021-04-01 06:53:09
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(88) at 2021-04-01 06:53:09: 7,084,301 states generated (980,095 s/min), 2,016,009 distinct states found (254,687 ds/min), 78,308 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2201:0 @!@!@
The coverage statistics at 2021-04-01 06:53:09
@!@!@ENDMSG 2201 @!@!@
@!@!@STARTMSG 2773:0 @!@!@
<Init line 2414, col 1 to line 2414, col 4 of module SwitchCompleteTransientFailure>: 1:1
@!@!@ENDMSG 2773 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2415, col 12 to line 2415, col 44 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2416, col 12 to line 2416, col 48 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2417, col 12 to line 2417, col 52 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2418, col 12 to line 2418, col 50 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2419, col 12 to line 2422, col 63 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2423, col 12 to line 2426, col 59 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2427, col 12 to line 2427, col 97 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2428, col 12 to line 2428, col 24 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2429, col 12 to line 2429, col 36 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2430, col 12 to line 2430, col 49 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2431, col 12 to line 2431, col 35 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2432, col 12 to line 2433, col 71 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2434, col 12 to line 2434, col 30 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2435, col 12 to line 2435, col 48 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2436, col 12 to line 2436, col 48 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2437, col 12 to line 2437, col 50 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2438, col 12 to line 2438, col 50 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2439, col 12 to line 2439, col 37 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2440, col 12 to line 2440, col 47 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2441, col 12 to line 2441, col 75 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2442, col 12 to line 2442, col 65 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2443, col 12 to line 2443, col 74 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2444, col 30 to line 2444, col 107 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2444, col 71 to line 2444, col 107 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2444, col 72 to line 2444, col 107 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2444, col 88 to line 2444, col 107 of module SwitchCompleteTransientFailure: 6
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2444, col 88 to line 2444, col 92 of module SwitchCompleteTransientFailure: 6
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2444, col 97 to line 2444, col 107 of module SwitchCompleteTransientFailure: 3
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2444, col 84 to line 2444, col 85 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |line 2444, col 43 to line 2444, col 68 of module SwitchCompleteTransientFailure: 1:14
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2445, col 12 to line 2445, col 48 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2446, col 12 to line 2446, col 49 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2447, col 12 to line 2447, col 44 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2450, col 12 to line 2450, col 54 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2451, col 12 to line 2451, col 51 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2452, col 12 to line 2452, col 74 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2453, col 12 to line 2453, col 73 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2454, col 12 to line 2454, col 37 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2455, col 12 to line 2455, col 68 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2456, col 12 to line 2456, col 66 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2457, col 12 to line 2457, col 127 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2458, col 12 to line 2458, col 159 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2459, col 12 to line 2459, col 64 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2460, col 12 to line 2460, col 76 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2461, col 12 to line 2461, col 57 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2462, col 12 to line 2462, col 53 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2463, col 12 to line 2463, col 28 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2464, col 12 to line 2464, col 46 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2466, col 12 to line 2466, col 74 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2468, col 12 to line 2468, col 72 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2470, col 12 to line 2470, col 73 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2472, col 12 to line 2472, col 66 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2474, col 12 to line 2474, col 66 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2476, col 12 to line 2476, col 63 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2478, col 12 to line 2478, col 68 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2479, col 12 to line 2479, col 69 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2480, col 12 to line 2480, col 67 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2481, col 12 to line 2481, col 70 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2483, col 12 to line 2483, col 66 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2484, col 12 to line 2484, col 75 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2485, col 12 to line 2485, col 70 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2487, col 12 to line 2487, col 77 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2489, col 12 to line 2489, col 77 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2490, col 12 to line 2490, col 65 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2491, col 12 to line 2491, col 62 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2492, col 12 to line 2492, col 55 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2493, col 12 to line 2493, col 68 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2494, col 12 to line 2494, col 67 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2495, col 12 to line 2495, col 57 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2496, col 12 to line 2496, col 62 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2497, col 12 to line 2497, col 66 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2498, col 12 to line 2498, col 63 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2499, col 12 to line 2499, col 78 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2501, col 12 to line 2501, col 76 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2502, col 12 to line 2502, col 63 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2504, col 12 to line 2504, col 76 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2505, col 12 to line 2505, col 65 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2506, col 12 to line 2506, col 73 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2507, col 12 to line 2507, col 76 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2509, col 12 to line 2509, col 77 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2510, col 12 to line 2510, col 74 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2511, col 12 to line 2511, col 75 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2512, col 12 to line 2512, col 80 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2514, col 12 to line 2514, col 81 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2515, col 12 to line 2515, col 69 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2516, col 12 to line 2516, col 62 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2517, col 12 to line 2517, col 68 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2519, col 12 to line 2519, col 71 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2520, col 12 to line 2520, col 61 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2522, col 12 to line 2522, col 83 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2523, col 12 to line 2539, col 109 of module SwitchCompleteTransientFailure: 1
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchSimpleProcess line 2541, col 1 to line 2541, col 25 of module SwitchCompleteTransientFailure>: 37591:636243
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2541, col 33 to line 2541, col 64 of module SwitchCompleteTransientFailure: 4511658
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2541, col 33 to line 2541, col 40 of module SwitchCompleteTransientFailure: 3875414
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2542, col 33 to line 2542, col 75 of module SwitchCompleteTransientFailure: 4511658
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2542, col 33 to line 2542, col 57 of module SwitchCompleteTransientFailure: 3875414
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2542, col 61 to line 2542, col 75 of module SwitchCompleteTransientFailure: 3875414
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2267, col 28 to line 2267, col 63 of module SwitchCompleteTransientFailure: 4511658
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2267, col 28 to line 2267, col 51 of module SwitchCompleteTransientFailure: 3875414
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2267, col 55 to line 2267, col 63 of module SwitchCompleteTransientFailure: 3875414
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2543, col 53 to line 2543, col 59 of module SwitchCompleteTransientFailure: 3875414
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2544, col 33 to line 2544, col 67 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2544, col 33 to line 2544, col 63 of module SwitchCompleteTransientFailure: 3861648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2545, col 33 to line 2545, col 69 of module SwitchCompleteTransientFailure: 1405112
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2545, col 33 to line 2545, col 46 of module SwitchCompleteTransientFailure: 768868
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2545, col 50 to line 2545, col 69 of module SwitchCompleteTransientFailure: 768868
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2546, col 33 to line 2546, col 75 of module SwitchCompleteTransientFailure: 1287753
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2546, col 33 to line 2546, col 42 of module SwitchCompleteTransientFailure: 651509
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2546, col 48 to line 2546, col 75 of module SwitchCompleteTransientFailure: 651509
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2547, col 33 to line 2547, col 108 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2547, col 47 to line 2547, col 108 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2548, col 33 to line 2549, col 86 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2550, col 33 to line 2550, col 125 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2551, col 36 to line 2551, col 72 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2552, col 41 to line 2556, col 124 of module SwitchCompleteTransientFailure: 557318
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2557, col 44 to line 2557, col 157 of module SwitchCompleteTransientFailure: 78926
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2558, col 44 to line 2560, col 124 of module SwitchCompleteTransientFailure: 78926
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2561, col 44 to line 2561, col 65 of module SwitchCompleteTransientFailure: 78926
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2562, col 33 to line 2564, col 124 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2562, col 40 to line 2563, col 65 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2562, col 43 to line 2562, col 65 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2563, col 43 to line 2563, col 65 of module SwitchCompleteTransientFailure: 516569
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2565, col 33 to line 2565, col 66 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2566, col 33 to line 2566, col 81 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2567, col 33 to line 2605, col 71 of module SwitchCompleteTransientFailure: 636244
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchRcvPacket line 2609, col 1 to line 2609, col 21 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2609, col 29 to line 2609, col 56 of module SwitchCompleteTransientFailure: 3875416
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2610, col 29 to line 2610, col 72 of module SwitchCompleteTransientFailure: 3875416
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2613, col 29 to line 2613, col 102 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2618, col 29 to line 2618, col 46 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2619, col 29 to line 2619, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2620, col 29 to line 2620, col 86 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2621, col 29 to line 2657, col 67 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchNicAsicInsertToOfaBuff line 2659, col 1 to line 2659, col 34 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2659, col 42 to line 2659, col 82 of module SwitchCompleteTransientFailure: 3875418
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2663, col 53 to line 2663, col 85 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2664, col 53 to line 2664, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2665, col 53 to line 2665, col 97 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2666, col 53 to line 2666, col 71 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2667, col 53 to line 2667, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2668, col 53 to line 2668, col 97 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2669, col 53 to line 2670, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2671, col 42 to line 2731, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchFromOFAPacket line 2736, col 1 to line 2736, col 25 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2736, col 33 to line 2736, col 64 of module SwitchCompleteTransientFailure: 3875418
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2737, col 33 to line 2737, col 60 of module SwitchCompleteTransientFailure: 3875418
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2738, col 33 to line 2738, col 65 of module SwitchCompleteTransientFailure: 3861652
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2739, col 33 to line 2739, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2742, col 33 to line 2742, col 50 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2746, col 33 to line 2746, col 119 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2747, col 33 to line 2747, col 85 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2748, col 33 to line 2788, col 71 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchNicAsicSendOutMsg line 2790, col 1 to line 2790, col 29 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2790, col 37 to line 2790, col 72 of module SwitchCompleteTransientFailure: 3875420
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2797, col 48 to line 2797, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2798, col 48 to line 2798, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2799, col 48 to line 2799, col 96 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2800, col 48 to line 2800, col 66 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2801, col 48 to line 2801, col 101 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2802, col 48 to line 2802, col 96 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2803, col 48 to line 2804, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2805, col 37 to line 2854, col 75 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchOfaProcIn line 2859, col 1 to line 2859, col 21 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2859, col 29 to line 2859, col 56 of module SwitchCompleteTransientFailure: 3875420
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2270, col 30 to line 2270, col 61 of module SwitchCompleteTransientFailure: 3875420
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2271, col 30 to line 2271, col 61 of module SwitchCompleteTransientFailure: 3861654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2860, col 48 to line 2860, col 54 of module SwitchCompleteTransientFailure: 3875420
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2861, col 29 to line 2861, col 61 of module SwitchCompleteTransientFailure: 3861654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2864, col 29 to line 2864, col 46 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2865, col 29 to line 2865, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2870, col 29 to line 2870, col 115 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2871, col 29 to line 2871, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2872, col 29 to line 2908, col 67 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchOfaProcessPacket line 2910, col 1 to line 2910, col 28 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2910, col 36 to line 2910, col 70 of module SwitchCompleteTransientFailure: 3875422
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2914, col 47 to line 2914, col 82 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2916, col 58 to line 2917, col 184 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2919, col 58 to line 2919, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2920, col 47 to line 2920, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2921, col 47 to line 2921, col 64 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2922, col 47 to line 2922, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2923, col 47 to line 2923, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2924, col 47 to line 2925, col 79 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2926, col 36 to line 2974, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchOfaProcOut line 2979, col 1 to line 2979, col 22 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2979, col 30 to line 2979, col 58 of module SwitchCompleteTransientFailure: 3875424
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2270, col 30 to line 2270, col 61 of module SwitchCompleteTransientFailure: 3875424
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2271, col 30 to line 2271, col 61 of module SwitchCompleteTransientFailure: 3861658
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2980, col 49 to line 2980, col 55 of module SwitchCompleteTransientFailure: 3875424
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2981, col 30 to line 2981, col 62 of module SwitchCompleteTransientFailure: 3861658
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2984, col 30 to line 2984, col 47 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2985, col 30 to line 2985, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2986, col 30 to line 2986, col 122 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2991, col 30 to line 2991, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2992, col 30 to line 3030, col 68 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SendInstallationConfirmation line 3032, col 1 to line 3032, col 34 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3032, col 42 to line 3032, col 82 of module SwitchCompleteTransientFailure: 3875424
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3036, col 53 to line 3036, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3038, col 64 to line 3040, col 194 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3041, col 64 to line 3043, col 194 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3044, col 53 to line 3044, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3045, col 53 to line 3045, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3046, col 53 to line 3046, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3047, col 53 to line 3047, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3048, col 53 to line 3049, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3050, col 42 to line 3109, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchInstallerProc line 3114, col 1 to line 3114, col 25 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3114, col 33 to line 3114, col 64 of module SwitchCompleteTransientFailure: 3875426
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2273, col 27 to line 2273, col 64 of module SwitchCompleteTransientFailure: 3875426
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2274, col 27 to line 2274, col 58 of module SwitchCompleteTransientFailure: 3861660
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3115, col 49 to line 3115, col 55 of module SwitchCompleteTransientFailure: 3875426
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3116, col 33 to line 3116, col 67 of module SwitchCompleteTransientFailure: 3861660
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3119, col 33 to line 3119, col 50 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3120, col 33 to line 3120, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3125, col 33 to line 3125, col 125 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3126, col 33 to line 3126, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3127, col 33 to line 3167, col 71 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchInstallerInsert2TCAM line 3169, col 1 to line 3169, col 32 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3169, col 40 to line 3169, col 78 of module SwitchCompleteTransientFailure: 3875428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3173, col 51 to line 3173, col 68 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3175, col 62 to line 3175, col 123 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3176, col 62 to line 3176, col 143 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3177, col 62 to line 3177, col 177 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3178, col 62 to line 3178, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3179, col 51 to line 3179, col 111 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3180, col 51 to line 3180, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3181, col 51 to line 3181, col 101 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3182, col 51 to line 3182, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3183, col 51 to line 3185, col 70 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3186, col 40 to line 3243, col 78 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchInstallerSendConfirmation line 3245, col 1 to line 3245, col 37 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3245, col 45 to line 3245, col 88 of module SwitchCompleteTransientFailure: 3875430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3249, col 56 to line 3249, col 89 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3250, col 56 to line 3250, col 171 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3251, col 56 to line 3251, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3252, col 56 to line 3252, col 78 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3253, col 56 to line 3253, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3254, col 56 to line 3254, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3255, col 56 to line 3256, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3257, col 45 to line 3324, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchFailure line 3330, col 1 to line 3330, col 19 of module SwitchCompleteTransientFailure>: 7:129
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3330, col 27 to line 3330, col 52 of module SwitchCompleteTransientFailure: 3875563
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3330, col 27 to line 3330, col 34 of module SwitchCompleteTransientFailure: 3875434
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3331, col 30 to line 3331, col 66 of module SwitchCompleteTransientFailure: 3875563
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3331, col 30 to line 3331, col 43 of module SwitchCompleteTransientFailure: 3875434
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3331, col 47 to line 3331, col 66 of module SwitchCompleteTransientFailure: 3875434
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3332, col 33 to line 3332, col 65 of module SwitchCompleteTransientFailure: 3194673
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3332, col 33 to line 3332, col 42 of module SwitchCompleteTransientFailure: 3194546
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3332, col 46 to line 3332, col 65 of module SwitchCompleteTransientFailure: 3194546
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3333, col 33 to line 3333, col 55 of module SwitchCompleteTransientFailure: 3194548
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3333, col 33 to line 3333, col 45 of module SwitchCompleteTransientFailure: 3194546
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3333, col 49 to line 3333, col 55 of module SwitchCompleteTransientFailure: 3194546
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3334, col 27 to line 3334, col 53 of module SwitchCompleteTransientFailure: 3074875
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3334, col 27 to line 3334, col 46 of module SwitchCompleteTransientFailure: 3074746
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3334, col 50 to line 3334, col 53 of module SwitchCompleteTransientFailure: 3074746
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3335, col 64 to line 3335, col 77 of module SwitchCompleteTransientFailure: 389
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3335, col 64 to line 3335, col 67 of module SwitchCompleteTransientFailure: 260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3335, col 71 to line 3335, col 77 of module SwitchCompleteTransientFailure: 260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3335, col 36 to line 3335, col 61 of module SwitchCompleteTransientFailure: 260
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3336, col 27 to line 3336, col 111 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3337, col 27 to line 3338, col 107 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3339, col 27 to line 3340, col 118 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3341, col 30 to line 3341, col 72 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3342, col 35 to line 3342, col 87 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3343, col 38 to line 3343, col 136 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3344, col 27 to line 3344, col 83 of module SwitchCompleteTransientFailure: 258
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3344, col 27 to line 3344, col 58 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3345, col 30 to line 3345, col 51 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3346, col 41 to line 3346, col 81 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3347, col 46 to line 3351, col 112 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3353, col 49 to line 3355, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3356, col 38 to line 3357, col 128 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3358, col 38 to line 3358, col 98 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3359, col 38 to line 3359, col 98 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3360, col 38 to line 3360, col 102 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3361, col 38 to line 3361, col 102 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3362, col 38 to line 3362, col 76 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3363, col 38 to line 3363, col 102 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3364, col 38 to line 3364, col 77 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3365, col 38 to line 3365, col 123 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3368, col 40 to line 3368, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3372, col 49 to line 3374, col 115 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3375, col 49 to line 3375, col 109 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3376, col 49 to line 3376, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3377, col 49 to line 3377, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3378, col 49 to line 3378, col 109 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3380, col 60 to line 3380, col 150 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3381, col 60 to line 3383, col 138 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3384, col 60 to line 3384, col 123 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3386, col 60 to line 3388, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3389, col 49 to line 3389, col 75 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3393, col 60 to line 3393, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3395, col 71 to line 3395, col 161 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3396, col 71 to line 3398, col 149 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3399, col 71 to line 3399, col 134 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3401, col 71 to line 3403, col 95 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3404, col 60 to line 3404, col 86 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3408, col 71 to line 3408, col 137 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3412, col 82 to line 3412, col 172 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3413, col 82 to line 3416, col 210 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3417, col 82 to line 3417, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3419, col 82 to line 3421, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3422, col 71 to line 3422, col 97 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3426, col 82 to line 3426, col 146 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3427, col 82 to line 3427, col 146 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3428, col 82 to line 3428, col 172 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3429, col 82 to line 3431, col 160 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3432, col 82 to line 3432, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3435, col 82 to line 3439, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3440, col 49 to line 3443, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3444, col 38 to line 3444, col 49 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3445, col 27 to line 3445, col 69 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3446, col 27 to line 3474, col 76 of module SwitchCompleteTransientFailure: 129
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchResolveFailure line 3478, col 1 to line 3478, col 26 of module SwitchCompleteTransientFailure>: 173:11201
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3478, col 34 to line 3478, col 66 of module SwitchCompleteTransientFailure: 3886635
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3478, col 34 to line 3478, col 41 of module SwitchCompleteTransientFailure: 3875434
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3479, col 34 to line 3479, col 70 of module SwitchCompleteTransientFailure: 3886635
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3479, col 34 to line 3479, col 66 of module SwitchCompleteTransientFailure: 3875434
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3480, col 37 to line 3480, col 73 of module SwitchCompleteTransientFailure: 24967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3480, col 37 to line 3480, col 50 of module SwitchCompleteTransientFailure: 13766
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3480, col 54 to line 3480, col 73 of module SwitchCompleteTransientFailure: 13766
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3481, col 37 to line 3481, col 69 of module SwitchCompleteTransientFailure: 23150
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3481, col 37 to line 3481, col 46 of module SwitchCompleteTransientFailure: 11949
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3481, col 50 to line 3481, col 69 of module SwitchCompleteTransientFailure: 11949
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3482, col 37 to line 3482, col 71 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3483, col 45 to line 3484, col 137 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3485, col 45 to line 3486, col 137 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3487, col 45 to line 3488, col 137 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3489, col 45 to line 3490, col 137 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2292, col 33 to line 2292, col 77 of module SwitchCompleteTransientFailure: 22402
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2292, col 33 to line 2292, col 57 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2293, col 33 to line 2293, col 82 of module SwitchCompleteTransientFailure: 22402
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2293, col 33 to line 2293, col 58 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3491, col 65 to line 3491, col 71 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2290, col 29 to line 2290, col 68 of module SwitchCompleteTransientFailure: 22402
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2290, col 29 to line 2290, col 48 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2291, col 29 to line 2291, col 70 of module SwitchCompleteTransientFailure: 22402
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2291, col 29 to line 2291, col 49 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3492, col 61 to line 3492, col 67 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2289, col 34 to line 2289, col 80 of module SwitchCompleteTransientFailure: 22402
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2289, col 34 to line 2289, col 56 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3493, col 69 to line 3493, col 75 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3494, col 45 to line 3495, col 141 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3496, col 45 to line 3496, col 105 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3497, col 45 to line 3497, col 105 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3498, col 45 to line 3498, col 109 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3499, col 45 to line 3499, col 109 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3500, col 45 to line 3500, col 83 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3501, col 45 to line 3501, col 109 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3502, col 45 to line 3502, col 135 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3503, col 45 to line 3506, col 187 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3507, col 45 to line 3507, col 115 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3508, col 45 to line 3509, col 73 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3510, col 45 to line 3510, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3513, col 47 to line 3513, col 100 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3518, col 56 to line 3520, col 125 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3521, col 56 to line 3521, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3522, col 56 to line 3522, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3523, col 56 to line 3523, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3524, col 56 to line 3524, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3526, col 67 to line 3526, col 157 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3527, col 67 to line 3530, col 209 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3531, col 67 to line 3531, col 137 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3533, col 67 to line 3535, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3536, col 56 to line 3536, col 82 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3541, col 67 to line 3541, col 134 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3542, col 67 to line 3542, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3544, col 78 to line 3544, col 168 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3545, col 78 to line 3547, col 170 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3548, col 78 to line 3548, col 168 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3549, col 78 to line 3552, col 220 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3553, col 67 to line 3553, col 137 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3558, col 78 to line 3558, col 141 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3560, col 89 to line 3560, col 179 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3561, col 89 to line 3564, col 231 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3565, col 89 to line 3565, col 159 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3567, col 89 to line 3569, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3574, col 89 to line 3574, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3578, col 100 to line 3578, col 190 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3579, col 100 to line 3582, col 242 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3583, col 100 to line 3583, col 170 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3585, col 100 to line 3587, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3590, col 89 to line 3593, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3594, col 67 to line 3594, col 93 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3595, col 56 to line 3598, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3599, col 45 to line 3599, col 56 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3600, col 34 to line 3600, col 120 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3601, col 34 to line 3601, col 83 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3602, col 34 to line 3637, col 78 of module SwitchCompleteTransientFailure: 11201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ghostProc line 3641, col 1 to line 3641, col 15 of module SwitchCompleteTransientFailure>: 40908:119800
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3641, col 23 to line 3641, col 44 of module SwitchCompleteTransientFailure: 3995236
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3641, col 23 to line 3641, col 30 of module SwitchCompleteTransientFailure: 3875436
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3642, col 26 to line 3642, col 58 of module SwitchCompleteTransientFailure: 3995238
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3642, col 26 to line 3642, col 35 of module SwitchCompleteTransientFailure: 3875438
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3642, col 39 to line 3642, col 58 of module SwitchCompleteTransientFailure: 3875438
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3643, col 26 to line 3643, col 48 of module SwitchCompleteTransientFailure: 359400
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3643, col 26 to line 3643, col 38 of module SwitchCompleteTransientFailure: 239600
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3643, col 42 to line 3643, col 48 of module SwitchCompleteTransientFailure: 239600
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3644, col 26 to line 3644, col 62 of module SwitchCompleteTransientFailure: 239600
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3644, col 26 to line 3644, col 39 of module SwitchCompleteTransientFailure: 119800
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3644, col 43 to line 3644, col 62 of module SwitchCompleteTransientFailure: 119800
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3645, col 26 to line 3645, col 97 of module SwitchCompleteTransientFailure: 119800
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3645, col 26 to line 3645, col 65 of module SwitchCompleteTransientFailure: 119800
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3645, col 70 to line 3645, col 97 of module SwitchCompleteTransientFailure: 124
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3647, col 31 to line 3658, col 70 of module SwitchCompleteTransientFailure: 119800
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3659, col 23 to line 3661, col 114 of module SwitchCompleteTransientFailure: 119800
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3662, col 23 to line 3662, col 56 of module SwitchCompleteTransientFailure: 119800
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3663, col 23 to line 3663, col 61 of module SwitchCompleteTransientFailure: 119800
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3664, col 23 to line 3694, col 67 of module SwitchCompleteTransientFailure: 119800
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<RCSNIBEventHndlerProc line 3698, col 1 to line 3698, col 27 of module SwitchCompleteTransientFailure>: 70168:1268182
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3698, col 35 to line 3698, col 68 of module SwitchCompleteTransientFailure: 3205905
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3698, col 35 to line 3698, col 42 of module SwitchCompleteTransientFailure: 1937722
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 1937722
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 3205907
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 1937722
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3699, col 54 to line 3699, col 60 of module SwitchCompleteTransientFailure: 1937722
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 3205907
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 1937722
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1937722
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3700, col 46 to line 3700, col 49 of module SwitchCompleteTransientFailure: 1937722
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3701, col 35 to line 3701, col 65 of module SwitchCompleteTransientFailure: 3205907
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3701, col 35 to line 3701, col 58 of module SwitchCompleteTransientFailure: 1937722
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3701, col 62 to line 3701, col 65 of module SwitchCompleteTransientFailure: 1937722
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3702, col 35 to line 3702, col 98 of module SwitchCompleteTransientFailure: 1268185
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3703, col 35 to line 3704, col 88 of module SwitchCompleteTransientFailure: 1268185
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3705, col 39 to line 3705, col 66 of module SwitchCompleteTransientFailure: 1268185
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3706, col 49 to line 3706, col 115 of module SwitchCompleteTransientFailure: 37254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3707, col 54 to line 3708, col 150 of module SwitchCompleteTransientFailure: 37254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3710, col 57 to line 3711, col 92 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3712, col 46 to line 3713, col 76 of module SwitchCompleteTransientFailure: 37254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3714, col 50 to line 3714, col 75 of module SwitchCompleteTransientFailure: 1230931
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3715, col 60 to line 3715, col 116 of module SwitchCompleteTransientFailure: 1230931
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3716, col 68 to line 3716, col 149 of module SwitchCompleteTransientFailure: 1199019
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3716, col 82 to line 3716, col 149 of module SwitchCompleteTransientFailure: 1199019
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3717, col 71 to line 3717, col 120 of module SwitchCompleteTransientFailure: 1199019
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3718, col 76 to line 3718, col 207 of module SwitchCompleteTransientFailure: 1199017
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3720, col 79 to line 3720, col 103 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3721, col 68 to line 3721, col 71 of module SwitchCompleteTransientFailure: 31912
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3722, col 68 to line 3723, col 98 of module SwitchCompleteTransientFailure: 31912
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3725, col 57 to line 3726, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3727, col 46 to line 3728, col 81 of module SwitchCompleteTransientFailure: 1230929
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3729, col 35 to line 3729, col 121 of module SwitchCompleteTransientFailure: 1268185
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3730, col 35 to line 3730, col 85 of module SwitchCompleteTransientFailure: 1268186
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3731, col 35 to line 3774, col 79 of module SwitchCompleteTransientFailure: 1268183
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEProc line 3778, col 1 to line 3778, col 22 of module SwitchCompleteTransientFailure>: 120253:120839
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3778, col 30 to line 3778, col 58 of module SwitchCompleteTransientFailure: 2058536
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3778, col 30 to line 3778, col 37 of module SwitchCompleteTransientFailure: 1937723
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 741595
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 862408
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 741595
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3779, col 49 to line 3779, col 55 of module SwitchCompleteTransientFailure: 741595
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 862408
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 741595
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 741595
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3780, col 41 to line 3780, col 44 of module SwitchCompleteTransientFailure: 741595
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3781, col 30 to line 3781, col 43 of module SwitchCompleteTransientFailure: 741658
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3781, col 30 to line 3781, col 39 of module SwitchCompleteTransientFailure: 741595
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3781, col 48 to line 3781, col 75 of module SwitchCompleteTransientFailure: 862371
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3781, col 48 to line 3781, col 68 of module SwitchCompleteTransientFailure: 741595
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3781, col 72 to line 3781, col 75 of module SwitchCompleteTransientFailure: 741595
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3782, col 30 to line 3782, col 76 of module SwitchCompleteTransientFailure: 251696
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3782, col 30 to line 3782, col 43 of module SwitchCompleteTransientFailure: 130857
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3782, col 49 to line 3782, col 76 of module SwitchCompleteTransientFailure: 130857
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3783, col 30 to line 3783, col 62 of module SwitchCompleteTransientFailure: 251696
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3783, col 30 to line 3783, col 39 of module SwitchCompleteTransientFailure: 130857
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3783, col 43 to line 3783, col 62 of module SwitchCompleteTransientFailure: 130857
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3784, col 30 to line 3784, col 51 of module SwitchCompleteTransientFailure: 120839
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3785, col 30 to line 3785, col 86 of module SwitchCompleteTransientFailure: 120839
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3786, col 30 to line 3825, col 68 of module SwitchCompleteTransientFailure: 120839
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEEventProcessing line 3827, col 1 to line 3827, col 33 of module SwitchCompleteTransientFailure>: 126980:237854
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3827, col 41 to line 3827, col 80 of module SwitchCompleteTransientFailure: 2175579
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3827, col 41 to line 3827, col 48 of module SwitchCompleteTransientFailure: 1937725
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3828, col 44 to line 3828, col 71 of module SwitchCompleteTransientFailure: 237854
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3829, col 52 to line 3829, col 98 of module SwitchCompleteTransientFailure: 248282
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3829, col 52 to line 3829, col 65 of module SwitchCompleteTransientFailure: 124141
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3829, col 71 to line 3829, col 98 of module SwitchCompleteTransientFailure: 124141
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3830, col 52 to line 3830, col 84 of module SwitchCompleteTransientFailure: 248282
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3830, col 52 to line 3830, col 61 of module SwitchCompleteTransientFailure: 124141
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3830, col 65 to line 3830, col 84 of module SwitchCompleteTransientFailure: 124141
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3831, col 52 to line 3831, col 132 of module SwitchCompleteTransientFailure: 124141
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3832, col 52 to line 3833, col 106 of module SwitchCompleteTransientFailure: 124141
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3834, col 55 to line 3834, col 95 of module SwitchCompleteTransientFailure: 124141
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3835, col 60 to line 3835, col 164 of module SwitchCompleteTransientFailure: 12680
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3836, col 60 to line 3836, col 161 of module SwitchCompleteTransientFailure: 111461
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3837, col 52 to line 3837, col 129 of module SwitchCompleteTransientFailure: 124141
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3838, col 52 to line 3838, col 108 of module SwitchCompleteTransientFailure: 124141
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3839, col 52 to line 3839, col 75 of module SwitchCompleteTransientFailure: 124141
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3840, col 52 to line 3840, col 98 of module SwitchCompleteTransientFailure: 227426
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3840, col 52 to line 3840, col 65 of module SwitchCompleteTransientFailure: 113713
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3840, col 71 to line 3840, col 98 of module SwitchCompleteTransientFailure: 113713
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3841, col 52 to line 3841, col 84 of module SwitchCompleteTransientFailure: 227426
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3841, col 52 to line 3841, col 61 of module SwitchCompleteTransientFailure: 113713
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3841, col 65 to line 3841, col 84 of module SwitchCompleteTransientFailure: 113713
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3842, col 52 to line 3842, col 89 of module SwitchCompleteTransientFailure: 113713
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3843, col 52 to line 3843, col 114 of module SwitchCompleteTransientFailure: 113713
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3844, col 52 to line 3846, col 80 of module SwitchCompleteTransientFailure: 113713
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3847, col 41 to line 3903, col 79 of module SwitchCompleteTransientFailure: 237854
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEComputeDagBasedOnTopo line 3905, col 1 to line 3905, col 39 of module SwitchCompleteTransientFailure>: 4090:117363
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3905, col 47 to line 3905, col 92 of module SwitchCompleteTransientFailure: 2055088
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3905, col 47 to line 3905, col 54 of module SwitchCompleteTransientFailure: 1937725
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3906, col 47 to line 3906, col 93 of module SwitchCompleteTransientFailure: 243890
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3906, col 47 to line 3906, col 60 of module SwitchCompleteTransientFailure: 126527
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3906, col 66 to line 3906, col 93 of module SwitchCompleteTransientFailure: 126527
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3907, col 47 to line 3907, col 79 of module SwitchCompleteTransientFailure: 243890
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3907, col 47 to line 3907, col 56 of module SwitchCompleteTransientFailure: 126527
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3907, col 60 to line 3907, col 79 of module SwitchCompleteTransientFailure: 126527
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3908, col 47 to line 3908, col 77 of module SwitchCompleteTransientFailure: 117363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3909, col 47 to line 3909, col 144 of module SwitchCompleteTransientFailure: 117363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3910, col 50 to line 3910, col 83 of module SwitchCompleteTransientFailure: 117363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3911, col 58 to line 3911, col 103 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3912, col 58 to line 3915, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3916, col 58 to line 3916, col 128 of module SwitchCompleteTransientFailure: 117363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3917, col 61 to line 3917, col 74 of module SwitchCompleteTransientFailure: 117363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3918, col 69 to line 3918, col 130 of module SwitchCompleteTransientFailure: 117270
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3919, col 69 to line 3919, col 127 of module SwitchCompleteTransientFailure: 117270
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3920, col 69 to line 3921, col 88 of module SwitchCompleteTransientFailure: 117270
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3922, col 69 to line 3922, col 101 of module SwitchCompleteTransientFailure: 93
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3923, col 69 to line 3923, col 120 of module SwitchCompleteTransientFailure: 93
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3924, col 69 to line 3924, col 130 of module SwitchCompleteTransientFailure: 93
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3925, col 69 to line 3925, col 86 of module SwitchCompleteTransientFailure: 93
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3926, col 47 to line 3997, col 85 of module SwitchCompleteTransientFailure: 117363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTESendDagStaleNotif line 3999, col 1 to line 3999, col 35 of module SwitchCompleteTransientFailure>: 3738:174485
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3999, col 43 to line 3999, col 84 of module SwitchCompleteTransientFailure: 2112210
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3999, col 43 to line 3999, col 50 of module SwitchCompleteTransientFailure: 1937725
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4000, col 43 to line 4000, col 89 of module SwitchCompleteTransientFailure: 362943
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4000, col 43 to line 4000, col 56 of module SwitchCompleteTransientFailure: 188458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4000, col 62 to line 4000, col 89 of module SwitchCompleteTransientFailure: 188458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4001, col 43 to line 4001, col 75 of module SwitchCompleteTransientFailure: 362943
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4001, col 43 to line 4001, col 52 of module SwitchCompleteTransientFailure: 188458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4001, col 56 to line 4001, col 75 of module SwitchCompleteTransientFailure: 188458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4002, col 43 to line 4002, col 173 of module SwitchCompleteTransientFailure: 174485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4003, col 43 to line 4003, col 110 of module SwitchCompleteTransientFailure: 174485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4004, col 43 to line 4067, col 81 of module SwitchCompleteTransientFailure: 174485
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEWaitForStaleDAGToBeRemoved line 4069, col 1 to line 4069, col 44 of module SwitchCompleteTransientFailure>: 3341:84747
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4069, col 52 to line 4069, col 102 of module SwitchCompleteTransientFailure: 2022472
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4069, col 52 to line 4069, col 59 of module SwitchCompleteTransientFailure: 1937725
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4070, col 52 to line 4070, col 98 of module SwitchCompleteTransientFailure: 454666
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4070, col 52 to line 4070, col 65 of module SwitchCompleteTransientFailure: 369919
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4070, col 71 to line 4070, col 98 of module SwitchCompleteTransientFailure: 369919
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4071, col 52 to line 4071, col 84 of module SwitchCompleteTransientFailure: 454666
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4071, col 52 to line 4071, col 61 of module SwitchCompleteTransientFailure: 369919
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4071, col 65 to line 4071, col 84 of module SwitchCompleteTransientFailure: 369919
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4072, col 52 to line 4072, col 89 of module SwitchCompleteTransientFailure: 427917
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4072, col 52 to line 4072, col 78 of module SwitchCompleteTransientFailure: 343170
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4072, col 82 to line 4072, col 89 of module SwitchCompleteTransientFailure: 343170
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4073, col 52 to line 4073, col 102 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4074, col 52 to line 4074, col 107 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4075, col 52 to line 4075, col 180 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4075, col 71 to line 4075, col 180 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4075, col 72 to line 4075, col 86 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4075, col 95 to line 4075, col 179 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4075, col 105 to line 4075, col 179 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2319, col 44 to line 2322, col 86 of module SwitchCompleteTransientFailure: 84747:5166
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2319, col 65 to line 2322, col 85 of module SwitchCompleteTransientFailure: 254241
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2319, col 68 to line 2320, col 101 of module SwitchCompleteTransientFailure: 254241
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2319, col 71 to line 2319, col 98 of module SwitchCompleteTransientFailure: 254241
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2320, col 71 to line 2320, col 101 of module SwitchCompleteTransientFailure: 166242
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2321, col 68 to line 2321, col 83 of module SwitchCompleteTransientFailure: 146902
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2322, col 68 to line 2322, col 85 of module SwitchCompleteTransientFailure: 52519
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2319, col 51 to line 2319, col 62 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4075, col 124 to line 4075, col 130 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4075, col 133 to line 4075, col 156 of module SwitchCompleteTransientFailure: 37985
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4075, col 159 to line 4075, col 178 of module SwitchCompleteTransientFailure: 83661
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4076, col 52 to line 4076, col 113 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4077, col 52 to line 4155, col 90 of module SwitchCompleteTransientFailure: 84747
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTERemoveUnnecessaryIRs line 4157, col 1 to line 4157, col 38 of module SwitchCompleteTransientFailure>: 37778:116034
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4157, col 46 to line 4157, col 90 of module SwitchCompleteTransientFailure: 2053759
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4157, col 46 to line 4157, col 53 of module SwitchCompleteTransientFailure: 1937725
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4158, col 49 to line 4158, col 74 of module SwitchCompleteTransientFailure: 122380
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4159, col 57 to line 4159, col 103 of module SwitchCompleteTransientFailure: 71846
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4159, col 57 to line 4159, col 70 of module SwitchCompleteTransientFailure: 37091
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4159, col 76 to line 4159, col 103 of module SwitchCompleteTransientFailure: 37091
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4160, col 57 to line 4160, col 89 of module SwitchCompleteTransientFailure: 71846
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4160, col 57 to line 4160, col 66 of module SwitchCompleteTransientFailure: 37091
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4160, col 70 to line 4160, col 89 of module SwitchCompleteTransientFailure: 37091
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4161, col 57 to line 4161, col 78 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4162, col 57 to line 4162, col 132 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4163, col 57 to line 4163, col 149 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4164, col 57 to line 4164, col 148 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4165, col 57 to line 4165, col 108 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4166, col 57 to line 4166, col 104 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4167, col 57 to line 4167, col 160 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4168, col 57 to line 4168, col 109 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4169, col 57 to line 4169, col 133 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4170, col 57 to line 4170, col 170 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4170, col 72 to line 4170, col 170 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4170, col 73 to line 4170, col 83 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4170, col 92 to line 4170, col 169 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4170, col 102 to line 4170, col 169 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2323, col 43 to line 2323, col 74 of module SwitchCompleteTransientFailure: 34755:2737
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2323, col 59 to line 2323, col 73 of module SwitchCompleteTransientFailure: 52808
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2323, col 50 to line 2323, col 56 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4170, col 126 to line 4170, col 146 of module SwitchCompleteTransientFailure: 52808
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4170, col 149 to line 4170, col 168 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4171, col 57 to line 4171, col 105 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4172, col 57 to line 4172, col 81 of module SwitchCompleteTransientFailure: 34755
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4173, col 57 to line 4173, col 103 of module SwitchCompleteTransientFailure: 166568
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4173, col 57 to line 4173, col 70 of module SwitchCompleteTransientFailure: 85289
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4173, col 76 to line 4173, col 103 of module SwitchCompleteTransientFailure: 85289
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4174, col 57 to line 4174, col 89 of module SwitchCompleteTransientFailure: 166568
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4174, col 57 to line 4174, col 66 of module SwitchCompleteTransientFailure: 85289
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4174, col 70 to line 4174, col 89 of module SwitchCompleteTransientFailure: 85289
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4175, col 57 to line 4175, col 94 of module SwitchCompleteTransientFailure: 81279
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4176, col 57 to line 4176, col 131 of module SwitchCompleteTransientFailure: 81279
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4177, col 57 to line 4177, col 110 of module SwitchCompleteTransientFailure: 81279
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4178, col 57 to line 4186, col 83 of module SwitchCompleteTransientFailure: 81279
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4187, col 46 to line 4251, col 84 of module SwitchCompleteTransientFailure: 116034
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEAddEdge line 4253, col 1 to line 4253, col 25 of module SwitchCompleteTransientFailure>: 68764:68793
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4253, col 33 to line 4253, col 64 of module SwitchCompleteTransientFailure: 2006523
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4253, col 33 to line 4253, col 40 of module SwitchCompleteTransientFailure: 1937730
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4254, col 36 to line 4254, col 57 of module SwitchCompleteTransientFailure: 68793
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4255, col 44 to line 4255, col 90 of module SwitchCompleteTransientFailure: 69106
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4255, col 44 to line 4255, col 57 of module SwitchCompleteTransientFailure: 34553
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4255, col 63 to line 4255, col 90 of module SwitchCompleteTransientFailure: 34553
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4256, col 44 to line 4256, col 76 of module SwitchCompleteTransientFailure: 69106
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4256, col 44 to line 4256, col 53 of module SwitchCompleteTransientFailure: 34553
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4256, col 57 to line 4256, col 76 of module SwitchCompleteTransientFailure: 34553
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4257, col 44 to line 4257, col 65 of module SwitchCompleteTransientFailure: 34553
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4258, col 44 to line 4258, col 125 of module SwitchCompleteTransientFailure: 34553
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4259, col 44 to line 4259, col 129 of module SwitchCompleteTransientFailure: 34553
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4260, col 44 to line 4260, col 144 of module SwitchCompleteTransientFailure: 34553
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4261, col 44 to line 4261, col 92 of module SwitchCompleteTransientFailure: 34553
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4262, col 44 to line 4262, col 62 of module SwitchCompleteTransientFailure: 34553
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4263, col 44 to line 4263, col 69 of module SwitchCompleteTransientFailure: 34240
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4264, col 44 to line 4264, col 90 of module SwitchCompleteTransientFailure: 68480
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4264, col 44 to line 4264, col 57 of module SwitchCompleteTransientFailure: 34240
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4264, col 63 to line 4264, col 90 of module SwitchCompleteTransientFailure: 34240
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4265, col 44 to line 4265, col 76 of module SwitchCompleteTransientFailure: 68480
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4265, col 44 to line 4265, col 53 of module SwitchCompleteTransientFailure: 34240
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4265, col 57 to line 4265, col 76 of module SwitchCompleteTransientFailure: 34240
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4266, col 44 to line 4266, col 65 of module SwitchCompleteTransientFailure: 34240
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4267, col 44 to line 4267, col 105 of module SwitchCompleteTransientFailure: 34240
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4268, col 44 to line 4269, col 70 of module SwitchCompleteTransientFailure: 34240
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4270, col 33 to line 4311, col 71 of module SwitchCompleteTransientFailure: 68793
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTESubmitNewDAG line 4313, col 1 to line 4313, col 30 of module SwitchCompleteTransientFailure>: 3461:76126
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4313, col 38 to line 4313, col 74 of module SwitchCompleteTransientFailure: 2013863
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4313, col 38 to line 4313, col 45 of module SwitchCompleteTransientFailure: 1937737
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4314, col 38 to line 4314, col 84 of module SwitchCompleteTransientFailure: 158325
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4314, col 38 to line 4314, col 51 of module SwitchCompleteTransientFailure: 82199
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4314, col 57 to line 4314, col 84 of module SwitchCompleteTransientFailure: 82199
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4315, col 38 to line 4315, col 70 of module SwitchCompleteTransientFailure: 158325
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4315, col 38 to line 4315, col 47 of module SwitchCompleteTransientFailure: 82199
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4315, col 51 to line 4315, col 70 of module SwitchCompleteTransientFailure: 82199
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4316, col 38 to line 4316, col 98 of module SwitchCompleteTransientFailure: 76126
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4317, col 38 to line 4317, col 166 of module SwitchCompleteTransientFailure: 76126
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4318, col 38 to line 4318, col 83 of module SwitchCompleteTransientFailure: 76126
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4319, col 38 to line 4372, col 76 of module SwitchCompleteTransientFailure: 76126
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerBossSeqProc line 4383, col 1 to line 4383, col 27 of module SwitchCompleteTransientFailure>: 7108:263362
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4383, col 35 to line 4383, col 68 of module SwitchCompleteTransientFailure: 2201101
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4383, col 35 to line 4383, col 42 of module SwitchCompleteTransientFailure: 1937738
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 1841252
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 2104615
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 1841252
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4384, col 54 to line 4384, col 60 of module SwitchCompleteTransientFailure: 1841252
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 2104615
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 1841252
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1841252
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4385, col 46 to line 4385, col 49 of module SwitchCompleteTransientFailure: 1841252
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4386, col 35 to line 4386, col 63 of module SwitchCompleteTransientFailure: 2104615
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4386, col 35 to line 4386, col 56 of module SwitchCompleteTransientFailure: 1841252
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4386, col 60 to line 4386, col 63 of module SwitchCompleteTransientFailure: 1841252
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4387, col 35 to line 4387, col 81 of module SwitchCompleteTransientFailure: 569374
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4387, col 35 to line 4387, col 48 of module SwitchCompleteTransientFailure: 306011
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4387, col 54 to line 4387, col 81 of module SwitchCompleteTransientFailure: 306011
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4388, col 35 to line 4388, col 67 of module SwitchCompleteTransientFailure: 547558
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4388, col 35 to line 4388, col 44 of module SwitchCompleteTransientFailure: 284195
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4388, col 48 to line 4388, col 67 of module SwitchCompleteTransientFailure: 284195
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4389, col 35 to line 4389, col 102 of module SwitchCompleteTransientFailure: 263363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4390, col 35 to line 4390, col 115 of module SwitchCompleteTransientFailure: 263363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4391, col 35 to line 4392, col 88 of module SwitchCompleteTransientFailure: 263363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4393, col 38 to line 4393, col 67 of module SwitchCompleteTransientFailure: 263363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4394, col 46 to line 4394, col 138 of module SwitchCompleteTransientFailure: 105412
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4395, col 46 to line 4395, col 96 of module SwitchCompleteTransientFailure: 105412
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4396, col 46 to line 4398, col 67 of module SwitchCompleteTransientFailure: 105412
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4399, col 46 to line 4399, col 121 of module SwitchCompleteTransientFailure: 157951
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4399, col 56 to line 4399, col 121 of module SwitchCompleteTransientFailure: 157951
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4400, col 49 to line 4400, col 74 of module SwitchCompleteTransientFailure: 157951
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4401, col 57 to line 4401, col 148 of module SwitchCompleteTransientFailure: 86577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4402, col 57 to line 4402, col 113 of module SwitchCompleteTransientFailure: 86577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4403, col 57 to line 4403, col 74 of module SwitchCompleteTransientFailure: 86577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4404, col 57 to line 4404, col 118 of module SwitchCompleteTransientFailure: 71374
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4404, col 69 to line 4404, col 118 of module SwitchCompleteTransientFailure: 71374
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4405, col 57 to line 4405, col 107 of module SwitchCompleteTransientFailure: 71374
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4406, col 57 to line 4406, col 83 of module SwitchCompleteTransientFailure: 71374
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4407, col 46 to line 4407, col 63 of module SwitchCompleteTransientFailure: 157951
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4408, col 35 to line 4452, col 79 of module SwitchCompleteTransientFailure: 263363
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<WaitForRCSeqWorkerTerminate line 4454, col 1 to line 4454, col 33 of module SwitchCompleteTransientFailure>: 1610:40524
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4454, col 41 to line 4454, col 80 of module SwitchCompleteTransientFailure: 1978262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4454, col 41 to line 4454, col 48 of module SwitchCompleteTransientFailure: 1937738
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4455, col 41 to line 4455, col 92 of module SwitchCompleteTransientFailure: 137010
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4455, col 41 to line 4455, col 79 of module SwitchCompleteTransientFailure: 96486
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4455, col 83 to line 4455, col 92 of module SwitchCompleteTransientFailure: 96486
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4456, col 41 to line 4456, col 101 of module SwitchCompleteTransientFailure: 40524
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4457, col 41 to line 4457, col 91 of module SwitchCompleteTransientFailure: 40524
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4458, col 41 to line 4519, col 79 of module SwitchCompleteTransientFailure: 40524
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerWorkerSeqProc line 4524, col 1 to line 4524, col 29 of module SwitchCompleteTransientFailure>: 5617:118105
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4524, col 37 to line 4524, col 72 of module SwitchCompleteTransientFailure: 2055846
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4524, col 37 to line 4524, col 44 of module SwitchCompleteTransientFailure: 1937741
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 794063
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 912168
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 794063
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4525, col 56 to line 4525, col 62 of module SwitchCompleteTransientFailure: 794063
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 912168
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 794063
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 794063
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4526, col 48 to line 4526, col 51 of module SwitchCompleteTransientFailure: 794063
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4527, col 37 to line 4527, col 60 of module SwitchCompleteTransientFailure: 912168
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4527, col 37 to line 4527, col 53 of module SwitchCompleteTransientFailure: 794063
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4527, col 57 to line 4527, col 60 of module SwitchCompleteTransientFailure: 794063
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4528, col 37 to line 4528, col 83 of module SwitchCompleteTransientFailure: 267258
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4528, col 37 to line 4528, col 50 of module SwitchCompleteTransientFailure: 149153
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4528, col 56 to line 4528, col 83 of module SwitchCompleteTransientFailure: 149153
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4529, col 37 to line 4529, col 69 of module SwitchCompleteTransientFailure: 245443
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4529, col 37 to line 4529, col 46 of module SwitchCompleteTransientFailure: 127338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4529, col 50 to line 4529, col 69 of module SwitchCompleteTransientFailure: 127338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4530, col 37 to line 4530, col 97 of module SwitchCompleteTransientFailure: 118105
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4531, col 37 to line 4531, col 120 of module SwitchCompleteTransientFailure: 118105
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4532, col 37 to line 4532, col 96 of module SwitchCompleteTransientFailure: 118105
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4533, col 37 to line 4583, col 75 of module SwitchCompleteTransientFailure: 118105
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerWorkerSeqScheduleDAG line 4585, col 1 to line 4585, col 36 of module SwitchCompleteTransientFailure>: 13992:287999
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4585, col 44 to line 4585, col 86 of module SwitchCompleteTransientFailure: 2225741
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4585, col 44 to line 4585, col 51 of module SwitchCompleteTransientFailure: 1937742
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4586, col 47 to line 4586, col 128 of module SwitchCompleteTransientFailure: 787043
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4586, col 47 to line 4586, col 95 of module SwitchCompleteTransientFailure: 787043
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4586, col 48 to line 4586, col 95 of module SwitchCompleteTransientFailure: 787043
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2331, col 35 to line 2331, col 79 of module SwitchCompleteTransientFailure: 787043
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2331, col 36 to line 2331, col 79 of module SwitchCompleteTransientFailure: 787043
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2331, col 52 to line 2331, col 79 of module SwitchCompleteTransientFailure: 878222
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2331, col 45 to line 2331, col 49 of module SwitchCompleteTransientFailure: 787043
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4586, col 69 to line 4586, col 75 of module SwitchCompleteTransientFailure: 787043
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4586, col 78 to line 4586, col 94 of module SwitchCompleteTransientFailure: 787043
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4586, col 100 to line 4586, col 128 of module SwitchCompleteTransientFailure: 767306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4587, col 55 to line 4587, col 101 of module SwitchCompleteTransientFailure: 633900
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4587, col 55 to line 4587, col 68 of module SwitchCompleteTransientFailure: 566472
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4587, col 74 to line 4587, col 101 of module SwitchCompleteTransientFailure: 566472
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4588, col 55 to line 4588, col 87 of module SwitchCompleteTransientFailure: 497646
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4588, col 55 to line 4588, col 64 of module SwitchCompleteTransientFailure: 430218
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4588, col 68 to line 4588, col 87 of module SwitchCompleteTransientFailure: 430218
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4589, col 55 to line 4589, col 165 of module SwitchCompleteTransientFailure: 67428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4589, col 75 to line 4589, col 165 of module SwitchCompleteTransientFailure: 395055
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4589, col 76 to line 4589, col 91 of module SwitchCompleteTransientFailure: 395055
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4589, col 100 to line 4589, col 164 of module SwitchCompleteTransientFailure: 395055
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4589, col 110 to line 4589, col 164 of module SwitchCompleteTransientFailure: 395055
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2327, col 43 to line 2330, col 94 of module SwitchCompleteTransientFailure: 395055:51493
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2327, col 57 to line 2330, col 93 of module SwitchCompleteTransientFailure: 810289
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2327, col 60 to line 2327, col 87 of module SwitchCompleteTransientFailure: 810289
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2328, col 60 to line 2328, col 93 of module SwitchCompleteTransientFailure: 615430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2325, col 40 to line 2326, col 87 of module SwitchCompleteTransientFailure: 615430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2325, col 41 to line 2326, col 87 of module SwitchCompleteTransientFailure: 615430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2325, col 57 to line 2326, col 87 of module SwitchCompleteTransientFailure: 1216526
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2325, col 60 to line 2325, col 78 of module SwitchCompleteTransientFailure: 1216526
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2326, col 60 to line 2326, col 87 of module SwitchCompleteTransientFailure: 294536
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2325, col 50 to line 2325, col 54 of module SwitchCompleteTransientFailure: 615430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2328, col 82 to line 2328, col 84 of module SwitchCompleteTransientFailure: 283398
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2328, col 87 to line 2328, col 89 of module SwitchCompleteTransientFailure: 615430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2328, col 92 to line 2328, col 92 of module SwitchCompleteTransientFailure: 615430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2329, col 60 to line 2329, col 103 of module SwitchCompleteTransientFailure: 358956
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2330, col 60 to line 2330, col 93 of module SwitchCompleteTransientFailure: 356898
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2327, col 50 to line 2327, col 54 of module SwitchCompleteTransientFailure: 395055
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4589, col 138 to line 4589, col 144 of module SwitchCompleteTransientFailure: 395055
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4589, col 147 to line 4589, col 163 of module SwitchCompleteTransientFailure: 395055
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4590, col 55 to line 4590, col 82 of module SwitchCompleteTransientFailure: 462483
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4590, col 55 to line 4590, col 77 of module SwitchCompleteTransientFailure: 395055
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4590, col 81 to line 4590, col 82 of module SwitchCompleteTransientFailure: 395055
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4591, col 55 to line 4591, col 102 of module SwitchCompleteTransientFailure: 67428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4592, col 55 to line 4594, col 87 of module SwitchCompleteTransientFailure: 67428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4595, col 55 to line 4595, col 120 of module SwitchCompleteTransientFailure: 220571
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4596, col 55 to line 4596, col 140 of module SwitchCompleteTransientFailure: 220571
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4597, col 55 to line 4597, col 129 of module SwitchCompleteTransientFailure: 220571
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4598, col 55 to line 4598, col 107 of module SwitchCompleteTransientFailure: 220571
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4599, col 55 to line 4599, col 80 of module SwitchCompleteTransientFailure: 220571
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4600, col 44 to line 4663, col 82 of module SwitchCompleteTransientFailure: 287999
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SchedulerMechanism line 4665, col 1 to line 4665, col 24 of module SwitchCompleteTransientFailure>: 8412:141265
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4665, col 32 to line 4665, col 62 of module SwitchCompleteTransientFailure: 2079014
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4665, col 32 to line 4665, col 39 of module SwitchCompleteTransientFailure: 1937749
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4666, col 32 to line 4666, col 78 of module SwitchCompleteTransientFailure: 318018
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4666, col 32 to line 4666, col 45 of module SwitchCompleteTransientFailure: 176753
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4666, col 51 to line 4666, col 78 of module SwitchCompleteTransientFailure: 176753
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4667, col 32 to line 4667, col 64 of module SwitchCompleteTransientFailure: 293493
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4667, col 32 to line 4667, col 41 of module SwitchCompleteTransientFailure: 152228
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4667, col 45 to line 4667, col 64 of module SwitchCompleteTransientFailure: 152228
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4668, col 36 to line 4668, col 107 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4670, col 45 to line 4670, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4671, col 40 to line 4671, col 95 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4672, col 36 to line 4672, col 60 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4673, col 43 to line 4673, col 119 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4674, col 47 to line 4674, col 71 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4675, col 54 to line 4675, col 171 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4676, col 58 to line 4676, col 82 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4677, col 62 to line 4677, col 192 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4679, col 65 to line 4679, col 89 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4681, col 54 to line 4682, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4684, col 43 to line 4685, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4686, col 36 to line 4686, col 60 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4687, col 43 to line 4687, col 126 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4688, col 43 to line 4688, col 160 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4689, col 43 to line 4689, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4690, col 43 to line 4690, col 85 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4691, col 43 to line 4692, col 85 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4693, col 32 to line 4730, col 70 of module SwitchCompleteTransientFailure: 141265
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ScheduleTheIR line 4732, col 1 to line 4732, col 19 of module SwitchCompleteTransientFailure>: 8530:144030
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4732, col 27 to line 4732, col 52 of module SwitchCompleteTransientFailure: 2081781
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4732, col 27 to line 4732, col 34 of module SwitchCompleteTransientFailure: 1937751
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4733, col 27 to line 4733, col 73 of module SwitchCompleteTransientFailure: 323912
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4733, col 27 to line 4733, col 40 of module SwitchCompleteTransientFailure: 179882
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4733, col 46 to line 4733, col 73 of module SwitchCompleteTransientFailure: 179882
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4734, col 27 to line 4734, col 59 of module SwitchCompleteTransientFailure: 299477
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4734, col 27 to line 4734, col 36 of module SwitchCompleteTransientFailure: 155447
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4734, col 40 to line 4734, col 59 of module SwitchCompleteTransientFailure: 155447
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4735, col 31 to line 4735, col 102 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4737, col 40 to line 4737, col 94 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4738, col 35 to line 4738, col 90 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4739, col 31 to line 4739, col 55 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4740, col 38 to line 4740, col 108 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4741, col 38 to line 4741, col 130 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4742, col 42 to line 4742, col 66 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4743, col 46 to line 4743, col 128 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4745, col 49 to line 4745, col 76 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4747, col 38 to line 4748, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4749, col 31 to line 4749, col 55 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4750, col 38 to line 4750, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4751, col 38 to line 4751, col 155 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4752, col 38 to line 4752, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4753, col 41 to line 4753, col 100 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4753, col 41 to line 4753, col 68 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4753, col 73 to line 4753, col 100 of module SwitchCompleteTransientFailure: 16312
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4754, col 46 to line 4754, col 108 of module SwitchCompleteTransientFailure: 127718
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4755, col 46 to line 4755, col 96 of module SwitchCompleteTransientFailure: 16312
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4756, col 38 to line 4757, col 80 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4758, col 27 to line 4788, col 76 of module SwitchCompleteTransientFailure: 144030
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerSeqStateReconciliation line 4790, col 1 to line 4790, col 38 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4790, col 46 to line 4790, col 90 of module SwitchCompleteTransientFailure: 1937758
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4795, col 46 to line 4795, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4797, col 57 to line 4797, col 227 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4799, col 57 to line 4799, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4800, col 46 to line 4800, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4801, col 46 to line 4872, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThread line 4880, col 1 to line 4880, col 22 of module SwitchCompleteTransientFailure>: 17109:96305
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4880, col 30 to line 4880, col 58 of module SwitchCompleteTransientFailure: 2019605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4880, col 30 to line 4880, col 37 of module SwitchCompleteTransientFailure: 1937759
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 90 of module SwitchCompleteTransientFailure: 502456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 42 to line 2301, col 60 of module SwitchCompleteTransientFailure: 502456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 65 to line 2301, col 92 of module SwitchCompleteTransientFailure: 584302
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2301, col 65 to line 2301, col 80 of module SwitchCompleteTransientFailure: 502456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4881, col 49 to line 4881, col 55 of module SwitchCompleteTransientFailure: 502456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 584302
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 502456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 502456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4882, col 41 to line 4882, col 44 of module SwitchCompleteTransientFailure: 502456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4883, col 30 to line 4883, col 46 of module SwitchCompleteTransientFailure: 584302
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4883, col 30 to line 4883, col 39 of module SwitchCompleteTransientFailure: 502456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4883, col 43 to line 4883, col 46 of module SwitchCompleteTransientFailure: 502456
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2341, col 77 to line 2341, col 92 of module SwitchCompleteTransientFailure: 112343
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2341, col 55 to line 2341, col 74 of module SwitchCompleteTransientFailure: 96312
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 96312:208655
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 113529
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 96312
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2341, col 64 to line 2341, col 73 of module SwitchCompleteTransientFailure: 96312
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2342, col 80 to line 2342, col 93 of module SwitchCompleteTransientFailure: 208648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2342, col 80 to line 2342, col 84 of module SwitchCompleteTransientFailure: 112343
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2342, col 88 to line 2342, col 93 of module SwitchCompleteTransientFailure: 112343
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2342, col 58 to line 2342, col 77 of module SwitchCompleteTransientFailure: 96313
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 96313:208657
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 113530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 96313
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2342, col 67 to line 2342, col 76 of module SwitchCompleteTransientFailure: 96313
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2307, col 32 to line 2307, col 79 of module SwitchCompleteTransientFailure: 208650
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2307, col 33 to line 2307, col 79 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2307, col 64 to line 2307, col 79 of module SwitchCompleteTransientFailure: 146882
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2307, col 42 to line 2307, col 61 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 112344:259226
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 148630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2307, col 51 to line 2307, col 60 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2343, col 67 to line 2343, col 74 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2344, col 49 to line 2344, col 139 of module SwitchCompleteTransientFailure: 208650
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2344, col 49 to line 2344, col 80 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2344, col 84 to line 2344, col 139 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2344, col 88 to line 2344, col 138 of module SwitchCompleteTransientFailure: 112344:337032
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2344, col 89 to line 2344, col 110 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2344, col 119 to line 2344, col 137 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||line 2339, col 24 to line 2340, col 109 of module SwitchCompleteTransientFailure: 112344:224688
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2339, col 55 to line 2340, col 108 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2339, col 58 to line 2339, col 86 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2307, col 32 to line 2307, col 79 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2307, col 33 to line 2307, col 79 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 64 to line 2307, col 79 of module SwitchCompleteTransientFailure: 146882
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 42 to line 2307, col 61 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 112344:259226
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 148630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||||line 2307, col 51 to line 2307, col 60 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2339, col 76 to line 2339, col 85 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2340, col 58 to line 2340, col 108 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2339, col 31 to line 2339, col 52 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2344, col 134 to line 2344, col 136 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4884, col 54 to line 4884, col 60 of module SwitchCompleteTransientFailure: 96313
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4884, col 63 to line 4884, col 66 of module SwitchCompleteTransientFailure: 96313
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4885, col 30 to line 4885, col 76 of module SwitchCompleteTransientFailure: 208650
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4885, col 30 to line 4885, col 43 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4885, col 49 to line 4885, col 76 of module SwitchCompleteTransientFailure: 112344
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4886, col 30 to line 4886, col 62 of module SwitchCompleteTransientFailure: 192612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4886, col 30 to line 4886, col 39 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4886, col 43 to line 4886, col 62 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4887, col 30 to line 4887, col 96 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4887, col 42 to line 4887, col 96 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4887, col 43 to line 4887, col 50 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4887, col 59 to line 4887, col 95 of module SwitchCompleteTransientFailure: 96305
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4887, col 69 to line 4887, col 95 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2310, col 36 to line 2313, col 99 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2310, col 68 to line 2313, col 99 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2310, col 71 to line 2310, col 98 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2311, col 71 to line 2313, col 99 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2311, col 74 to line 2311, col 100 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2307, col 32 to line 2307, col 79 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2307, col 33 to line 2307, col 79 of module SwitchCompleteTransientFailure: 96306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 64 to line 2307, col 79 of module SwitchCompleteTransientFailure: 127574
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 42 to line 2307, col 61 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 96308:223882
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 129322
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||||line 2307, col 51 to line 2307, col 60 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2311, col 92 to line 2311, col 99 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2312, col 74 to line 2312, col 104 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2308, col 38 to line 2309, col 76 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2308, col 39 to line 2309, col 76 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2308, col 67 to line 2309, col 76 of module SwitchCompleteTransientFailure: 129322
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2308, col 48 to line 2308, col 64 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2312, col 103 to line 2312, col 103 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2313, col 74 to line 2313, col 99 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2310, col 49 to line 2310, col 65 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4887, col 91 to line 4887, col 94 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4888, col 30 to line 4888, col 107 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4889, col 30 to line 4889, col 92 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4890, col 34 to line 4890, col 105 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4892, col 43 to line 4892, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4893, col 38 to line 4893, col 95 of module SwitchCompleteTransientFailure: 96305
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4894, col 34 to line 4894, col 59 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4895, col 41 to line 4895, col 124 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4896, col 41 to line 4896, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4897, col 41 to line 4897, col 105 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4898, col 41 to line 4899, col 74 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4900, col 41 to line 4900, col 155 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4901, col 45 to line 4901, col 70 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4902, col 52 to line 4902, col 135 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4903, col 52 to line 4903, col 169 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4904, col 52 to line 4904, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4905, col 52 to line 4905, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4906, col 55 to line 4906, col 106 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2348, col 62 to line 2349, col 158 of module SwitchCompleteTransientFailure: 192616
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2348, col 62 to line 2348, col 93 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2348, col 97 to line 2349, col 158 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2348, col 101 to line 2349, col 157 of module SwitchCompleteTransientFailure: 96308:288924
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2348, col 102 to line 2348, col 123 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2349, col 111 to line 2349, col 156 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||line 2345, col 51 to line 2347, col 120 of module SwitchCompleteTransientFailure: 96308:192616
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2345, col 82 to line 2347, col 119 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2345, col 85 to line 2346, col 133 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2345, col 113 to line 2346, col 133 of module SwitchCompleteTransientFailure: 129154
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2345, col 116 to line 2345, col 125 of module SwitchCompleteTransientFailure: 129154
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2346, col 116 to line 2346, col 133 of module SwitchCompleteTransientFailure: 97888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2345, col 94 to line 2345, col 110 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 96308:225462
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 129322
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2345, col 103 to line 2345, col 109 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2347, col 85 to line 2347, col 119 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2345, col 58 to line 2345, col 79 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2349, col 139 to line 2349, col 141 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2349, col 144 to line 2349, col 146 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2349, col 149 to line 2349, col 155 of module SwitchCompleteTransientFailure: 96308
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 92 to line 4907, col 98 of module SwitchCompleteTransientFailure: 96309
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 101 to line 4907, col 104 of module SwitchCompleteTransientFailure: 96309
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 107 to line 4907, col 125 of module SwitchCompleteTransientFailure: 96309
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 128 to line 4907, col 138 of module SwitchCompleteTransientFailure: 96309
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4908, col 63 to line 4908, col 146 of module SwitchCompleteTransientFailure: 96309
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4909, col 63 to line 4909, col 114 of module SwitchCompleteTransientFailure: 96309
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4910, col 63 to line 4910, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4911, col 63 to line 4911, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4912, col 52 to line 4913, col 94 of module SwitchCompleteTransientFailure: 96305
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4914, col 30 to line 4948, col 68 of module SwitchCompleteTransientFailure: 96305
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadSendIR line 4950, col 1 to line 4950, col 28 of module SwitchCompleteTransientFailure>: 34905:77262
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4950, col 36 to line 4950, col 70 of module SwitchCompleteTransientFailure: 2015039
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4950, col 36 to line 4950, col 43 of module SwitchCompleteTransientFailure: 1937777
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4951, col 36 to line 4951, col 82 of module SwitchCompleteTransientFailure: 168720
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4951, col 36 to line 4951, col 49 of module SwitchCompleteTransientFailure: 91458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4951, col 55 to line 4951, col 82 of module SwitchCompleteTransientFailure: 91458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4952, col 36 to line 4952, col 68 of module SwitchCompleteTransientFailure: 154524
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4952, col 36 to line 4952, col 45 of module SwitchCompleteTransientFailure: 77262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4952, col 49 to line 4952, col 68 of module SwitchCompleteTransientFailure: 77262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4953, col 40 to line 4954, col 119 of module SwitchCompleteTransientFailure: 77262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4955, col 53 to line 4955, col 136 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4956, col 53 to line 4956, col 170 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4958, col 53 to line 4958, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4959, col 47 to line 4959, col 50 of module SwitchCompleteTransientFailure: 77262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4960, col 47 to line 4961, col 89 of module SwitchCompleteTransientFailure: 77262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4962, col 40 to line 4962, col 85 of module SwitchCompleteTransientFailure: 77262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4963, col 50 to line 4963, col 139 of module SwitchCompleteTransientFailure: 77262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4963, col 50 to line 4963, col 94 of module SwitchCompleteTransientFailure: 77262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4963, col 99 to line 4963, col 139 of module SwitchCompleteTransientFailure: 76776
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4964, col 55 to line 4966, col 112 of module SwitchCompleteTransientFailure: 64038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4967, col 58 to line 4967, col 118 of module SwitchCompleteTransientFailure: 13224
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4968, col 58 to line 4969, col 84 of module SwitchCompleteTransientFailure: 13224
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4970, col 47 to line 4970, col 111 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4971, col 47 to line 4972, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4973, col 36 to line 5019, col 80 of module SwitchCompleteTransientFailure: 77262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadForwardIR line 5021, col 1 to line 5021, col 31 of module SwitchCompleteTransientFailure>: 125559:125682
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5021, col 39 to line 5021, col 76 of module SwitchCompleteTransientFailure: 2063460
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5021, col 39 to line 5021, col 46 of module SwitchCompleteTransientFailure: 1937778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5022, col 39 to line 5022, col 85 of module SwitchCompleteTransientFailure: 278435
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5022, col 39 to line 5022, col 52 of module SwitchCompleteTransientFailure: 152753
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5022, col 58 to line 5022, col 85 of module SwitchCompleteTransientFailure: 152753
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5023, col 39 to line 5023, col 71 of module SwitchCompleteTransientFailure: 251364
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5023, col 39 to line 5023, col 48 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5023, col 52 to line 5023, col 71 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5024, col 43 to line 5024, col 114 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5026, col 52 to line 5026, col 108 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5027, col 47 to line 5027, col 104 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5028, col 43 to line 5028, col 68 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5029, col 50 to line 5030, col 142 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5031, col 50 to line 5032, col 142 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5033, col 50 to line 5035, col 231 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5036, col 53 to line 5036, col 114 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5037, col 61 to line 5037, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5038, col 58 to line 5038, col 117 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5039, col 54 to line 5039, col 79 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5040, col 58 to line 5040, col 176 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5042, col 61 to line 5042, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5044, col 50 to line 5046, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5047, col 43 to line 5047, col 68 of module SwitchCompleteTransientFailure: 125683
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5048, col 50 to line 5048, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5049, col 50 to line 5049, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5050, col 50 to line 5050, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5051, col 50 to line 5051, col 110 of module SwitchCompleteTransientFailure: 125683
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5052, col 50 to line 5053, col 92 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5054, col 39 to line 5103, col 77 of module SwitchCompleteTransientFailure: 125682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadUnlockSemaphore line 5105, col 1 to line 5105, col 37 of module SwitchCompleteTransientFailure>: 88745:443879
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5105, col 45 to line 5105, col 88 of module SwitchCompleteTransientFailure: 2381661
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5105, col 45 to line 5105, col 52 of module SwitchCompleteTransientFailure: 1937782
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5106, col 45 to line 5106, col 91 of module SwitchCompleteTransientFailure: 1109560
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5106, col 45 to line 5106, col 58 of module SwitchCompleteTransientFailure: 665681
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5106, col 64 to line 5106, col 91 of module SwitchCompleteTransientFailure: 665681
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5107, col 45 to line 5107, col 77 of module SwitchCompleteTransientFailure: 1007564
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5107, col 45 to line 5107, col 54 of module SwitchCompleteTransientFailure: 563685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5107, col 58 to line 5107, col 77 of module SwitchCompleteTransientFailure: 563685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5108, col 49 to line 5109, col 128 of module SwitchCompleteTransientFailure: 443879
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5110, col 62 to line 5110, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5111, col 62 to line 5111, col 179 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5113, col 62 to line 5113, col 130 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5114, col 56 to line 5114, col 59 of module SwitchCompleteTransientFailure: 443879
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5115, col 56 to line 5116, col 98 of module SwitchCompleteTransientFailure: 443879
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5117, col 49 to line 5117, col 94 of module SwitchCompleteTransientFailure: 443879
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5118, col 59 to line 5118, col 107 of module SwitchCompleteTransientFailure: 443879
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5119, col 64 to line 5119, col 151 of module SwitchCompleteTransientFailure: 443879
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5121, col 67 to line 5121, col 95 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5122, col 56 to line 5122, col 109 of module SwitchCompleteTransientFailure: 443879
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5123, col 56 to line 5123, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5124, col 56 to line 5124, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5125, col 45 to line 5192, col 83 of module SwitchCompleteTransientFailure: 443879
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<RemoveFromScheduledIRSet line 5194, col 1 to line 5194, col 30 of module SwitchCompleteTransientFailure>: 77508:425778
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5194, col 38 to line 5194, col 74 of module SwitchCompleteTransientFailure: 2363560
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5194, col 38 to line 5194, col 45 of module SwitchCompleteTransientFailure: 1937782
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5195, col 38 to line 5195, col 84 of module SwitchCompleteTransientFailure: 951205
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5195, col 38 to line 5195, col 51 of module SwitchCompleteTransientFailure: 525427
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5195, col 57 to line 5195, col 84 of module SwitchCompleteTransientFailure: 525427
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5196, col 38 to line 5196, col 70 of module SwitchCompleteTransientFailure: 851556
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5196, col 38 to line 5196, col 47 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5196, col 51 to line 5196, col 70 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5197, col 42 to line 5197, col 113 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5199, col 51 to line 5199, col 107 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5200, col 46 to line 5200, col 103 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5201, col 42 to line 5201, col 67 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5202, col 49 to line 5202, col 128 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5203, col 53 to line 5203, col 78 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5204, col 60 to line 5204, col 144 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5205, col 60 to line 5205, col 116 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5205, col 74 to line 5205, col 116 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2194, col 30 to line 2195, col 76 of module SwitchCompleteTransientFailure: 425778:108394
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5205, col 88 to line 5205, col 97 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5205, col 100 to line 5205, col 115 of module SwitchCompleteTransientFailure: 103651
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5207, col 60 to line 5208, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5210, col 49 to line 5212, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5213, col 42 to line 5213, col 67 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5214, col 49 to line 5214, col 132 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5215, col 49 to line 5215, col 166 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5216, col 49 to line 5216, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5217, col 49 to line 5217, col 94 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5218, col 49 to line 5219, col 91 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5220, col 38 to line 5268, col 76 of module SwitchCompleteTransientFailure: 425778
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadRemoveQueue1 line 5270, col 1 to line 5270, col 34 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5270, col 42 to line 5270, col 82 of module SwitchCompleteTransientFailure: 1937790
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5273, col 42 to line 5273, col 126 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5274, col 42 to line 5274, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5275, col 42 to line 5275, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5276, col 42 to line 5336, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadStateReconciliation line 5338, col 1 to line 5338, col 41 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5338, col 49 to line 5338, col 96 of module SwitchCompleteTransientFailure: 1937790
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5345, col 49 to line 5345, col 86 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5348, col 71 to line 5348, col 148 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5350, col 71 to line 5350, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5352, col 71 to line 5352, col 166 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5354, col 71 to line 5354, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5357, col 82 to line 5357, col 177 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5359, col 82 to line 5359, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5361, col 71 to line 5361, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5362, col 60 to line 5362, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5363, col 49 to line 5363, col 94 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5364, col 49 to line 5440, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerEventHandlerProc line 5450, col 1 to line 5450, col 32 of module SwitchCompleteTransientFailure>: 4660:13198
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5450, col 40 to line 5450, col 78 of module SwitchCompleteTransientFailure: 1950988
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5450, col 40 to line 5450, col 47 of module SwitchCompleteTransientFailure: 1937790
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 90 of module SwitchCompleteTransientFailure: 907688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 42 to line 2301, col 60 of module SwitchCompleteTransientFailure: 907688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 65 to line 2301, col 92 of module SwitchCompleteTransientFailure: 920886
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2301, col 65 to line 2301, col 80 of module SwitchCompleteTransientFailure: 907688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5451, col 59 to line 5451, col 65 of module SwitchCompleteTransientFailure: 907688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 920886
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 907688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 907688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5452, col 51 to line 5452, col 54 of module SwitchCompleteTransientFailure: 907688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5453, col 40 to line 5453, col 64 of module SwitchCompleteTransientFailure: 920886
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5453, col 40 to line 5453, col 57 of module SwitchCompleteTransientFailure: 907688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5453, col 61 to line 5453, col 64 of module SwitchCompleteTransientFailure: 907688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5454, col 40 to line 5454, col 86 of module SwitchCompleteTransientFailure: 29396
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5454, col 40 to line 5454, col 53 of module SwitchCompleteTransientFailure: 16198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5454, col 59 to line 5454, col 86 of module SwitchCompleteTransientFailure: 16198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5455, col 40 to line 5455, col 72 of module SwitchCompleteTransientFailure: 27194
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5455, col 40 to line 5455, col 49 of module SwitchCompleteTransientFailure: 13996
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5455, col 53 to line 5455, col 72 of module SwitchCompleteTransientFailure: 13996
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5456, col 40 to line 5456, col 117 of module SwitchCompleteTransientFailure: 13198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5457, col 43 to line 5457, col 141 of module SwitchCompleteTransientFailure: 13198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5457, col 43 to line 5457, col 81 of module SwitchCompleteTransientFailure: 13198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2354, col 30 to line 2357, col 83 of module SwitchCompleteTransientFailure: 13198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2354, col 33 to line 2354, col 56 of module SwitchCompleteTransientFailure: 13198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2355, col 33 to line 2355, col 61 of module SwitchCompleteTransientFailure: 13198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2356, col 33 to line 2357, col 83 of module SwitchCompleteTransientFailure: 12550
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5457, col 59 to line 5457, col 80 of module SwitchCompleteTransientFailure: 51496
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5457, col 86 to line 5457, col 141 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5458, col 48 to line 5458, col 99 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5459, col 54 to line 5459, col 159 of module SwitchCompleteTransientFailure: 12550
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5459, col 54 to line 5459, col 95 of module SwitchCompleteTransientFailure: 12550
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2358, col 33 to line 2359, col 84 of module SwitchCompleteTransientFailure: 12550
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5459, col 73 to line 5459, col 94 of module SwitchCompleteTransientFailure: 25100
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5459, col 100 to line 5459, col 159 of module SwitchCompleteTransientFailure: 12550
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5460, col 59 to line 5460, col 123 of module SwitchCompleteTransientFailure: 12550
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5461, col 62 to line 5461, col 132 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5462, col 40 to line 5519, col 78 of module SwitchCompleteTransientFailure: 13198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerEvenHanlderRemoveEventFromQueue line 5521, col 1 to line 5521, col 47 of module SwitchCompleteTransientFailure>: 109173:719620
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5521, col 55 to line 5521, col 108 of module SwitchCompleteTransientFailure: 2657414
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5521, col 55 to line 5521, col 62 of module SwitchCompleteTransientFailure: 1937794
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5522, col 55 to line 5522, col 101 of module SwitchCompleteTransientFailure: 1664671
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5522, col 55 to line 5522, col 68 of module SwitchCompleteTransientFailure: 945051
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5522, col 74 to line 5522, col 101 of module SwitchCompleteTransientFailure: 945051
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5523, col 55 to line 5523, col 87 of module SwitchCompleteTransientFailure: 1498332
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5523, col 55 to line 5523, col 64 of module SwitchCompleteTransientFailure: 778712
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5523, col 68 to line 5523, col 87 of module SwitchCompleteTransientFailure: 778712
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5524, col 59 to line 5524, col 130 of module SwitchCompleteTransientFailure: 719620
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5526, col 68 to line 5526, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5527, col 63 to line 5527, col 116 of module SwitchCompleteTransientFailure: 719620
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5528, col 59 to line 5528, col 82 of module SwitchCompleteTransientFailure: 719620
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5529, col 66 to line 5529, col 145 of module SwitchCompleteTransientFailure: 719620
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5530, col 70 to line 5530, col 93 of module SwitchCompleteTransientFailure: 719621
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5531, col 74 to line 5531, col 122 of module SwitchCompleteTransientFailure: 719620
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5533, col 77 to line 5533, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5535, col 66 to line 5536, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5537, col 59 to line 5537, col 82 of module SwitchCompleteTransientFailure: 719621
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5538, col 66 to line 5538, col 149 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5539, col 66 to line 5539, col 183 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5540, col 66 to line 5540, col 136 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5541, col 66 to line 5541, col 121 of module SwitchCompleteTransientFailure: 719620
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5542, col 66 to line 5543, col 108 of module SwitchCompleteTransientFailure: 719620
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5544, col 55 to line 5622, col 93 of module SwitchCompleteTransientFailure: 719620
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerSuspendSW line 5624, col 1 to line 5624, col 25 of module SwitchCompleteTransientFailure>: 311:648
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5624, col 33 to line 5624, col 64 of module SwitchCompleteTransientFailure: 1938444
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5624, col 33 to line 5624, col 40 of module SwitchCompleteTransientFailure: 1937796
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5625, col 33 to line 5625, col 79 of module SwitchCompleteTransientFailure: 1330
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5625, col 33 to line 5625, col 46 of module SwitchCompleteTransientFailure: 682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5625, col 52 to line 5625, col 79 of module SwitchCompleteTransientFailure: 682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5626, col 33 to line 5626, col 65 of module SwitchCompleteTransientFailure: 1324
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5626, col 33 to line 5626, col 42 of module SwitchCompleteTransientFailure: 676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5626, col 46 to line 5626, col 65 of module SwitchCompleteTransientFailure: 676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5627, col 37 to line 5628, col 116 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5629, col 50 to line 5629, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5630, col 50 to line 5630, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5632, col 50 to line 5632, col 118 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5633, col 44 to line 5633, col 47 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5634, col 44 to line 5635, col 86 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5636, col 37 to line 5636, col 82 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5637, col 41 to line 5640, col 114 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5641, col 44 to line 5641, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5642, col 44 to line 5643, col 77 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5644, col 33 to line 5683, col 71 of module SwitchCompleteTransientFailure: 648
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerCheckIfThisIsLastEvent line 5685, col 1 to line 5685, col 38 of module SwitchCompleteTransientFailure>: 4994:12510
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5685, col 46 to line 5685, col 90 of module SwitchCompleteTransientFailure: 1950307
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5685, col 46 to line 5685, col 53 of module SwitchCompleteTransientFailure: 1937797
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5686, col 46 to line 5686, col 92 of module SwitchCompleteTransientFailure: 27986
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5686, col 46 to line 5686, col 59 of module SwitchCompleteTransientFailure: 15476
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5686, col 65 to line 5686, col 92 of module SwitchCompleteTransientFailure: 15476
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5687, col 46 to line 5687, col 78 of module SwitchCompleteTransientFailure: 25790
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5687, col 46 to line 5687, col 55 of module SwitchCompleteTransientFailure: 13280
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5687, col 59 to line 5687, col 78 of module SwitchCompleteTransientFailure: 13280
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5688, col 50 to line 5689, col 129 of module SwitchCompleteTransientFailure: 12510
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5690, col 63 to line 5690, col 146 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5691, col 63 to line 5691, col 180 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5693, col 63 to line 5693, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5694, col 57 to line 5694, col 60 of module SwitchCompleteTransientFailure: 12510
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5695, col 57 to line 5696, col 99 of module SwitchCompleteTransientFailure: 12510
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5697, col 50 to line 5697, col 95 of module SwitchCompleteTransientFailure: 12510
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5698, col 60 to line 5698, col 113 of module SwitchCompleteTransientFailure: 12510
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5699, col 65 to line 5699, col 114 of module SwitchCompleteTransientFailure: 12510
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5700, col 68 to line 5700, col 122 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5701, col 57 to line 5701, col 127 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5702, col 46 to line 5773, col 84 of module SwitchCompleteTransientFailure: 12510
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<getIRsToBeChecked line 5775, col 1 to line 5775, col 23 of module SwitchCompleteTransientFailure>: 5188:12464
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5775, col 31 to line 5775, col 60 of module SwitchCompleteTransientFailure: 1950266
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5775, col 31 to line 5775, col 38 of module SwitchCompleteTransientFailure: 1937802
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5776, col 31 to line 5776, col 77 of module SwitchCompleteTransientFailure: 27894
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5776, col 31 to line 5776, col 44 of module SwitchCompleteTransientFailure: 15430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5776, col 50 to line 5776, col 77 of module SwitchCompleteTransientFailure: 15430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5777, col 31 to line 5777, col 63 of module SwitchCompleteTransientFailure: 25698
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5777, col 31 to line 5777, col 40 of module SwitchCompleteTransientFailure: 13234
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5777, col 44 to line 5777, col 63 of module SwitchCompleteTransientFailure: 13234
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5778, col 35 to line 5779, col 114 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5780, col 48 to line 5780, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5781, col 48 to line 5781, col 165 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5783, col 48 to line 5783, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5784, col 42 to line 5784, col 45 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5785, col 42 to line 5786, col 84 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5787, col 35 to line 5787, col 80 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5788, col 42 to line 5788, col 134 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5788, col 59 to line 5788, col 134 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5788, col 60 to line 5788, col 72 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5788, col 81 to line 5788, col 133 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5788, col 91 to line 5788, col 133 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2364, col 25 to line 2365, col 80 of module SwitchCompleteTransientFailure: 12464:18117
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2364, col 46 to line 2365, col 79 of module SwitchCompleteTransientFailure: 37392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2364, col 49 to line 2364, col 62 of module SwitchCompleteTransientFailure: 37392
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2365, col 49 to line 2365, col 79 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2364, col 32 to line 2364, col 43 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 5788, col 107 to line 5788, col 132 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5789, col 46 to line 5789, col 70 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5790, col 50 to line 5790, col 107 of module SwitchCompleteTransientFailure: 842
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5791, col 50 to line 5791, col 93 of module SwitchCompleteTransientFailure: 11622
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5792, col 42 to line 5792, col 112 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5793, col 42 to line 5793, col 64 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5794, col 31 to line 5831, col 69 of module SwitchCompleteTransientFailure: 12464
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ResetAllIRs line 5833, col 1 to line 5833, col 17 of module SwitchCompleteTransientFailure>: 7166:11577
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5833, col 25 to line 5833, col 48 of module SwitchCompleteTransientFailure: 1949379
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5833, col 25 to line 5833, col 32 of module SwitchCompleteTransientFailure: 1937802
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5834, col 25 to line 5834, col 71 of module SwitchCompleteTransientFailure: 26052
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5834, col 25 to line 5834, col 38 of module SwitchCompleteTransientFailure: 14475
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5834, col 44 to line 5834, col 71 of module SwitchCompleteTransientFailure: 14475
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5835, col 25 to line 5835, col 57 of module SwitchCompleteTransientFailure: 23902
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5835, col 25 to line 5835, col 34 of module SwitchCompleteTransientFailure: 12325
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5835, col 38 to line 5835, col 57 of module SwitchCompleteTransientFailure: 12325
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5836, col 29 to line 5837, col 108 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5838, col 42 to line 5838, col 125 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5839, col 42 to line 5839, col 159 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5841, col 42 to line 5841, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5842, col 36 to line 5842, col 39 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5843, col 36 to line 5844, col 78 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5845, col 29 to line 5845, col 74 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5846, col 36 to line 5846, col 111 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5847, col 36 to line 5847, col 123 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5848, col 36 to line 5848, col 98 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5849, col 36 to line 5850, col 156 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5851, col 39 to line 5851, col 63 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5852, col 44 to line 5852, col 101 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5853, col 47 to line 5853, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5854, col 36 to line 5854, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5855, col 36 to line 5856, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5857, col 25 to line 5888, col 63 of module SwitchCompleteTransientFailure: 11577
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerFreeSuspendedSW line 5890, col 1 to line 5890, col 31 of module SwitchCompleteTransientFailure>: 17526:31605
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5890, col 39 to line 5890, col 76 of module SwitchCompleteTransientFailure: 1969410
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5890, col 39 to line 5890, col 46 of module SwitchCompleteTransientFailure: 1937805
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5891, col 39 to line 5891, col 85 of module SwitchCompleteTransientFailure: 70594
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5891, col 39 to line 5891, col 52 of module SwitchCompleteTransientFailure: 38989
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5891, col 58 to line 5891, col 85 of module SwitchCompleteTransientFailure: 38989
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5892, col 39 to line 5892, col 71 of module SwitchCompleteTransientFailure: 65332
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5892, col 39 to line 5892, col 48 of module SwitchCompleteTransientFailure: 33727
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5892, col 52 to line 5892, col 71 of module SwitchCompleteTransientFailure: 33727
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5893, col 43 to line 5893, col 114 of module SwitchCompleteTransientFailure: 31605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5895, col 52 to line 5895, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5896, col 47 to line 5896, col 100 of module SwitchCompleteTransientFailure: 31605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5897, col 43 to line 5897, col 66 of module SwitchCompleteTransientFailure: 31605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5898, col 50 to line 5898, col 169 of module SwitchCompleteTransientFailure: 31605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5899, col 54 to line 5899, col 77 of module SwitchCompleteTransientFailure: 31605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5900, col 58 to line 5902, col 198 of module SwitchCompleteTransientFailure: 31605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5904, col 61 to line 5905, col 94 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5907, col 50 to line 5909, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5910, col 43 to line 5910, col 66 of module SwitchCompleteTransientFailure: 31605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5911, col 50 to line 5911, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5912, col 50 to line 5912, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5913, col 50 to line 5913, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5914, col 50 to line 5914, col 120 of module SwitchCompleteTransientFailure: 31605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5915, col 50 to line 5916, col 92 of module SwitchCompleteTransientFailure: 31605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5917, col 39 to line 5966, col 77 of module SwitchCompleteTransientFailure: 31605
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerEventHandlerStateReconciliation line 5968, col 1 to line 5968, col 47 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5968, col 55 to line 5968, col 108 of module SwitchCompleteTransientFailure: 1937807
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5974, col 55 to line 5974, col 92 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5976, col 66 to line 5976, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5977, col 66 to line 5978, col 207 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5980, col 66 to line 5981, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5982, col 55 to line 5982, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5983, col 55 to line 6063, col 93 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerMonitorCheckIfMastr line 6074, col 1 to line 6074, col 35 of module SwitchCompleteTransientFailure>: 212243:230052
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6074, col 43 to line 6074, col 84 of module SwitchCompleteTransientFailure: 2167859
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6074, col 43 to line 6074, col 50 of module SwitchCompleteTransientFailure: 1937807
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 90 of module SwitchCompleteTransientFailure: 818183
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 42 to line 2301, col 60 of module SwitchCompleteTransientFailure: 818183
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 65 to line 2301, col 92 of module SwitchCompleteTransientFailure: 1048235
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2301, col 65 to line 2301, col 80 of module SwitchCompleteTransientFailure: 818183
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6075, col 62 to line 6075, col 68 of module SwitchCompleteTransientFailure: 818183
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1048235
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 818183
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 818183
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6076, col 54 to line 6076, col 57 of module SwitchCompleteTransientFailure: 818183
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6077, col 43 to line 6077, col 66 of module SwitchCompleteTransientFailure: 1048235
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6077, col 43 to line 6077, col 59 of module SwitchCompleteTransientFailure: 818185
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6077, col 63 to line 6077, col 66 of module SwitchCompleteTransientFailure: 818185
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6078, col 43 to line 6078, col 89 of module SwitchCompleteTransientFailure: 523662
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6078, col 43 to line 6078, col 56 of module SwitchCompleteTransientFailure: 293608
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6078, col 62 to line 6078, col 89 of module SwitchCompleteTransientFailure: 293608
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6079, col 43 to line 6079, col 75 of module SwitchCompleteTransientFailure: 471168
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6079, col 43 to line 6079, col 52 of module SwitchCompleteTransientFailure: 241114
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6079, col 56 to line 6079, col 75 of module SwitchCompleteTransientFailure: 241114
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6080, col 43 to line 6080, col 80 of module SwitchCompleteTransientFailure: 230054
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6081, col 43 to line 6081, col 95 of module SwitchCompleteTransientFailure: 230054
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6082, col 43 to line 6085, col 96 of module SwitchCompleteTransientFailure: 230054
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6082, col 50 to line 6084, col 89 of module SwitchCompleteTransientFailure: 230054
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6082, col 53 to line 6082, col 83 of module SwitchCompleteTransientFailure: 230054
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6083, col 53 to line 6084, col 89 of module SwitchCompleteTransientFailure: 224628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6086, col 43 to line 6087, col 96 of module SwitchCompleteTransientFailure: 230054
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6088, col 46 to line 6088, col 111 of module SwitchCompleteTransientFailure: 230054
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6089, col 54 to line 6089, col 133 of module SwitchCompleteTransientFailure: 224628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6089, col 62 to line 6089, col 133 of module SwitchCompleteTransientFailure: 224628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6089, col 63 to line 6089, col 66 of module SwitchCompleteTransientFailure: 224628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6089, col 75 to line 6089, col 132 of module SwitchCompleteTransientFailure: 224626
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6089, col 85 to line 6089, col 132 of module SwitchCompleteTransientFailure: 224628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 224628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 417562
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2369, col 73 to line 2372, col 113 of module SwitchCompleteTransientFailure: 417562
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 76 to line 2370, col 114 of module SwitchCompleteTransientFailure: 417562
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 79 to line 2369, col 109 of module SwitchCompleteTransientFailure: 417562
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2370, col 79 to line 2370, col 114 of module SwitchCompleteTransientFailure: 356622
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2371, col 76 to line 2372, col 113 of module SwitchCompleteTransientFailure: 60940
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2373, col 73 to line 2373, col 102 of module SwitchCompleteTransientFailure: 371857
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 224628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6089, col 100 to line 6089, col 114 of module SwitchCompleteTransientFailure: 371857
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6089, col 117 to line 6089, col 131 of module SwitchCompleteTransientFailure: 478503
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6090, col 54 to line 6091, col 108 of module SwitchCompleteTransientFailure: 224628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6092, col 54 to line 6092, col 102 of module SwitchCompleteTransientFailure: 224628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6093, col 54 to line 6093, col 81 of module SwitchCompleteTransientFailure: 224626
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6094, col 51 to line 6096, col 65 of module SwitchCompleteTransientFailure: 5426
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6097, col 43 to line 6158, col 81 of module SwitchCompleteTransientFailure: 230052
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<MonitoringServerRemoveFromQueue line 6160, col 1 to line 6160, col 37 of module SwitchCompleteTransientFailure>: 544343:646708
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6160, col 45 to line 6160, col 88 of module SwitchCompleteTransientFailure: 2584521
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6160, col 45 to line 6160, col 52 of module SwitchCompleteTransientFailure: 1937813
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6161, col 45 to line 6161, col 91 of module SwitchCompleteTransientFailure: 1496708
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6161, col 45 to line 6161, col 58 of module SwitchCompleteTransientFailure: 850000
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6161, col 64 to line 6161, col 91 of module SwitchCompleteTransientFailure: 850000
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6162, col 45 to line 6162, col 77 of module SwitchCompleteTransientFailure: 1349637
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6162, col 45 to line 6162, col 54 of module SwitchCompleteTransientFailure: 702929
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6162, col 58 to line 6162, col 77 of module SwitchCompleteTransientFailure: 702929
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6163, col 49 to line 6164, col 128 of module SwitchCompleteTransientFailure: 646708
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6165, col 62 to line 6165, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6166, col 62 to line 6166, col 179 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6168, col 62 to line 6168, col 130 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6169, col 56 to line 6169, col 59 of module SwitchCompleteTransientFailure: 646708
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6170, col 56 to line 6171, col 98 of module SwitchCompleteTransientFailure: 646708
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6172, col 49 to line 6172, col 94 of module SwitchCompleteTransientFailure: 646708
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6173, col 53 to line 6174, col 114 of module SwitchCompleteTransientFailure: 646708
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6175, col 56 to line 6175, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6176, col 56 to line 6176, col 82 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6177, col 45 to line 6244, col 83 of module SwitchCompleteTransientFailure: 646708
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerUpdateIR2 line 6246, col 1 to line 6246, col 25 of module SwitchCompleteTransientFailure>: 204163:210192
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6246, col 33 to line 6246, col 64 of module SwitchCompleteTransientFailure: 2148009
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6246, col 33 to line 6246, col 40 of module SwitchCompleteTransientFailure: 1937817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6247, col 33 to line 6247, col 79 of module SwitchCompleteTransientFailure: 479820
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6247, col 33 to line 6247, col 46 of module SwitchCompleteTransientFailure: 269628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6247, col 52 to line 6247, col 79 of module SwitchCompleteTransientFailure: 269628
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6248, col 33 to line 6248, col 65 of module SwitchCompleteTransientFailure: 430228
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6248, col 33 to line 6248, col 42 of module SwitchCompleteTransientFailure: 220036
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6248, col 46 to line 6248, col 65 of module SwitchCompleteTransientFailure: 220036
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6249, col 37 to line 6250, col 116 of module SwitchCompleteTransientFailure: 210192
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6251, col 50 to line 6251, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6252, col 50 to line 6252, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6254, col 50 to line 6254, col 118 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6255, col 44 to line 6255, col 47 of module SwitchCompleteTransientFailure: 210192
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6256, col 44 to line 6257, col 86 of module SwitchCompleteTransientFailure: 210192
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6258, col 37 to line 6258, col 82 of module SwitchCompleteTransientFailure: 210192
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6259, col 41 to line 6262, col 104 of module SwitchCompleteTransientFailure: 210192
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6263, col 44 to line 6263, col 102 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6264, col 44 to line 6266, col 70 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6267, col 33 to line 6305, col 71 of module SwitchCompleteTransientFailure: 210192
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerWatchDogProc line 6311, col 1 to line 6311, col 28 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6311, col 36 to line 6311, col 70 of module SwitchCompleteTransientFailure: 3875634
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6312, col 36 to line 6312, col 82 of module SwitchCompleteTransientFailure: 3875634
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6313, col 36 to line 6313, col 68 of module SwitchCompleteTransientFailure: 3194746
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6314, col 36 to line 6314, col 143 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6314, col 63 to line 6314, col 143 of module SwitchCompleteTransientFailure: 2955122
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6314, col 64 to line 6314, col 86 of module SwitchCompleteTransientFailure: 2955122
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6314, col 95 to line 6314, col 142 of module SwitchCompleteTransientFailure: 2955122
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6314, col 105 to line 6314, col 142 of module SwitchCompleteTransientFailure: 2955122
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2375, col 40 to line 2376, col 102 of module SwitchCompleteTransientFailure: 2955122:653912
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2375, col 60 to line 2376, col 101 of module SwitchCompleteTransientFailure: 20685854
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2375, col 63 to line 2375, col 73 of module SwitchCompleteTransientFailure: 20685854
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2376, col 63 to line 2376, col 101 of module SwitchCompleteTransientFailure: 10342927
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2375, col 47 to line 2375, col 57 of module SwitchCompleteTransientFailure: 2955122
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6314, col 135 to line 6314, col 141 of module SwitchCompleteTransientFailure: 2955122
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6315, col 36 to line 6315, col 82 of module SwitchCompleteTransientFailure: 2955122
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6319, col 41 to line 6319, col 64 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6320, col 41 to line 6320, col 129 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6321, col 36 to line 6321, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6322, col 36 to line 6370, col 55 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2774:0 @!@!@
<IRCriticalSection line 6511, col 1 to line 6511, col 17 of module SwitchCompleteTransientFailure>
@!@!@ENDMSG 2774 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6514, col 25 to line 6517, col 109 of module SwitchCompleteTransientFailure: 2016151
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2774:0 @!@!@
<ConsistencyReq line 6524, col 1 to line 6524, col 14 of module SwitchCompleteTransientFailure>
@!@!@ENDMSG 2774 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6524, col 19 to line 6529, col 169 of module SwitchCompleteTransientFailure: 2016151
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6524, col 55 to line 6529, col 169 of module SwitchCompleteTransientFailure: 5537490
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6524, col 58 to line 6524, col 62 of module SwitchCompleteTransientFailure: 5537490
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6525, col 58 to line 6525, col 162 of module SwitchCompleteTransientFailure: 2406428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6525, col 58 to line 6525, col 108 of module SwitchCompleteTransientFailure: 2406428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 2406428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 4526580
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 2406428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 2406428:4526580
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 4812856
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 2406428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 2406428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6525, col 67 to line 6525, col 107 of module SwitchCompleteTransientFailure: 2406428
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 2406438
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 3897117
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 2406439
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 82 to line 6525, col 82 of module SwitchCompleteTransientFailure: 2406439
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 85 to line 6525, col 106 of module SwitchCompleteTransientFailure: 2406439
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6525, col 112 to line 6525, col 162 of module SwitchCompleteTransientFailure: 2406439
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 2406439
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 4526603
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 2406440
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 2406440:4526604
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 4812880
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 2406440
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 2406440
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6525, col 121 to line 6525, col 161 of module SwitchCompleteTransientFailure: 2406440
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 2406440
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 3897118
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 2406440
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 136 to line 6525, col 136 of module SwitchCompleteTransientFailure: 2406440
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 139 to line 6525, col 160 of module SwitchCompleteTransientFailure: 2406440
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6526, col 58 to line 6527, col 169 of module SwitchCompleteTransientFailure: 1833888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6526, col 61 to line 6526, col 125 of module SwitchCompleteTransientFailure: 1833888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6526, col 61 to line 6526, col 91 of module SwitchCompleteTransientFailure: 1833888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 1833888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 1833888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 31 to line 2191, col 52 of module SwitchCompleteTransientFailure: 1833888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 45 to line 2191, col 52 of module SwitchCompleteTransientFailure: 2163575
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 40 to line 2191, col 42 of module SwitchCompleteTransientFailure: 1833888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 26 to line 2191, col 28 of module SwitchCompleteTransientFailure: 1833888
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 1833888:5831351
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 4329517
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 1833889
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 76 to line 6526, col 87 of module SwitchCompleteTransientFailure: 1833889
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 90 to line 6526, col 90 of module SwitchCompleteTransientFailure: 1833889
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6526, col 95 to line 6526, col 125 of module SwitchCompleteTransientFailure: 1833889
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 1833889
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 1833889
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 31 to line 2191, col 52 of module SwitchCompleteTransientFailure: 1833889
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 45 to line 2191, col 52 of module SwitchCompleteTransientFailure: 2163578
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 40 to line 2191, col 42 of module SwitchCompleteTransientFailure: 1833890
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 26 to line 2191, col 28 of module SwitchCompleteTransientFailure: 1833890
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 1833890:5831358
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 4329520
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 1833890
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 110 to line 6526, col 121 of module SwitchCompleteTransientFailure: 1833890
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 124 to line 6526, col 124 of module SwitchCompleteTransientFailure: 1833890
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6527, col 61 to line 6527, col 169 of module SwitchCompleteTransientFailure: 916945
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6527, col 61 to line 6527, col 148 of module SwitchCompleteTransientFailure: 916945
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6527, col 63 to line 6527, col 103 of module SwitchCompleteTransientFailure: 916945
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 916945
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 1833890
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 916945
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6527, col 78 to line 6527, col 78 of module SwitchCompleteTransientFailure: 916945
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6527, col 81 to line 6527, col 102 of module SwitchCompleteTransientFailure: 916945
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6527, col 106 to line 6527, col 146 of module SwitchCompleteTransientFailure: 916945
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6527, col 157 to line 6527, col 169 of module SwitchCompleteTransientFailure: 916952
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6527, col 157 to line 6527, col 167 of module SwitchCompleteTransientFailure: 916953
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 916953
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 1833906
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 916953
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 916953:1833906
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 1833906
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 916953
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 916953
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6527, col 166 to line 6527, col 166 of module SwitchCompleteTransientFailure: 916953
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6528, col 58 to line 6529, col 169 of module SwitchCompleteTransientFailure: 916954
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6528, col 61 to line 6528, col 125 of module SwitchCompleteTransientFailure: 916954
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6528, col 61 to line 6528, col 91 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 916955:2750865
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 2164786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 76 to line 6528, col 87 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 90 to line 6528, col 90 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6528, col 95 to line 6528, col 125 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 31 to line 2191, col 52 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 45 to line 2191, col 52 of module SwitchCompleteTransientFailure: 1246649
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 40 to line 2191, col 42 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 26 to line 2191, col 28 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 916955:3080559
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 2164786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 110 to line 6528, col 121 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 124 to line 6528, col 124 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6529, col 61 to line 6529, col 169 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6529, col 61 to line 6529, col 148 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6529, col 63 to line 6529, col 103 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 1833910
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6529, col 78 to line 6529, col 78 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6529, col 81 to line 6529, col 102 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6529, col 106 to line 6529, col 146 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6529, col 157 to line 6529, col 169 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6529, col 157 to line 6529, col 167 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 1833910
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 916955:1833910
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 1833910
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6529, col 166 to line 6529, col 166 of module SwitchCompleteTransientFailure: 916955
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6524, col 31 to line 6524, col 52 of module SwitchCompleteTransientFailure: 2016168
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 2016168:15744965
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 3771181
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 2016175
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6524, col 40 to line 6524, col 51 of module SwitchCompleteTransientFailure: 2016175
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2777:0 @!@!@
End of statistics (please note that for performance reasons large models
are best checked with coverage and cost statistics disabled).
@!@!@ENDMSG 2777 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 2183141 total distinct states at (2021-04-01 06:54:10)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 16s at 2021-04-01 06:54:26
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(91) at 2021-04-01 06:54:26: 8,058,595 states generated (974,294 s/min), 2,267,670 distinct states found (251,661 ds/min), 84,524 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 2442645 total distinct states at (2021-04-01 06:55:26)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 18s at 2021-04-01 06:55:45
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(94) at 2021-04-01 06:55:45: 9,100,730 states generated (1,042,135 s/min), 2,526,984 distinct states found (259,314 ds/min), 84,333 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2192:0 @!@!@
Checking temporal properties for the current state space with 2698803 total distinct states at (2021-04-01 06:56:45)
@!@!@ENDMSG 2192 @!@!@
@!@!@STARTMSG 2116:1 @!@!@
Temporal properties were violated.

@!@!@ENDMSG 2116 @!@!@
@!@!@STARTMSG 2264:1 @!@!@
The following behavior constitutes a counter-example:

@!@!@ENDMSG 2264 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
1: <Initial predicate>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [type |-> 0] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 0 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 0)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<{[sw |-> s0, partial |-> 0, transient |-> 1]}>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> 0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [type |-> 0])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 0
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 1)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [type |-> 0])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> <<>> @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
2: <ControllerTEProc line 3778, col 27 to line 3825, col 68 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [type |-> 0] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 0 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 0)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<{[sw |-> s0, partial |-> 0, transient |-> 1]}>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> 0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [type |-> 0])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 0
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 1)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEEventProcessing" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [type |-> 0])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> <<>> @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<rc0, CONT_TE>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
3: <ControllerTEEventProcessing line 3827, col 38 to line 3903, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [type |-> 0] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 0 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 0)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<{[sw |-> s0, partial |-> 0, transient |-> 1]}>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> 0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [type |-> 0])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 0
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 1)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [type |-> 0])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> <<>> @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
4: <SwitchFailure line 3330, col 24 to line 3474, col 76 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 0)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> 0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [type |-> 0])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 0
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 1)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [type |-> 0])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
5: <ControllerMonitorCheckIfMastr line 6074, col 40 to line 6158, col 81 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 0)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [type |-> 0])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 0
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 1)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [type |-> 0])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
6: <ControllerTEComputeDagBasedOnTopo line 3905, col 44 to line 3997, col 85 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [type |-> 0])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTERemoveUnnecessaryIRs" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [type |-> 0])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
7: <ControllerEventHandlerProc line 5450, col 37 to line 5519, col 78 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [type |-> 0])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerSuspendSW" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTERemoveUnnecessaryIRs" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
8: <ControllerTERemoveUnnecessaryIRs line 4157, col 43 to line 4251, col 84 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [type |-> 0])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerSuspendSW" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTESubmitNewDAG" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
9: <ControllerTESubmitNewDAG line 4313, col 35 to line 4372, col 76 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [type |-> 0])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerSuspendSW" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
10: <ControllerSuspendSW line 5624, col 30 to line 5683, col 71 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [type |-> 0])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
11: <RCSNIBEventHndlerProc line 3698, col 32 to line 3774, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
12: <ControllerTEProc line 3778, col 27 to line 3825, col 68 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [type |-> 0])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEEventProcessing" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<rc0, CONT_TE>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
13: <ControllerTEEventProcessing line 3827, col 38 to line 3903, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEEventProcessing" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<rc0, CONT_TE>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
14: <ControllerTEEventProcessing line 3827, col 38 to line 3903, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
15: <MonitoringServerRemoveFromQueue line 6160, col 42 to line 6244, col 83 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> Failed,
        nicAsic |-> Failed,
        ofa |-> Failed,
        installer |-> Failed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 1 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> <<>> @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 1] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
16: <SwitchResolveFailure line 3478, col 31 to line 3637, col 78 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> 0])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
17: <ControllerBossSeqProc line 4383, col 32 to line 4452, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
18: <ControllerMonitorCheckIfMastr line 6074, col 40 to line 6158, col 81 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN], [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
19: <MonitoringServerRemoveFromQueue line 6160, col 42 to line 6244, col 83 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN], [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [dag |-> 0])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
20: <ControllerWorkerSeqProc line 4524, col 34 to line 4583, col 75 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN], [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
21: <ControllerEvenHanlderRemoveEventFromQueue line 5521, col 52 to line 5622, col 93 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
22: <ControllerEventHandlerProc line 5450, col 37 to line 5519, col 78 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerCheckIfThisIsLastEvent" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
23: <ControllerCheckIfThisIsLastEvent line 5685, col 43 to line 5773, col 84 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "getIRsToBeChecked" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
24: <getIRsToBeChecked line 5775, col 28 to line 5831, col 69 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_SUSPEND @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerFreeSuspendedSW" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
25: <ControllerFreeSuspendedSW line 5890, col 36 to line 5966, col 77 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [sw |-> s0, type |-> START_RESET_IR] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<[swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]]>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEvenHanlderRemoveEventFromQueue" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
26: <ControllerEvenHanlderRemoveEventFromQueue line 5521, col 52 to line 5622, col 93 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_SUSPEND @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
27: <RCSNIBEventHndlerProc line 3698, col 32 to line 3774, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
28: <ControllerWorkerSeqScheduleDAG line 4585, col 41 to line 4663, col 82 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "SchedulerMechanism" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {1})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
29: <SchedulerMechanism line 4665, col 29 to line 4730, col 70 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> STATUS_START_SCHEDULING, next |-> 1] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ScheduleTheIR" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {1})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {1} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
30: <ScheduleTheIR line 4732, col 24 to line 4788, col 76 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 0)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> NO_TAG, IR |-> 1]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {1} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> -1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
31: <ControllerThread line 4880, col 27 to line 4948, col 68 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> t0 @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 1]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 1] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_NONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadSendIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {1} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
32: <ControllerThreadSendIR line 4950, col 33 to line 5019, col 80 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> t0 @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 1]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 1] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_NONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_SENT, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadForwardIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {1} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 1, type |-> IR_MOD, state |-> IR_SENT]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
33: <RCSNIBEventHndlerProc line 3698, col 32 to line 3774, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> t0 @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 1]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 1] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_SENT, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_SENT, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadForwardIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
34: <ControllerThreadForwardIR line 5021, col 36 to line 5103, col 77 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> t0 @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 1]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 1] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_SENT, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_SENT, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<[type |-> INSTALL_FLOW, flow |-> 1, to |-> s0]>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<SW_SIMPLE_ID, s0>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> 0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
35: <SwitchSimpleProcess line 2541, col 30 to line 2605, col 71 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> t0 @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 0)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 1]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 1] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_SENT, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_SENT, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
36: <ControllerMonitorCheckIfMastr line 6074, col 40 to line 6158, col 81 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> t0 @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 1]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 1] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_SENT, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_SENT, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerUpdateIR2" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
37: <ControllerThreadUnlockSemaphore line 5105, col 42 to line 5192, col 83 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> -1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 1]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 1] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_SENT, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_SENT, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "RemoveFromScheduledIRSet" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerUpdateIR2" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
38: <RemoveFromScheduledIRSet line 5194, col 35 to line 5268, col 76 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_SENT, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_SENT, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerUpdateIR2" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<0, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
39: <ControllerUpdateIR2 line 6246, col 30 to line 6305, col 71 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_SENT, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 1, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
40: <RCSNIBEventHndlerProc line 3698, col 32 to line 3774, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
41: <ControllerWorkerSeqScheduleDAG line 4585, col 41 to line 4663, col 82 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "SchedulerMechanism" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {2})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
42: <MonitoringServerRemoveFromQueue line 6160, col 42 to line 6244, col 83 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 1
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "SchedulerMechanism" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {2})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
43: <ControllerTEComputeDagBasedOnTopo line 3905, col 44 to line 3997, col 85 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 1)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTESendDagStaleNotif" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "SchedulerMechanism" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {2})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
44: <SchedulerMechanism line 4665, col 29 to line 4730, col 70 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> STATUS_START_SCHEDULING, next |-> 2] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTESendDagStaleNotif" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ScheduleTheIR" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {2})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {2})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
45: <ControllerTESendDagStaleNotif line 3999, col 40 to line 4067, col 81 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> STATUS_START_SCHEDULING, next |-> 2] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[id |-> 1, type |-> DAG_STALE]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ScheduleTheIR" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {2})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {2})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
46: <ScheduleTheIR line 4732, col 24 to line 4788, col 76 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> NO_TAG, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[id |-> 1, type |-> DAG_STALE]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<[id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {2})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
47: <ControllerWorkerSeqScheduleDAG line 4585, col 41 to line 4663, col 82 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 1)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> NO_TAG, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[id |-> 1, type |-> DAG_STALE]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {2})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
48: <ControllerThread line 4880, col 27 to line 4948, col 68 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[id |-> 1, type |-> DAG_STALE]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> 0)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadSendIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {2})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
49: <ControllerBossSeqProc line 4383, col 32 to line 4452, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_NONE, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadSendIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {2})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
50: <ControllerThreadSendIR line 4950, col 33 to line 5019, col 80 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_SENT, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadForwardIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {2})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 2, type |-> IR_MOD, state |-> IR_SENT]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
51: <ControllerThreadForwardIR line 5021, col 36 to line 5103, col 77 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_SENT, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<[type |-> INSTALL_FLOW, flow |-> 2, to |-> s1]>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {2})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<SW_SIMPLE_ID, s1>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> 0])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 2, type |-> IR_MOD, state |-> IR_SENT]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
52: <SwitchSimpleProcess line 2541, col 30 to line 2605, col 71 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 1)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_SENT, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {2})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 2, type |-> IR_MOD, state |-> IR_SENT]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
53: <ControllerTEWaitForStaleDAGToBeRemoved line 4069, col 49 to line 4155, col 90 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 1, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_NONE, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_SENT, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTERemoveUnnecessaryIRs" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {2})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {2})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 2, type |-> IR_MOD, state |-> IR_SENT]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
54: <RCSNIBEventHndlerProc line 3698, col 32 to line 3774, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> <<IR_DONE, IR_SENT, IR_NONE>>)
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = <<IR_DONE, IR_SENT, IR_NONE>>
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = <<[type |-> INSTALL_FLOW, flow |-> 1], [type |-> INSTALL_FLOW, flow |-> 2], [type |-> INSTALL_FLOW, flow |-> 3]>>
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = <<s0, s1, s1>>
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 0)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTERemoveUnnecessaryIRs" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {2})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = <<1, 0, 0>>
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
55: <ControllerTERemoveUnnecessaryIRs line 4157, col 43 to line 4251, col 84 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {3})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 0)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEAddEdge" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 0 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<rc0, CONT_TE>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
56: <ControllerTEAddEdge line 4253, col 30 to line 4311, col 71 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEAddEdge" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 13
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 0 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<rc0, CONT_TE>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
57: <ControllerTEAddEdge line 4253, col 30 to line 4311, col 71 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTERemoveUnnecessaryIRs" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 0 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<rc0, CONT_TE>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
58: <ControllerTERemoveUnnecessaryIRs line 4157, col 43 to line 4251, col 84 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 1)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 1, from |-> s0])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTESubmitNewDAG" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 0 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
59: <ControllerMonitorCheckIfMastr line 6074, col 40 to line 6158, col 81 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> t0 @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerUpdateIR2" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTESubmitNewDAG" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 0 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
60: <ControllerThreadUnlockSemaphore line 5105, col 42 to line 5192, col 83 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "RemoveFromScheduledIRSet" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerUpdateIR2" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTESubmitNewDAG" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 0 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
61: <ControllerUpdateIR2 line 6246, col 30 to line 6305, col 71 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "RemoveFromScheduledIRSet" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTESubmitNewDAG" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 2, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
62: <ControllerTESubmitNewDAG line 4313, col 35 to line 4372, col 76 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "RemoveFromScheduledIRSet" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 2, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
63: <ControllerTEProc line 3778, col 27 to line 3825, col 68 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_SUSPEND])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<[sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN]>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {s0})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "RemoveFromScheduledIRSet" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEEventProcessing" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<rc0, CONT_TE>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 2, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
64: <ControllerTEEventProcessing line 3827, col 38 to line 3903, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_SENT @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "RemoveFromScheduledIRSet" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEEventProcessing" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<rc0, CONT_TE>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 2, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
65: <RCSNIBEventHndlerProc line 3698, col 32 to line 3774, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "RemoveFromScheduledIRSet" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEEventProcessing" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<rc0, CONT_TE>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
66: <ControllerTEEventProcessing line 3827, col 38 to line 3903, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 1, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "RemoveFromScheduledIRSet" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
67: <ControllerBossSeqProc line 4383, col 32 to line 4452, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 2]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 2] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "RemoveFromScheduledIRSet" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
68: <RemoveFromScheduledIRSet line 5194, col 35 to line 5268, col 76 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 1, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
69: <ControllerWorkerSeqProc line 4524, col 34 to line 4583, col 75 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
70: <ControllerWorkerSeqScheduleDAG line 4585, col 41 to line 4663, col 82 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 2)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "SchedulerMechanism" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {13})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
71: <SchedulerMechanism line 4665, col 29 to line 4730, col 70 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {3})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> STATUS_START_SCHEDULING, next |-> 13] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 2
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEComputeDagBasedOnTopo" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ScheduleTheIR" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {13})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {13})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
72: <ControllerTEComputeDagBasedOnTopo line 3905, col 44 to line 3997, col 85 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> STATUS_START_SCHEDULING, next |-> 13] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTESendDagStaleNotif" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ScheduleTheIR" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {13})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {13})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
73: <MonitoringServerRemoveFromQueue line 6160, col 42 to line 6244, col 83 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> STATUS_START_SCHEDULING, next |-> 13] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTESendDagStaleNotif" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ScheduleTheIR" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {13})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {13})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
74: <ControllerTESendDagStaleNotif line 3999, col 40 to line 4067, col 81 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> STATUS_START_SCHEDULING, next |-> 13] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[id |-> 2, type |-> DAG_STALE]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ScheduleTheIR" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {13})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {13})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
75: <ScheduleTheIR line 4732, col 24 to line 4788, col 76 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 2)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> NO_TAG, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[id |-> 2, type |-> DAG_STALE]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {13})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
76: <ControllerThread line 4880, col 27 to line 4948, col 68 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[id |-> 2, type |-> DAG_STALE]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadSendIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {13})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
77: <ControllerThreadSendIR line 4950, col 33 to line 5019, col 80 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 2, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[id |-> 2, type |-> DAG_STALE]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_NONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadForwardIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {13})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 13, type |-> IR_MOD, state |-> IR_SENT]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
78: <RCSNIBEventHndlerProc line 3698, col 32 to line 3774, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[id |-> 2, type |-> DAG_STALE]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadForwardIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
79: <ControllerWorkerSeqScheduleDAG line 4585, col 41 to line 4663, col 82 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[id |-> 2, type |-> DAG_STALE]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadForwardIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_STALE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
80: <ControllerBossSeqProc line 4383, col 32 to line 4452, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 2, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {3}, e |-> {}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 2)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadForwardIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEWaitForStaleDAGToBeRemoved" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
81: <ControllerTEWaitForStaleDAGToBeRemoved line 4069, col 49 to line 4155, col 90 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 2, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_LOCKING, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadForwardIR" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTERemoveUnnecessaryIRs" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
82: <ControllerThreadForwardIR line 5021, col 36 to line 5103, col 77 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 2, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> <<2>>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTERemoveUnnecessaryIRs" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<[type |-> DELETE_FLOW, flow |-> 2, to |-> s1]>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<SW_SIMPLE_ID, s1>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> INSTALL_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
83: <SwitchSimpleProcess line 2541, col 30 to line 2605, col 71 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 2, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 2)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> INSTALLED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTERemoveUnnecessaryIRs" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
84: <ControllerMonitorCheckIfMastr line 6074, col 40 to line 6158, col 81 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 2, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerUpdateIR2" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTERemoveUnnecessaryIRs" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 0)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
85: <ControllerUpdateIR2 line 6246, col 30 to line 6305, col 71 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 2, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTERemoveUnnecessaryIRs" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 1)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 13, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
86: <ControllerTERemoveUnnecessaryIRs line 4157, col 43 to line 4251, col 84 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 2, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTESubmitNewDAG" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 1)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 13, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
87: <ControllerTESubmitNewDAG line 4313, col 35 to line 4372, col 76 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [id |-> 2, type |-> DAG_STALE])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<[type |-> DAG_NEW, dag_obj |-> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]]>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 1)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 13, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
88: <ControllerBossSeqProc line 4383, col 32 to line 4452, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> t0 @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThreadUnlockSemaphore" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 1)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 13, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
89: <ControllerThreadUnlockSemaphore line 5105, col 42 to line 5192, col 83 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = <<[tag |-> <<ofc0, t0>>, IR |-> 13]>>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> STATUS_SENT_DONE, next |-> 13] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "RemoveFromScheduledIRSet" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 1)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 13, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
90: <RemoveFromScheduledIRSet line 5194, col 35 to line 5268, col 76 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 2, dag |-> [v |-> {3, 13}, e |-> {<<13, 3>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 1)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 13, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
91: <ControllerWorkerSeqProc line 4524, col 34 to line 4583, col 75 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<[id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqScheduleDAG" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 1)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, CONT_WORKER_SEQ, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 13, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
92: <ControllerWorkerSeqScheduleDAG line 4585, col 41 to line 4663, col 82 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<[type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1]>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "MonitoringServerRemoveFromQueue" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 1)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 13, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
93: <MonitoringServerRemoveFromQueue line 6160, col 42 to line 6244, col 83 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_SENT])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_SENT))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 1)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<[IR |-> 13, type |-> IR_MOD, state |-> IR_DONE]>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
94: <RCSNIBEventHndlerProc line 3698, col 32 to line 3774, col 79 of module SwitchCompleteTransientFailure>
/\ egressMsg = (<<NIC_ASIC_OUT, s0>> :> [type |-> 0] @@ <<NIC_ASIC_OUT, s1>> :> [type |-> 0])
/\ nextIRToSent = (<<ofc0, t0>> :> 13)
/\ ofaInMsg = (<<OFA_IN, s0>> :> [type |-> 0] @@ <<OFA_IN, s1>> :> [type |-> 0])
/\ rowRemove = (<<ofc0, t0>> :> 1)
/\ idThreadWorkingOnIR = (1 :> IR_UNLOCK @@ 2 :> IR_UNLOCK @@ 3 :> IR_UNLOCK @@ 13 :> IR_UNLOCK @@ 14 :> IR_UNLOCK @@ 15 :> IR_UNLOCK @@ 16 :> IR_UNLOCK @@ 17 :> IR_UNLOCK @@ 18 :> IR_UNLOCK @@ 19 :> IR_UNLOCK @@ 20 :> IR_UNLOCK @@ 21 :> IR_UNLOCK @@ 22 :> IR_UNLOCK @@ 23 :> IR_UNLOCK)
/\ installedIRs = <<1, 2>>
/\ nxtDAG = (<<rc0, CONT_TE>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ seqEvent = (<<rc0, CONT_BOSS_SEQ>> :> [type |-> DAG_NEW, dag_obj |-> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]]])
/\ ofaOutConfirmation = (<<OFA_OUT, s0>> :> 0 @@ <<OFA_OUT, s1>> :> 0)
/\ setIRsInDAG = (<<rc0, CONT_TE>> :> {})
/\ SwProcSet = {<<SW_RESOLVE_PROC, s0>>, <<SW_RESOLVE_PROC, s1>>, <<NIC_ASIC_IN, s0>>, <<NIC_ASIC_IN, s1>>, <<SW_FAILURE_PROC, s0>>, <<SW_FAILURE_PROC, s1>>, <<INSTALLER, s0>>, <<INSTALLER, s1>>, <<OFA_IN, s0>>, <<OFA_IN, s1>>, <<OFA_OUT, s0>>, <<OFA_OUT, s1>>, <<NIC_ASIC_OUT, s0>>, <<NIC_ASIC_OUT, s1>>}
/\ irID = (<<ofc0, CONT_MONITOR>> :> 13)
/\ obj = (<<SW_FAILURE_PROC, s0>> :> [sw |-> s0, partial |-> 0, transient |-> 1] @@ <<SW_FAILURE_PROC, s1>> :> [type |-> 0])
/\ failedElem = (<<SW_FAILURE_PROC, s0>> :> "" @@ <<SW_FAILURE_PROC, s1>> :> "")
/\ IRQueueNIB = << >>
/\ controllerSubmoduleFailStat = (<<ofc0, t0>> :> NotFailed @@ <<ofc0, CONT_MONITOR>> :> NotFailed @@ <<ofc0, CONT_EVENT>> :> NotFailed @@ <<rc0, CONT_TE>> :> NotFailed @@ <<rc0, CONT_WORKER_SEQ>> :> NotFailed @@ <<rc0, CONT_BOSS_SEQ>> :> NotFailed @@ <<rc0, NIB_EVENT_HANDLER>> :> NotFailed)
/\ switchStatus = ( s0 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] @@
  s1 :>
      [ cpu |-> NotFailed,
        nicAsic |-> NotFailed,
        ofa |-> NotFailed,
        installer |-> NotFailed ] )
/\ prev_dag = (<<rc0, CONT_TE>> :> [v |-> {1, 2}, e |-> {<<1, 2>>}])
/\ ContProcSet = {<<ofc0, t0>>, <<ofc0, CONT_MONITOR>>, <<ofc0, CONT_EVENT>>, <<rc0, CONT_TE>>, <<rc0, CONT_WORKER_SEQ>>, <<rc0, CONT_BOSS_SEQ>>, <<rc0, NIB_EVENT_HANDLER>>}
/\ nxtDAGVertices = (<<rc0, CONT_TE>> :> {1, 2})
/\ controllerStateNIB = (<<ofc0, t0>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_MONITOR>> :> [type |-> NO_STATUS] @@ <<ofc0, CONT_EVENT>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_TE>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_WORKER_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, CONT_BOSS_SEQ>> :> [type |-> NO_STATUS] @@ <<rc0, NIB_EVENT_HANDLER>> :> [type |-> NO_STATUS])
/\ Installer2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ swSeqChangedStatus = <<>>
/\ setIRsToReset = (<<ofc0, CONT_EVENT>> :> {})
/\ controlMsgCounter = (s0 :> 2 @@ s1 :> 0)
/\ switch2Controller = <<>>
/\ topoChangeEvent = (<<rc0, CONT_TE>> :> [sw |-> s0, type |-> TOPO_MOD, state |-> SW_RUN])
/\ prev_dag_id = (<<rc0, CONT_TE>> :> 3)
/\ TCAM = (s0 :> <<1>> @@ s1 :> << >>)
/\ masterState = [ofc0 |-> "primary", rc0 |-> "primary"]
/\ sw_fail_ordering_var = <<>>
/\ TEEventQueue = (rc0 :> <<>>)
/\ currIRInDAG = (<<rc0, CONT_TE>> :> 3)
/\ resetIR = (<<ofc0, CONT_EVENT>> :> 0)
/\ msg = (<<ofc0, CONT_MONITOR>> :> [type |-> DELETED_SUCCESSFULLY, flow |-> 2, from |-> s1])
/\ event = (<<rc0, NIB_EVENT_HANDLER>> :> [IR |-> 13, type |-> IR_MOD, state |-> IR_DONE])
/\ stepOfFailure_ = (<<rc0, CONT_WORKER_SEQ>> :> 0)
/\ DAGID = 3
/\ currSetDownSw = (<<rc0, CONT_TE>> :> {})
/\ Ofa2InstallerBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ DAGEventQueue = (rc0 :> <<>>)
/\ RCSeqWorkerStatus = (CONT_WORKER_SEQ :> SEQ_WORKER_RUN)
/\ Ofa2NicAsicBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ failedSet = (<<SW_RESOLVE_PROC, s0>> :> {} @@ <<SW_RESOLVE_PROC, s1>> :> {})
/\ RCIRStatus = (rc0 :> (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE))
/\ recoveredElem = (<<SW_RESOLVE_PROC, s0>> :> "" @@ <<SW_RESOLVE_PROC, s1>> :> "")
/\ NIBIRStatus = (1 :> IR_DONE @@ 2 :> IR_DONE @@ 3 :> IR_NONE @@ 13 :> IR_DONE)
/\ worker = (<<rc0, CONT_BOSS_SEQ>> :> DAG_UNLOCK)
/\ SwSuspensionStatus = (s0 :> SW_RUN @@ s1 :> SW_RUN)
/\ init = (<<rc0, CONT_TE>> :> 0)
/\ irTypeMapping = (1 :> [type |-> INSTALL_FLOW, flow |-> 1] @@ 2 :> [type |-> INSTALL_FLOW, flow |-> 2] @@ 3 :> [type |-> INSTALL_FLOW, flow |-> 3] @@ 13 :> [type |-> DELETE_FLOW, flow |-> 2])
/\ controllerSubmoduleFailNum = (ofc0 :> 0 @@ rc0 :> 0)
/\ ir2sw = (1 :> s0 @@ 2 :> s1 @@ 3 :> s1 @@ 13 :> s1)
/\ ingressIR = (<<NIC_ASIC_IN, s0>> :> [type |-> 0] @@ <<NIC_ASIC_IN, s1>> :> [type |-> 0])
/\ currIR = (<<rc0, CONT_TE>> :> 2)
/\ nextIR = (<<rc0, CONT_WORKER_SEQ>> :> 13)
/\ DAGQueue = (rc0 :> <<>>)
/\ pc = (<<SW_RESOLVE_PROC, s0>> :> "SwitchResolveFailure" @@ <<SW_RESOLVE_PROC, s1>> :> "SwitchResolveFailure" @@ <<NIC_ASIC_IN, s0>> :> "SwitchRcvPacket" @@ <<NIC_ASIC_IN, s1>> :> "SwitchRcvPacket" @@ <<ofc0, t0>> :> "ControllerThread" @@ <<ofc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<ofc0, CONT_MONITOR>> :> "ControllerMonitorCheckIfMastr" @@ <<ofc0, CONT_EVENT>> :> "ControllerEventHandlerProc" @@ <<SW_FAILURE_PROC, s0>> :> "SwitchFailure" @@ <<SW_FAILURE_PROC, s1>> :> "SwitchFailure" @@ <<GHOST_UNLOCK_PROC, s0>> :> "ghostProc" @@ <<GHOST_UNLOCK_PROC, s1>> :> "ghostProc" @@ <<INSTALLER, s0>> :> "SwitchInstallerProc" @@ <<INSTALLER, s1>> :> "SwitchInstallerProc" @@ <<SW_SIMPLE_ID, s0>> :> "SwitchSimpleProcess" @@ <<SW_SIMPLE_ID, s1>> :> "SwitchSimpleProcess" @@ <<OFA_IN, s0>> :> "SwitchOfaProcIn" @@ <<OFA_IN, s1>> :> "SwitchOfaProcIn" @@ <<rc0, CONT_TE>> :> "ControllerTEProc" @@ <<rc0, WATCH_DOG>> :> "ControllerWatchDogProc" @@ <<rc0, CONT_WORKER_SEQ>> :> "ControllerWorkerSeqProc" @@ <<rc0, CONT_BOSS_SEQ>> :> "ControllerBossSeqProc" @@ <<rc0, NIB_EVENT_HANDLER>> :> "RCSNIBEventHndlerProc" @@ <<OFA_OUT, s0>> :> "SwitchOfaProcOut" @@ <<OFA_OUT, s1>> :> "SwitchOfaProcOut" @@ <<NIC_ASIC_OUT, s0>> :> "SwitchFromOFAPacket" @@ <<NIC_ASIC_OUT, s1>> :> "SwitchFromOFAPacket")
/\ nxtRCIRID = 14
/\ notFailedSet = (<<SW_FAILURE_PROC, s0>> :> {} @@ <<SW_FAILURE_PROC, s1>> :> {})
/\ stepOfFailure = (<<ofc0, CONT_EVENT>> :> 0)
/\ MaxDAGID = 15
/\ workerThreadRanking = (t0 :> 1)
/\ NicAsic2OfaBuff = (s0 :> <<>> @@ s1 :> <<>>)
/\ currDAG = (<<rc0, CONT_WORKER_SEQ>> :> [id |-> 3, dag |-> [v |-> {1, 2}, e |-> {<<1, 2>>}]])
/\ setRemovableIRs = (<<rc0, CONT_TE>> :> {})
/\ stepOfFailure_c = (<<ofc0, t0>> :> 0)
/\ toBeScheduledIRs = (<<rc0, CONT_WORKER_SEQ>> :> {})
/\ RCSwSuspensionStatus = (rc0 :> (s0 :> SW_RUN @@ s1 :> SW_RUN))
/\ FirstInstall = (1 :> 1 @@ 2 :> 1 @@ 3 :> 0 @@ 13 :> 1)
/\ controller2Switch = (s0 :> <<>> @@ s1 :> <<>>)
/\ SetScheduledIRs = (s0 :> {} @@ s1 :> {})
/\ rowIndex = (<<ofc0, t0>> :> 1)
/\ idWorkerWorkingOnDAG = <<DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK, DAG_UNLOCK>>
/\ monitoringEvent = (<<ofc0, CONT_EVENT>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]])
/\ switchLock = <<NO_LOCK, NO_LOCK>>
/\ ingressPkt = (<<SW_SIMPLE_ID, s0>> :> [type |-> INSTALL_FLOW, flow |-> 1, to |-> s0] @@ <<SW_SIMPLE_ID, s1>> :> [type |-> DELETE_FLOW, flow |-> 2, to |-> s1])
/\ statusResolveMsg = (<<SW_RESOLVE_PROC, s0>> :> [swID |-> s0, num |-> 2, type |-> KEEP_ALIVE, status |-> [installerStatus |-> INSTALLER_UP]] @@ <<SW_RESOLVE_PROC, s1>> :> <<>>)
/\ installerInIR = (<<INSTALLER, s0>> :> 0 @@ <<INSTALLER, s1>> :> 0)
/\ switchOrdering = (s0 :> 1 @@ s1 :> 2)
/\ statusMsg = (<<SW_FAILURE_PROC, s0>> :> [swID |-> s0, num |-> 1, type |-> NIC_ASIC_DOWN] @@ <<SW_FAILURE_PROC, s1>> :> <<>>)
/\ DAGState = <<DAG_NONE, DAG_NONE, DAG_SUBMIT, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE, DAG_NONE>>
/\ RecoveryStatus = ( s0 :> [partial |-> 0, transient |-> 0] @@
  s1 :> [partial |-> 0, transient |-> 0] )
/\ controllerLock = <<NO_LOCK, NO_LOCK>>
/\ controllerFailedModules = (<<ofc0, WATCH_DOG>> :> {} @@ <<rc0, WATCH_DOG>> :> {})
/\ RCNIBEventQueue = (rc0 :> <<>>)

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2218:4 @!@!@
95: Stuttering
@!@!@ENDMSG 2218 @!@!@
@!@!@STARTMSG 2267:0 @!@!@
Finished checking temporal properties in 07s at 2021-04-01 06:56:53
@!@!@ENDMSG 2267 @!@!@
@!@!@STARTMSG 2201:0 @!@!@
The coverage statistics at 2021-04-01 06:56:53
@!@!@ENDMSG 2201 @!@!@
@!@!@STARTMSG 2773:0 @!@!@
<Init line 2414, col 1 to line 2414, col 4 of module SwitchCompleteTransientFailure>: 2:2
@!@!@ENDMSG 2773 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2415, col 12 to line 2415, col 44 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2416, col 12 to line 2416, col 48 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2417, col 12 to line 2417, col 52 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2418, col 12 to line 2418, col 50 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2419, col 12 to line 2422, col 63 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2423, col 12 to line 2426, col 59 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2427, col 12 to line 2427, col 97 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2428, col 12 to line 2428, col 24 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2429, col 12 to line 2429, col 36 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2430, col 12 to line 2430, col 49 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2431, col 12 to line 2431, col 35 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2432, col 12 to line 2433, col 71 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2434, col 12 to line 2434, col 30 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2435, col 12 to line 2435, col 48 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2436, col 12 to line 2436, col 48 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2437, col 12 to line 2437, col 50 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2438, col 12 to line 2438, col 50 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2439, col 12 to line 2439, col 37 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2440, col 12 to line 2440, col 47 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2441, col 12 to line 2441, col 75 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2442, col 12 to line 2442, col 65 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2443, col 12 to line 2443, col 74 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2444, col 30 to line 2444, col 107 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2444, col 71 to line 2444, col 107 of module SwitchCompleteTransientFailure: 4
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2444, col 72 to line 2444, col 107 of module SwitchCompleteTransientFailure: 4
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2444, col 88 to line 2444, col 107 of module SwitchCompleteTransientFailure: 12
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2444, col 88 to line 2444, col 92 of module SwitchCompleteTransientFailure: 12
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2444, col 97 to line 2444, col 107 of module SwitchCompleteTransientFailure: 6
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2444, col 84 to line 2444, col 85 of module SwitchCompleteTransientFailure: 4
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |line 2444, col 43 to line 2444, col 68 of module SwitchCompleteTransientFailure: 2:28
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2445, col 12 to line 2445, col 48 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2446, col 12 to line 2446, col 49 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2447, col 12 to line 2447, col 44 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2450, col 12 to line 2450, col 54 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2451, col 12 to line 2451, col 51 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2452, col 12 to line 2452, col 74 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2453, col 12 to line 2453, col 73 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2454, col 12 to line 2454, col 37 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2455, col 12 to line 2455, col 68 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2456, col 12 to line 2456, col 66 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2457, col 12 to line 2457, col 127 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2458, col 12 to line 2458, col 159 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2459, col 12 to line 2459, col 64 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2460, col 12 to line 2460, col 76 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2461, col 12 to line 2461, col 57 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2462, col 12 to line 2462, col 53 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2463, col 12 to line 2463, col 28 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2464, col 12 to line 2464, col 46 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2466, col 12 to line 2466, col 74 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2468, col 12 to line 2468, col 72 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2470, col 12 to line 2470, col 73 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2472, col 12 to line 2472, col 66 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2474, col 12 to line 2474, col 66 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2476, col 12 to line 2476, col 63 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2478, col 12 to line 2478, col 68 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2479, col 12 to line 2479, col 69 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2480, col 12 to line 2480, col 67 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2481, col 12 to line 2481, col 70 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2483, col 12 to line 2483, col 66 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2484, col 12 to line 2484, col 75 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2485, col 12 to line 2485, col 70 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2487, col 12 to line 2487, col 77 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2489, col 12 to line 2489, col 77 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2490, col 12 to line 2490, col 65 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2491, col 12 to line 2491, col 62 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2492, col 12 to line 2492, col 55 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2493, col 12 to line 2493, col 68 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2494, col 12 to line 2494, col 67 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2495, col 12 to line 2495, col 57 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2496, col 12 to line 2496, col 62 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2497, col 12 to line 2497, col 66 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2498, col 12 to line 2498, col 63 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2499, col 12 to line 2499, col 78 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2501, col 12 to line 2501, col 76 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2502, col 12 to line 2502, col 63 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2504, col 12 to line 2504, col 76 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2505, col 12 to line 2505, col 65 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2506, col 12 to line 2506, col 73 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2507, col 12 to line 2507, col 76 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2509, col 12 to line 2509, col 77 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2510, col 12 to line 2510, col 74 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2511, col 12 to line 2511, col 75 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2512, col 12 to line 2512, col 80 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2514, col 12 to line 2514, col 81 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2515, col 12 to line 2515, col 69 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2516, col 12 to line 2516, col 62 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2517, col 12 to line 2517, col 68 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2519, col 12 to line 2519, col 71 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2520, col 12 to line 2520, col 61 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2522, col 12 to line 2522, col 83 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2523, col 12 to line 2539, col 109 of module SwitchCompleteTransientFailure: 2
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchSimpleProcess line 2541, col 1 to line 2541, col 25 of module SwitchCompleteTransientFailure>: 55116:1001950
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2541, col 33 to line 2541, col 64 of module SwitchCompleteTransientFailure: 6399741
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2541, col 33 to line 2541, col 40 of module SwitchCompleteTransientFailure: 5397791
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2542, col 33 to line 2542, col 75 of module SwitchCompleteTransientFailure: 6399741
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2542, col 33 to line 2542, col 57 of module SwitchCompleteTransientFailure: 5397791
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2542, col 61 to line 2542, col 75 of module SwitchCompleteTransientFailure: 5397791
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2267, col 28 to line 2267, col 63 of module SwitchCompleteTransientFailure: 6399741
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2267, col 28 to line 2267, col 51 of module SwitchCompleteTransientFailure: 5397791
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2267, col 55 to line 2267, col 63 of module SwitchCompleteTransientFailure: 5397791
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2543, col 53 to line 2543, col 59 of module SwitchCompleteTransientFailure: 5397791
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2544, col 33 to line 2544, col 67 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2544, col 33 to line 2544, col 63 of module SwitchCompleteTransientFailure: 5383995
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2545, col 33 to line 2545, col 69 of module SwitchCompleteTransientFailure: 2167136
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2545, col 33 to line 2545, col 46 of module SwitchCompleteTransientFailure: 1165186
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2545, col 50 to line 2545, col 69 of module SwitchCompleteTransientFailure: 1165186
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2546, col 33 to line 2546, col 75 of module SwitchCompleteTransientFailure: 2029614
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2546, col 33 to line 2546, col 42 of module SwitchCompleteTransientFailure: 1027664
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2546, col 48 to line 2546, col 75 of module SwitchCompleteTransientFailure: 1027664
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2547, col 33 to line 2547, col 108 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2548, col 33 to line 2549, col 86 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2550, col 33 to line 2550, col 125 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2551, col 36 to line 2551, col 72 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2552, col 41 to line 2556, col 124 of module SwitchCompleteTransientFailure: 780850
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2557, col 44 to line 2557, col 157 of module SwitchCompleteTransientFailure: 221100
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2558, col 44 to line 2560, col 124 of module SwitchCompleteTransientFailure: 221100
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2561, col 44 to line 2561, col 65 of module SwitchCompleteTransientFailure: 221100
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2562, col 33 to line 2564, col 124 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2562, col 40 to line 2563, col 65 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2562, col 43 to line 2562, col 65 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2563, col 43 to line 2563, col 65 of module SwitchCompleteTransientFailure: 828675
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2565, col 33 to line 2565, col 66 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2566, col 33 to line 2566, col 81 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2567, col 33 to line 2605, col 71 of module SwitchCompleteTransientFailure: 1001950
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchRcvPacket line 2609, col 1 to line 2609, col 21 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2609, col 29 to line 2609, col 56 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2610, col 29 to line 2610, col 72 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2613, col 29 to line 2613, col 102 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2618, col 29 to line 2618, col 46 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2619, col 29 to line 2619, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2620, col 29 to line 2620, col 86 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2621, col 29 to line 2657, col 67 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchNicAsicInsertToOfaBuff line 2659, col 1 to line 2659, col 34 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2659, col 42 to line 2659, col 82 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2663, col 53 to line 2663, col 85 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2664, col 53 to line 2664, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2665, col 53 to line 2665, col 97 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2666, col 53 to line 2666, col 71 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2667, col 53 to line 2667, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2668, col 53 to line 2668, col 97 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2669, col 53 to line 2670, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2671, col 42 to line 2731, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchFromOFAPacket line 2736, col 1 to line 2736, col 25 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2736, col 33 to line 2736, col 64 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2737, col 33 to line 2737, col 60 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2738, col 33 to line 2738, col 65 of module SwitchCompleteTransientFailure: 5383990
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2739, col 33 to line 2739, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2742, col 33 to line 2742, col 50 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2746, col 33 to line 2746, col 119 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2747, col 33 to line 2747, col 85 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2748, col 33 to line 2788, col 71 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchNicAsicSendOutMsg line 2790, col 1 to line 2790, col 29 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2790, col 37 to line 2790, col 72 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2797, col 48 to line 2797, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2798, col 48 to line 2798, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2799, col 48 to line 2799, col 96 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2800, col 48 to line 2800, col 66 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2801, col 48 to line 2801, col 101 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2802, col 48 to line 2802, col 96 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2803, col 48 to line 2804, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2805, col 37 to line 2854, col 75 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchOfaProcIn line 2859, col 1 to line 2859, col 21 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2859, col 29 to line 2859, col 56 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2270, col 30 to line 2270, col 61 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2271, col 30 to line 2271, col 61 of module SwitchCompleteTransientFailure: 5383990
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2860, col 48 to line 2860, col 54 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2861, col 29 to line 2861, col 61 of module SwitchCompleteTransientFailure: 5383990
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2864, col 29 to line 2864, col 46 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2865, col 29 to line 2865, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2870, col 29 to line 2870, col 115 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2871, col 29 to line 2871, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2872, col 29 to line 2908, col 67 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchOfaProcessPacket line 2910, col 1 to line 2910, col 28 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2910, col 36 to line 2910, col 70 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2914, col 47 to line 2914, col 82 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2916, col 58 to line 2917, col 184 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2919, col 58 to line 2919, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2920, col 47 to line 2920, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2921, col 47 to line 2921, col 64 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2922, col 47 to line 2922, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2923, col 47 to line 2923, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2924, col 47 to line 2925, col 79 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2926, col 36 to line 2974, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchOfaProcOut line 2979, col 1 to line 2979, col 22 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2979, col 30 to line 2979, col 58 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2270, col 30 to line 2270, col 61 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2271, col 30 to line 2271, col 61 of module SwitchCompleteTransientFailure: 5383990
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2980, col 49 to line 2980, col 55 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2981, col 30 to line 2981, col 62 of module SwitchCompleteTransientFailure: 5383990
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2984, col 30 to line 2984, col 47 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2985, col 30 to line 2985, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2986, col 30 to line 2986, col 122 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2991, col 30 to line 2991, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2992, col 30 to line 3030, col 68 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SendInstallationConfirmation line 3032, col 1 to line 3032, col 34 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3032, col 42 to line 3032, col 82 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3036, col 53 to line 3036, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3038, col 64 to line 3040, col 194 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3041, col 64 to line 3043, col 194 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3044, col 53 to line 3044, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3045, col 53 to line 3045, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3046, col 53 to line 3046, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3047, col 53 to line 3047, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3048, col 53 to line 3049, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3050, col 42 to line 3109, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchInstallerProc line 3114, col 1 to line 3114, col 25 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3114, col 33 to line 3114, col 64 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2273, col 27 to line 2273, col 64 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2274, col 27 to line 2274, col 58 of module SwitchCompleteTransientFailure: 5383990
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3115, col 49 to line 3115, col 55 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3116, col 33 to line 3116, col 67 of module SwitchCompleteTransientFailure: 5383990
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3119, col 33 to line 3119, col 50 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3120, col 33 to line 3120, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3125, col 33 to line 3125, col 125 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3126, col 33 to line 3126, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3127, col 33 to line 3167, col 71 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchInstallerInsert2TCAM line 3169, col 1 to line 3169, col 32 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3169, col 40 to line 3169, col 78 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3173, col 51 to line 3173, col 68 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3175, col 62 to line 3175, col 123 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3176, col 62 to line 3176, col 143 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3177, col 62 to line 3177, col 177 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3178, col 62 to line 3178, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3179, col 51 to line 3179, col 111 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3180, col 51 to line 3180, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3181, col 51 to line 3181, col 101 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3182, col 51 to line 3182, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3183, col 51 to line 3185, col 70 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3186, col 40 to line 3243, col 78 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchInstallerSendConfirmation line 3245, col 1 to line 3245, col 37 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3245, col 45 to line 3245, col 88 of module SwitchCompleteTransientFailure: 5397786
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3249, col 56 to line 3249, col 89 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3250, col 56 to line 3250, col 171 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3251, col 56 to line 3251, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3252, col 56 to line 3252, col 78 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3253, col 56 to line 3253, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3254, col 56 to line 3254, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3255, col 56 to line 3256, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3257, col 45 to line 3324, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchFailure line 3330, col 1 to line 3330, col 19 of module SwitchCompleteTransientFailure>: 7:131
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3330, col 27 to line 3330, col 52 of module SwitchCompleteTransientFailure: 5397916
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3330, col 27 to line 3330, col 34 of module SwitchCompleteTransientFailure: 5397785
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3331, col 30 to line 3331, col 66 of module SwitchCompleteTransientFailure: 5397916
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3331, col 30 to line 3331, col 43 of module SwitchCompleteTransientFailure: 5397785
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3331, col 47 to line 3331, col 66 of module SwitchCompleteTransientFailure: 5397785
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3332, col 33 to line 3332, col 65 of module SwitchCompleteTransientFailure: 4608242
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3332, col 33 to line 3332, col 42 of module SwitchCompleteTransientFailure: 4608113
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3332, col 46 to line 3332, col 65 of module SwitchCompleteTransientFailure: 4608113
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3333, col 33 to line 3333, col 55 of module SwitchCompleteTransientFailure: 4608115
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3333, col 33 to line 3333, col 45 of module SwitchCompleteTransientFailure: 4608113
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3333, col 49 to line 3333, col 55 of module SwitchCompleteTransientFailure: 4608113
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3334, col 27 to line 3334, col 53 of module SwitchCompleteTransientFailure: 4434848
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3334, col 27 to line 3334, col 46 of module SwitchCompleteTransientFailure: 4434717
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3334, col 50 to line 3334, col 53 of module SwitchCompleteTransientFailure: 4434717
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3335, col 64 to line 3335, col 77 of module SwitchCompleteTransientFailure: 394
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3335, col 64 to line 3335, col 67 of module SwitchCompleteTransientFailure: 263
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3335, col 71 to line 3335, col 77 of module SwitchCompleteTransientFailure: 263
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3335, col 36 to line 3335, col 61 of module SwitchCompleteTransientFailure: 263
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3336, col 27 to line 3336, col 111 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3337, col 27 to line 3338, col 107 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3339, col 27 to line 3340, col 118 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3341, col 30 to line 3341, col 72 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3342, col 35 to line 3342, col 87 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3343, col 38 to line 3343, col 136 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3344, col 27 to line 3344, col 83 of module SwitchCompleteTransientFailure: 262
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3344, col 27 to line 3344, col 58 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3345, col 30 to line 3345, col 51 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3346, col 41 to line 3346, col 81 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3347, col 46 to line 3351, col 112 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3353, col 49 to line 3355, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3356, col 38 to line 3357, col 128 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3358, col 38 to line 3358, col 98 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3359, col 38 to line 3359, col 98 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3360, col 38 to line 3360, col 102 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3361, col 38 to line 3361, col 102 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3362, col 38 to line 3362, col 76 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3363, col 38 to line 3363, col 102 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3364, col 38 to line 3364, col 77 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3365, col 38 to line 3365, col 123 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3368, col 40 to line 3368, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3372, col 49 to line 3374, col 115 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3375, col 49 to line 3375, col 109 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3376, col 49 to line 3376, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3377, col 49 to line 3377, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3378, col 49 to line 3378, col 109 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3380, col 60 to line 3380, col 150 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3381, col 60 to line 3383, col 138 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3384, col 60 to line 3384, col 123 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3386, col 60 to line 3388, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3389, col 49 to line 3389, col 75 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3393, col 60 to line 3393, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3395, col 71 to line 3395, col 161 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3396, col 71 to line 3398, col 149 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3399, col 71 to line 3399, col 134 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3401, col 71 to line 3403, col 95 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3404, col 60 to line 3404, col 86 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3408, col 71 to line 3408, col 137 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3412, col 82 to line 3412, col 172 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3413, col 82 to line 3416, col 210 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3417, col 82 to line 3417, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3419, col 82 to line 3421, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3422, col 71 to line 3422, col 97 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3426, col 82 to line 3426, col 146 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3427, col 82 to line 3427, col 146 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3428, col 82 to line 3428, col 172 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3429, col 82 to line 3431, col 160 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3432, col 82 to line 3432, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3435, col 82 to line 3439, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3440, col 49 to line 3443, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3444, col 38 to line 3444, col 49 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3445, col 27 to line 3445, col 69 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3446, col 27 to line 3474, col 76 of module SwitchCompleteTransientFailure: 131
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SwitchResolveFailure line 3478, col 1 to line 3478, col 26 of module SwitchCompleteTransientFailure>: 173:11229
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3478, col 34 to line 3478, col 66 of module SwitchCompleteTransientFailure: 5409012
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3478, col 34 to line 3478, col 41 of module SwitchCompleteTransientFailure: 5397783
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3479, col 34 to line 3479, col 70 of module SwitchCompleteTransientFailure: 5409012
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3479, col 34 to line 3479, col 66 of module SwitchCompleteTransientFailure: 5397783
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3480, col 37 to line 3480, col 73 of module SwitchCompleteTransientFailure: 25025
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3480, col 37 to line 3480, col 50 of module SwitchCompleteTransientFailure: 13796
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3480, col 54 to line 3480, col 73 of module SwitchCompleteTransientFailure: 13796
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3481, col 37 to line 3481, col 69 of module SwitchCompleteTransientFailure: 23206
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3481, col 37 to line 3481, col 46 of module SwitchCompleteTransientFailure: 11977
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3481, col 50 to line 3481, col 69 of module SwitchCompleteTransientFailure: 11977
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3482, col 37 to line 3482, col 71 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3483, col 45 to line 3484, col 137 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3485, col 45 to line 3486, col 137 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3487, col 45 to line 3488, col 137 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3489, col 45 to line 3490, col 137 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2292, col 33 to line 2292, col 77 of module SwitchCompleteTransientFailure: 22458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2292, col 33 to line 2292, col 57 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2293, col 33 to line 2293, col 82 of module SwitchCompleteTransientFailure: 22458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2293, col 33 to line 2293, col 58 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3491, col 65 to line 3491, col 71 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2290, col 29 to line 2290, col 68 of module SwitchCompleteTransientFailure: 22458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2290, col 29 to line 2290, col 48 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2291, col 29 to line 2291, col 70 of module SwitchCompleteTransientFailure: 22458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2291, col 29 to line 2291, col 49 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3492, col 61 to line 3492, col 67 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2289, col 34 to line 2289, col 80 of module SwitchCompleteTransientFailure: 22458
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2289, col 34 to line 2289, col 56 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3493, col 69 to line 3493, col 75 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3494, col 45 to line 3495, col 141 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3496, col 45 to line 3496, col 105 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3497, col 45 to line 3497, col 105 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3498, col 45 to line 3498, col 109 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3499, col 45 to line 3499, col 109 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3500, col 45 to line 3500, col 83 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3501, col 45 to line 3501, col 109 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3502, col 45 to line 3502, col 135 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3503, col 45 to line 3506, col 187 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3507, col 45 to line 3507, col 115 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3508, col 45 to line 3509, col 73 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3510, col 45 to line 3510, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3513, col 47 to line 3513, col 100 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3518, col 56 to line 3520, col 125 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3521, col 56 to line 3521, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3522, col 56 to line 3522, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3523, col 56 to line 3523, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3524, col 56 to line 3524, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3526, col 67 to line 3526, col 157 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3527, col 67 to line 3530, col 209 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3531, col 67 to line 3531, col 137 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3533, col 67 to line 3535, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3536, col 56 to line 3536, col 82 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3541, col 67 to line 3541, col 134 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3542, col 67 to line 3542, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3544, col 78 to line 3544, col 168 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3545, col 78 to line 3547, col 170 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3548, col 78 to line 3548, col 168 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3549, col 78 to line 3552, col 220 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3553, col 67 to line 3553, col 137 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3558, col 78 to line 3558, col 141 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3560, col 89 to line 3560, col 179 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3561, col 89 to line 3564, col 231 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3565, col 89 to line 3565, col 159 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3567, col 89 to line 3569, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3574, col 89 to line 3574, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3578, col 100 to line 3578, col 190 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3579, col 100 to line 3582, col 242 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3583, col 100 to line 3583, col 170 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3585, col 100 to line 3587, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3590, col 89 to line 3593, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3594, col 67 to line 3594, col 93 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3595, col 56 to line 3598, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3599, col 45 to line 3599, col 56 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3600, col 34 to line 3600, col 120 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3601, col 34 to line 3601, col 83 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3602, col 34 to line 3637, col 78 of module SwitchCompleteTransientFailure: 11229
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ghostProc line 3641, col 1 to line 3641, col 15 of module SwitchCompleteTransientFailure>: 59068:173396
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3641, col 23 to line 3641, col 44 of module SwitchCompleteTransientFailure: 5571178
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3641, col 23 to line 3641, col 30 of module SwitchCompleteTransientFailure: 5397782
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3642, col 26 to line 3642, col 58 of module SwitchCompleteTransientFailure: 5571178
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3642, col 26 to line 3642, col 35 of module SwitchCompleteTransientFailure: 5397782
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3642, col 39 to line 3642, col 58 of module SwitchCompleteTransientFailure: 5397782
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3643, col 26 to line 3643, col 48 of module SwitchCompleteTransientFailure: 520188
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3643, col 26 to line 3643, col 38 of module SwitchCompleteTransientFailure: 346792
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3643, col 42 to line 3643, col 48 of module SwitchCompleteTransientFailure: 346792
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3644, col 26 to line 3644, col 62 of module SwitchCompleteTransientFailure: 346792
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3644, col 26 to line 3644, col 39 of module SwitchCompleteTransientFailure: 173396
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3644, col 43 to line 3644, col 62 of module SwitchCompleteTransientFailure: 173396
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3645, col 26 to line 3645, col 97 of module SwitchCompleteTransientFailure: 173396
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3645, col 26 to line 3645, col 65 of module SwitchCompleteTransientFailure: 173396
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3645, col 70 to line 3645, col 97 of module SwitchCompleteTransientFailure: 124
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3647, col 31 to line 3658, col 70 of module SwitchCompleteTransientFailure: 173396
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3659, col 23 to line 3661, col 114 of module SwitchCompleteTransientFailure: 173396
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3662, col 23 to line 3662, col 56 of module SwitchCompleteTransientFailure: 173396
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3663, col 23 to line 3663, col 61 of module SwitchCompleteTransientFailure: 173396
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3664, col 23 to line 3694, col 67 of module SwitchCompleteTransientFailure: 173396
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<RCSNIBEventHndlerProc line 3698, col 1 to line 3698, col 27 of module SwitchCompleteTransientFailure>: 93433:1887967
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3698, col 35 to line 3698, col 68 of module SwitchCompleteTransientFailure: 4586858
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3698, col 35 to line 3698, col 42 of module SwitchCompleteTransientFailure: 2698891
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 2698891
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 4586858
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 2698891
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3699, col 54 to line 3699, col 60 of module SwitchCompleteTransientFailure: 2698891
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 4586858
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 2698891
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 2698891
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3700, col 46 to line 3700, col 49 of module SwitchCompleteTransientFailure: 2698891
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3701, col 35 to line 3701, col 65 of module SwitchCompleteTransientFailure: 4586858
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3701, col 35 to line 3701, col 58 of module SwitchCompleteTransientFailure: 2698891
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3701, col 62 to line 3701, col 65 of module SwitchCompleteTransientFailure: 2698891
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3702, col 35 to line 3702, col 98 of module SwitchCompleteTransientFailure: 1887967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3703, col 35 to line 3704, col 88 of module SwitchCompleteTransientFailure: 1887967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3705, col 39 to line 3705, col 66 of module SwitchCompleteTransientFailure: 1887967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3706, col 49 to line 3706, col 115 of module SwitchCompleteTransientFailure: 38572
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3707, col 54 to line 3708, col 150 of module SwitchCompleteTransientFailure: 38572
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3710, col 57 to line 3711, col 92 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3712, col 46 to line 3713, col 76 of module SwitchCompleteTransientFailure: 38572
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3714, col 50 to line 3714, col 75 of module SwitchCompleteTransientFailure: 1849395
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3715, col 60 to line 3715, col 116 of module SwitchCompleteTransientFailure: 1849395
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3716, col 68 to line 3716, col 149 of module SwitchCompleteTransientFailure: 1795576
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3717, col 71 to line 3717, col 120 of module SwitchCompleteTransientFailure: 1795576
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3718, col 76 to line 3718, col 207 of module SwitchCompleteTransientFailure: 1795576
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3720, col 79 to line 3720, col 103 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3721, col 68 to line 3721, col 71 of module SwitchCompleteTransientFailure: 53819
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3722, col 68 to line 3723, col 98 of module SwitchCompleteTransientFailure: 53819
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3725, col 57 to line 3726, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3727, col 46 to line 3728, col 81 of module SwitchCompleteTransientFailure: 1849395
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3729, col 35 to line 3729, col 121 of module SwitchCompleteTransientFailure: 1887967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3730, col 35 to line 3730, col 85 of module SwitchCompleteTransientFailure: 1887967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3731, col 35 to line 3774, col 79 of module SwitchCompleteTransientFailure: 1887967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEProc line 3778, col 1 to line 3778, col 22 of module SwitchCompleteTransientFailure>: 141693:142357
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3778, col 30 to line 3778, col 58 of module SwitchCompleteTransientFailure: 2841214
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3778, col 30 to line 3778, col 37 of module SwitchCompleteTransientFailure: 2698883
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 1162028
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 1304359
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 1162028
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3779, col 49 to line 3779, col 55 of module SwitchCompleteTransientFailure: 1162028
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1304359
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 1162028
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1162028
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3780, col 41 to line 3780, col 44 of module SwitchCompleteTransientFailure: 1162028
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3781, col 30 to line 3781, col 43 of module SwitchCompleteTransientFailure: 1162092
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3781, col 30 to line 3781, col 39 of module SwitchCompleteTransientFailure: 1162028
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3781, col 48 to line 3781, col 75 of module SwitchCompleteTransientFailure: 1304321
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3781, col 48 to line 3781, col 68 of module SwitchCompleteTransientFailure: 1162028
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3781, col 72 to line 3781, col 75 of module SwitchCompleteTransientFailure: 1162028
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3782, col 30 to line 3782, col 76 of module SwitchCompleteTransientFailure: 295593
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3782, col 30 to line 3782, col 43 of module SwitchCompleteTransientFailure: 153236
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3782, col 49 to line 3782, col 76 of module SwitchCompleteTransientFailure: 153236
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3783, col 30 to line 3783, col 62 of module SwitchCompleteTransientFailure: 295593
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3783, col 30 to line 3783, col 39 of module SwitchCompleteTransientFailure: 153236
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3783, col 43 to line 3783, col 62 of module SwitchCompleteTransientFailure: 153236
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3784, col 30 to line 3784, col 51 of module SwitchCompleteTransientFailure: 142357
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3785, col 30 to line 3785, col 86 of module SwitchCompleteTransientFailure: 142357
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3786, col 30 to line 3825, col 68 of module SwitchCompleteTransientFailure: 142357
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEEventProcessing line 3827, col 1 to line 3827, col 33 of module SwitchCompleteTransientFailure>: 151506:289275
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3827, col 41 to line 3827, col 80 of module SwitchCompleteTransientFailure: 2988155
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3827, col 41 to line 3827, col 48 of module SwitchCompleteTransientFailure: 2698880
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3828, col 44 to line 3828, col 71 of module SwitchCompleteTransientFailure: 289275
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3829, col 52 to line 3829, col 98 of module SwitchCompleteTransientFailure: 297198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3829, col 52 to line 3829, col 65 of module SwitchCompleteTransientFailure: 148599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3829, col 71 to line 3829, col 98 of module SwitchCompleteTransientFailure: 148599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3830, col 52 to line 3830, col 84 of module SwitchCompleteTransientFailure: 297198
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3830, col 52 to line 3830, col 61 of module SwitchCompleteTransientFailure: 148599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3830, col 65 to line 3830, col 84 of module SwitchCompleteTransientFailure: 148599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3831, col 52 to line 3831, col 132 of module SwitchCompleteTransientFailure: 148599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3832, col 52 to line 3833, col 106 of module SwitchCompleteTransientFailure: 148599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3834, col 55 to line 3834, col 95 of module SwitchCompleteTransientFailure: 148599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3835, col 60 to line 3835, col 164 of module SwitchCompleteTransientFailure: 12681
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3836, col 60 to line 3836, col 161 of module SwitchCompleteTransientFailure: 135918
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3837, col 52 to line 3837, col 129 of module SwitchCompleteTransientFailure: 148599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3838, col 52 to line 3838, col 108 of module SwitchCompleteTransientFailure: 148599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3839, col 52 to line 3839, col 75 of module SwitchCompleteTransientFailure: 148599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3840, col 52 to line 3840, col 98 of module SwitchCompleteTransientFailure: 281352
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3840, col 52 to line 3840, col 65 of module SwitchCompleteTransientFailure: 140676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3840, col 71 to line 3840, col 98 of module SwitchCompleteTransientFailure: 140676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3841, col 52 to line 3841, col 84 of module SwitchCompleteTransientFailure: 281352
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3841, col 52 to line 3841, col 61 of module SwitchCompleteTransientFailure: 140676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3841, col 65 to line 3841, col 84 of module SwitchCompleteTransientFailure: 140676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3842, col 52 to line 3842, col 89 of module SwitchCompleteTransientFailure: 140676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3843, col 52 to line 3843, col 114 of module SwitchCompleteTransientFailure: 140676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3844, col 52 to line 3846, col 80 of module SwitchCompleteTransientFailure: 140676
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3847, col 41 to line 3903, col 79 of module SwitchCompleteTransientFailure: 289275
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEComputeDagBasedOnTopo line 3905, col 1 to line 3905, col 39 of module SwitchCompleteTransientFailure>: 4285:146296
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3905, col 47 to line 3905, col 92 of module SwitchCompleteTransientFailure: 2845171
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3905, col 47 to line 3905, col 54 of module SwitchCompleteTransientFailure: 2698875
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3906, col 47 to line 3906, col 93 of module SwitchCompleteTransientFailure: 303908
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3906, col 47 to line 3906, col 60 of module SwitchCompleteTransientFailure: 157612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3906, col 66 to line 3906, col 93 of module SwitchCompleteTransientFailure: 157612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3907, col 47 to line 3907, col 79 of module SwitchCompleteTransientFailure: 303908
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3907, col 47 to line 3907, col 56 of module SwitchCompleteTransientFailure: 157612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3907, col 60 to line 3907, col 79 of module SwitchCompleteTransientFailure: 157612
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3908, col 47 to line 3908, col 77 of module SwitchCompleteTransientFailure: 146296
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3909, col 47 to line 3909, col 144 of module SwitchCompleteTransientFailure: 146296
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3910, col 50 to line 3910, col 83 of module SwitchCompleteTransientFailure: 146296
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3911, col 58 to line 3911, col 103 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3912, col 58 to line 3915, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3916, col 58 to line 3916, col 128 of module SwitchCompleteTransientFailure: 146296
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3917, col 61 to line 3917, col 74 of module SwitchCompleteTransientFailure: 146296
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3918, col 69 to line 3918, col 130 of module SwitchCompleteTransientFailure: 146201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3919, col 69 to line 3919, col 127 of module SwitchCompleteTransientFailure: 146201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3920, col 69 to line 3921, col 88 of module SwitchCompleteTransientFailure: 146201
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3922, col 69 to line 3922, col 101 of module SwitchCompleteTransientFailure: 95
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3923, col 69 to line 3923, col 120 of module SwitchCompleteTransientFailure: 95
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3924, col 69 to line 3924, col 130 of module SwitchCompleteTransientFailure: 95
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3925, col 69 to line 3925, col 86 of module SwitchCompleteTransientFailure: 95
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3926, col 47 to line 3997, col 85 of module SwitchCompleteTransientFailure: 146296
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTESendDagStaleNotif line 3999, col 1 to line 3999, col 35 of module SwitchCompleteTransientFailure>: 3925:234190
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 3999, col 43 to line 3999, col 84 of module SwitchCompleteTransientFailure: 2933062
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 3999, col 43 to line 3999, col 50 of module SwitchCompleteTransientFailure: 2698872
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4000, col 43 to line 4000, col 89 of module SwitchCompleteTransientFailure: 487756
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4000, col 43 to line 4000, col 56 of module SwitchCompleteTransientFailure: 253566
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4000, col 62 to line 4000, col 89 of module SwitchCompleteTransientFailure: 253566
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4001, col 43 to line 4001, col 75 of module SwitchCompleteTransientFailure: 487756
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4001, col 43 to line 4001, col 52 of module SwitchCompleteTransientFailure: 253566
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4001, col 56 to line 4001, col 75 of module SwitchCompleteTransientFailure: 253566
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4002, col 43 to line 4002, col 173 of module SwitchCompleteTransientFailure: 234190
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4003, col 43 to line 4003, col 110 of module SwitchCompleteTransientFailure: 234190
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4004, col 43 to line 4067, col 81 of module SwitchCompleteTransientFailure: 234190
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEWaitForStaleDAGToBeRemoved line 4069, col 1 to line 4069, col 44 of module SwitchCompleteTransientFailure>: 3548:112936
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4069, col 52 to line 4069, col 102 of module SwitchCompleteTransientFailure: 2811806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4069, col 52 to line 4069, col 59 of module SwitchCompleteTransientFailure: 2698870
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4070, col 52 to line 4070, col 98 of module SwitchCompleteTransientFailure: 613097
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4070, col 52 to line 4070, col 65 of module SwitchCompleteTransientFailure: 500161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4070, col 71 to line 4070, col 98 of module SwitchCompleteTransientFailure: 500161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4071, col 52 to line 4071, col 84 of module SwitchCompleteTransientFailure: 613097
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4071, col 52 to line 4071, col 61 of module SwitchCompleteTransientFailure: 500161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4071, col 65 to line 4071, col 84 of module SwitchCompleteTransientFailure: 500161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4072, col 52 to line 4072, col 89 of module SwitchCompleteTransientFailure: 574259
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4072, col 52 to line 4072, col 78 of module SwitchCompleteTransientFailure: 461323
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4072, col 82 to line 4072, col 89 of module SwitchCompleteTransientFailure: 461323
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4073, col 52 to line 4073, col 102 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4074, col 52 to line 4074, col 107 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4075, col 52 to line 4075, col 180 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4075, col 71 to line 4075, col 180 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4075, col 72 to line 4075, col 86 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4075, col 95 to line 4075, col 179 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4075, col 105 to line 4075, col 179 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2319, col 44 to line 2322, col 86 of module SwitchCompleteTransientFailure: 112936:5167
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2319, col 65 to line 2322, col 85 of module SwitchCompleteTransientFailure: 338808
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2319, col 68 to line 2320, col 101 of module SwitchCompleteTransientFailure: 338808
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2319, col 71 to line 2319, col 98 of module SwitchCompleteTransientFailure: 338808
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2320, col 71 to line 2320, col 101 of module SwitchCompleteTransientFailure: 214241
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2321, col 68 to line 2321, col 83 of module SwitchCompleteTransientFailure: 203035
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2322, col 68 to line 2322, col 85 of module SwitchCompleteTransientFailure: 53100
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2319, col 51 to line 2319, col 62 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4075, col 124 to line 4075, col 130 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4075, col 133 to line 4075, col 156 of module SwitchCompleteTransientFailure: 38563
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4075, col 159 to line 4075, col 178 of module SwitchCompleteTransientFailure: 111850
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4076, col 52 to line 4076, col 113 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4077, col 52 to line 4155, col 90 of module SwitchCompleteTransientFailure: 112936
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTERemoveUnnecessaryIRs line 4157, col 1 to line 4157, col 38 of module SwitchCompleteTransientFailure>: 38510:144642
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4157, col 46 to line 4157, col 90 of module SwitchCompleteTransientFailure: 2843510
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4157, col 46 to line 4157, col 53 of module SwitchCompleteTransientFailure: 2698868
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4158, col 49 to line 4158, col 74 of module SwitchCompleteTransientFailure: 154078
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4159, col 57 to line 4159, col 103 of module SwitchCompleteTransientFailure: 73047
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4159, col 57 to line 4159, col 70 of module SwitchCompleteTransientFailure: 37709
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4159, col 76 to line 4159, col 103 of module SwitchCompleteTransientFailure: 37709
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4160, col 57 to line 4160, col 89 of module SwitchCompleteTransientFailure: 73047
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4160, col 57 to line 4160, col 66 of module SwitchCompleteTransientFailure: 37709
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4160, col 70 to line 4160, col 89 of module SwitchCompleteTransientFailure: 37709
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4161, col 57 to line 4161, col 78 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4162, col 57 to line 4162, col 132 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4163, col 57 to line 4163, col 149 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4164, col 57 to line 4164, col 148 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4165, col 57 to line 4165, col 108 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4166, col 57 to line 4166, col 104 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4167, col 57 to line 4167, col 160 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4168, col 57 to line 4168, col 109 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4169, col 57 to line 4169, col 133 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4170, col 57 to line 4170, col 170 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4170, col 72 to line 4170, col 170 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4170, col 73 to line 4170, col 83 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4170, col 92 to line 4170, col 169 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4170, col 102 to line 4170, col 169 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2323, col 43 to line 2323, col 74 of module SwitchCompleteTransientFailure: 35338:2738
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2323, col 59 to line 2323, col 73 of module SwitchCompleteTransientFailure: 53973
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2323, col 50 to line 2323, col 56 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4170, col 126 to line 4170, col 146 of module SwitchCompleteTransientFailure: 53973
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4170, col 149 to line 4170, col 168 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4171, col 57 to line 4171, col 105 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4172, col 57 to line 4172, col 81 of module SwitchCompleteTransientFailure: 35338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4173, col 57 to line 4173, col 103 of module SwitchCompleteTransientFailure: 225673
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4173, col 57 to line 4173, col 70 of module SwitchCompleteTransientFailure: 116369
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4173, col 76 to line 4173, col 103 of module SwitchCompleteTransientFailure: 116369
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4174, col 57 to line 4174, col 89 of module SwitchCompleteTransientFailure: 225673
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4174, col 57 to line 4174, col 66 of module SwitchCompleteTransientFailure: 116369
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4174, col 70 to line 4174, col 89 of module SwitchCompleteTransientFailure: 116369
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4175, col 57 to line 4175, col 94 of module SwitchCompleteTransientFailure: 109304
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4176, col 57 to line 4176, col 131 of module SwitchCompleteTransientFailure: 109304
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4177, col 57 to line 4177, col 110 of module SwitchCompleteTransientFailure: 109304
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4178, col 57 to line 4186, col 83 of module SwitchCompleteTransientFailure: 109304
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4187, col 46 to line 4251, col 84 of module SwitchCompleteTransientFailure: 144642
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTEAddEdge line 4253, col 1 to line 4253, col 25 of module SwitchCompleteTransientFailure>: 70401:70438
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4253, col 33 to line 4253, col 64 of module SwitchCompleteTransientFailure: 2769302
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4253, col 33 to line 4253, col 40 of module SwitchCompleteTransientFailure: 2698864
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4254, col 36 to line 4254, col 57 of module SwitchCompleteTransientFailure: 70438
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4255, col 44 to line 4255, col 90 of module SwitchCompleteTransientFailure: 70508
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4255, col 44 to line 4255, col 57 of module SwitchCompleteTransientFailure: 35254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4255, col 63 to line 4255, col 90 of module SwitchCompleteTransientFailure: 35254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4256, col 44 to line 4256, col 76 of module SwitchCompleteTransientFailure: 70508
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4256, col 44 to line 4256, col 53 of module SwitchCompleteTransientFailure: 35254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4256, col 57 to line 4256, col 76 of module SwitchCompleteTransientFailure: 35254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4257, col 44 to line 4257, col 65 of module SwitchCompleteTransientFailure: 35254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4258, col 44 to line 4258, col 125 of module SwitchCompleteTransientFailure: 35254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4259, col 44 to line 4259, col 129 of module SwitchCompleteTransientFailure: 35254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4260, col 44 to line 4260, col 144 of module SwitchCompleteTransientFailure: 35254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4261, col 44 to line 4261, col 92 of module SwitchCompleteTransientFailure: 35254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4262, col 44 to line 4262, col 62 of module SwitchCompleteTransientFailure: 35254
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4263, col 44 to line 4263, col 69 of module SwitchCompleteTransientFailure: 35184
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4264, col 44 to line 4264, col 90 of module SwitchCompleteTransientFailure: 70368
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4264, col 44 to line 4264, col 57 of module SwitchCompleteTransientFailure: 35184
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4264, col 63 to line 4264, col 90 of module SwitchCompleteTransientFailure: 35184
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4265, col 44 to line 4265, col 76 of module SwitchCompleteTransientFailure: 70368
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4265, col 44 to line 4265, col 53 of module SwitchCompleteTransientFailure: 35184
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4265, col 57 to line 4265, col 76 of module SwitchCompleteTransientFailure: 35184
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4266, col 44 to line 4266, col 65 of module SwitchCompleteTransientFailure: 35184
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4267, col 44 to line 4267, col 105 of module SwitchCompleteTransientFailure: 35184
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4268, col 44 to line 4269, col 70 of module SwitchCompleteTransientFailure: 35184
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4270, col 33 to line 4311, col 71 of module SwitchCompleteTransientFailure: 70438
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerTESubmitNewDAG line 4313, col 1 to line 4313, col 30 of module SwitchCompleteTransientFailure>: 3620:102829
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4313, col 38 to line 4313, col 74 of module SwitchCompleteTransientFailure: 2801691
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4313, col 38 to line 4313, col 45 of module SwitchCompleteTransientFailure: 2698862
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4314, col 38 to line 4314, col 84 of module SwitchCompleteTransientFailure: 214554
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4314, col 38 to line 4314, col 51 of module SwitchCompleteTransientFailure: 111725
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4314, col 57 to line 4314, col 84 of module SwitchCompleteTransientFailure: 111725
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4315, col 38 to line 4315, col 70 of module SwitchCompleteTransientFailure: 214554
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4315, col 38 to line 4315, col 47 of module SwitchCompleteTransientFailure: 111725
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4315, col 51 to line 4315, col 70 of module SwitchCompleteTransientFailure: 111725
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4316, col 38 to line 4316, col 98 of module SwitchCompleteTransientFailure: 102829
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4317, col 38 to line 4317, col 166 of module SwitchCompleteTransientFailure: 102829
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4318, col 38 to line 4318, col 83 of module SwitchCompleteTransientFailure: 102829
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4319, col 38 to line 4372, col 76 of module SwitchCompleteTransientFailure: 102829
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerBossSeqProc line 4383, col 1 to line 4383, col 27 of module SwitchCompleteTransientFailure>: 7420:350095
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4383, col 35 to line 4383, col 68 of module SwitchCompleteTransientFailure: 3048954
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4383, col 35 to line 4383, col 42 of module SwitchCompleteTransientFailure: 2698859
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 2569478
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 2919573
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 2569478
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4384, col 54 to line 4384, col 60 of module SwitchCompleteTransientFailure: 2569478
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 2919573
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 2569478
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 2569478
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4385, col 46 to line 4385, col 49 of module SwitchCompleteTransientFailure: 2569478
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4386, col 35 to line 4386, col 63 of module SwitchCompleteTransientFailure: 2919573
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4386, col 35 to line 4386, col 56 of module SwitchCompleteTransientFailure: 2569478
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4386, col 60 to line 4386, col 63 of module SwitchCompleteTransientFailure: 2569478
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4387, col 35 to line 4387, col 81 of module SwitchCompleteTransientFailure: 751315
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4387, col 35 to line 4387, col 48 of module SwitchCompleteTransientFailure: 401220
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4387, col 54 to line 4387, col 81 of module SwitchCompleteTransientFailure: 401220
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4388, col 35 to line 4388, col 67 of module SwitchCompleteTransientFailure: 729499
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4388, col 35 to line 4388, col 44 of module SwitchCompleteTransientFailure: 379404
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4388, col 48 to line 4388, col 67 of module SwitchCompleteTransientFailure: 379404
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4389, col 35 to line 4389, col 102 of module SwitchCompleteTransientFailure: 350095
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4390, col 35 to line 4390, col 115 of module SwitchCompleteTransientFailure: 350095
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4391, col 35 to line 4392, col 88 of module SwitchCompleteTransientFailure: 350095
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4393, col 38 to line 4393, col 67 of module SwitchCompleteTransientFailure: 350095
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4394, col 46 to line 4394, col 138 of module SwitchCompleteTransientFailure: 132075
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4395, col 46 to line 4395, col 96 of module SwitchCompleteTransientFailure: 132075
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4396, col 46 to line 4398, col 67 of module SwitchCompleteTransientFailure: 132075
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4399, col 46 to line 4399, col 121 of module SwitchCompleteTransientFailure: 218020
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4400, col 49 to line 4400, col 74 of module SwitchCompleteTransientFailure: 218020
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4401, col 57 to line 4401, col 148 of module SwitchCompleteTransientFailure: 117643
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4402, col 57 to line 4402, col 113 of module SwitchCompleteTransientFailure: 117643
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4403, col 57 to line 4403, col 74 of module SwitchCompleteTransientFailure: 117643
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4404, col 57 to line 4404, col 118 of module SwitchCompleteTransientFailure: 100377
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4405, col 57 to line 4405, col 107 of module SwitchCompleteTransientFailure: 100377
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4406, col 57 to line 4406, col 83 of module SwitchCompleteTransientFailure: 100377
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4407, col 46 to line 4407, col 63 of module SwitchCompleteTransientFailure: 218020
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4408, col 35 to line 4452, col 79 of module SwitchCompleteTransientFailure: 350095
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<WaitForRCSeqWorkerTerminate line 4454, col 1 to line 4454, col 33 of module SwitchCompleteTransientFailure>: 1707:56335
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4454, col 41 to line 4454, col 80 of module SwitchCompleteTransientFailure: 2755189
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4454, col 41 to line 4454, col 48 of module SwitchCompleteTransientFailure: 2698854
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4455, col 41 to line 4455, col 92 of module SwitchCompleteTransientFailure: 185716
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4455, col 41 to line 4455, col 79 of module SwitchCompleteTransientFailure: 129381
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4455, col 83 to line 4455, col 92 of module SwitchCompleteTransientFailure: 129381
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4456, col 41 to line 4456, col 101 of module SwitchCompleteTransientFailure: 56335
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4457, col 41 to line 4457, col 91 of module SwitchCompleteTransientFailure: 56335
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4458, col 41 to line 4519, col 79 of module SwitchCompleteTransientFailure: 56335
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerWorkerSeqProc line 4524, col 1 to line 4524, col 29 of module SwitchCompleteTransientFailure>: 5804:145048
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4524, col 37 to line 4524, col 72 of module SwitchCompleteTransientFailure: 2843902
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4524, col 37 to line 4524, col 44 of module SwitchCompleteTransientFailure: 2698854
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 59 of module SwitchCompleteTransientFailure: 1028368
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 64 to line 2300, col 90 of module SwitchCompleteTransientFailure: 1173416
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2300, col 64 to line 2300, col 78 of module SwitchCompleteTransientFailure: 1028368
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4525, col 56 to line 4525, col 62 of module SwitchCompleteTransientFailure: 1028368
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1173416
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 1028368
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1028368
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4526, col 48 to line 4526, col 51 of module SwitchCompleteTransientFailure: 1028368
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4527, col 37 to line 4527, col 60 of module SwitchCompleteTransientFailure: 1173416
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4527, col 37 to line 4527, col 53 of module SwitchCompleteTransientFailure: 1028368
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4527, col 57 to line 4527, col 60 of module SwitchCompleteTransientFailure: 1028368
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4528, col 37 to line 4528, col 83 of module SwitchCompleteTransientFailure: 323446
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4528, col 37 to line 4528, col 50 of module SwitchCompleteTransientFailure: 178398
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4528, col 56 to line 4528, col 83 of module SwitchCompleteTransientFailure: 178398
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4529, col 37 to line 4529, col 69 of module SwitchCompleteTransientFailure: 301630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4529, col 37 to line 4529, col 46 of module SwitchCompleteTransientFailure: 156582
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4529, col 50 to line 4529, col 69 of module SwitchCompleteTransientFailure: 156582
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4530, col 37 to line 4530, col 97 of module SwitchCompleteTransientFailure: 145048
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4531, col 37 to line 4531, col 120 of module SwitchCompleteTransientFailure: 145048
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4532, col 37 to line 4532, col 96 of module SwitchCompleteTransientFailure: 145048
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4533, col 37 to line 4583, col 75 of module SwitchCompleteTransientFailure: 145048
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerWorkerSeqScheduleDAG line 4585, col 1 to line 4585, col 36 of module SwitchCompleteTransientFailure>: 15698:394311
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4585, col 44 to line 4585, col 86 of module SwitchCompleteTransientFailure: 3093162
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4585, col 44 to line 4585, col 51 of module SwitchCompleteTransientFailure: 2698851
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4586, col 47 to line 4586, col 128 of module SwitchCompleteTransientFailure: 1169417
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4586, col 47 to line 4586, col 95 of module SwitchCompleteTransientFailure: 1169417
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4586, col 48 to line 4586, col 95 of module SwitchCompleteTransientFailure: 1169417
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2331, col 35 to line 2331, col 79 of module SwitchCompleteTransientFailure: 1169417
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2331, col 36 to line 2331, col 79 of module SwitchCompleteTransientFailure: 1169417
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2331, col 52 to line 2331, col 79 of module SwitchCompleteTransientFailure: 1302514
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2331, col 45 to line 2331, col 49 of module SwitchCompleteTransientFailure: 1169417
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4586, col 69 to line 4586, col 75 of module SwitchCompleteTransientFailure: 1169417
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4586, col 78 to line 4586, col 94 of module SwitchCompleteTransientFailure: 1169417
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4586, col 100 to line 4586, col 128 of module SwitchCompleteTransientFailure: 1144887
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4587, col 55 to line 4587, col 101 of module SwitchCompleteTransientFailure: 946942
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4587, col 55 to line 4587, col 68 of module SwitchCompleteTransientFailure: 861024
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4587, col 74 to line 4587, col 101 of module SwitchCompleteTransientFailure: 861024
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4588, col 55 to line 4588, col 87 of module SwitchCompleteTransientFailure: 760240
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4588, col 55 to line 4588, col 64 of module SwitchCompleteTransientFailure: 674322
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4588, col 68 to line 4588, col 87 of module SwitchCompleteTransientFailure: 674322
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4589, col 55 to line 4589, col 165 of module SwitchCompleteTransientFailure: 85918
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4589, col 75 to line 4589, col 165 of module SwitchCompleteTransientFailure: 620217
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4589, col 76 to line 4589, col 91 of module SwitchCompleteTransientFailure: 620217
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4589, col 100 to line 4589, col 164 of module SwitchCompleteTransientFailure: 620217
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4589, col 110 to line 4589, col 164 of module SwitchCompleteTransientFailure: 620217
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2327, col 43 to line 2330, col 94 of module SwitchCompleteTransientFailure: 620217:51497
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2327, col 57 to line 2330, col 93 of module SwitchCompleteTransientFailure: 1375454
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2327, col 60 to line 2327, col 87 of module SwitchCompleteTransientFailure: 1375454
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2328, col 60 to line 2328, col 93 of module SwitchCompleteTransientFailure: 1010390
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2325, col 40 to line 2326, col 87 of module SwitchCompleteTransientFailure: 1010390
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2325, col 41 to line 2326, col 87 of module SwitchCompleteTransientFailure: 1010390
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2325, col 57 to line 2326, col 87 of module SwitchCompleteTransientFailure: 2066103
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2325, col 60 to line 2325, col 78 of module SwitchCompleteTransientFailure: 2066103
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2326, col 60 to line 2326, col 87 of module SwitchCompleteTransientFailure: 491522
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2325, col 50 to line 2325, col 54 of module SwitchCompleteTransientFailure: 1010390
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2328, col 82 to line 2328, col 84 of module SwitchCompleteTransientFailure: 463156
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2328, col 87 to line 2328, col 89 of module SwitchCompleteTransientFailure: 1010390
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2328, col 92 to line 2328, col 92 of module SwitchCompleteTransientFailure: 1010390
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2329, col 60 to line 2329, col 103 of module SwitchCompleteTransientFailure: 585599
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2330, col 60 to line 2330, col 93 of module SwitchCompleteTransientFailure: 583535
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2327, col 50 to line 2327, col 54 of module SwitchCompleteTransientFailure: 620217
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4589, col 138 to line 4589, col 144 of module SwitchCompleteTransientFailure: 620217
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4589, col 147 to line 4589, col 163 of module SwitchCompleteTransientFailure: 620217
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4590, col 55 to line 4590, col 82 of module SwitchCompleteTransientFailure: 706135
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4590, col 55 to line 4590, col 77 of module SwitchCompleteTransientFailure: 620217
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4590, col 81 to line 4590, col 82 of module SwitchCompleteTransientFailure: 620217
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4591, col 55 to line 4591, col 102 of module SwitchCompleteTransientFailure: 85918
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4592, col 55 to line 4594, col 87 of module SwitchCompleteTransientFailure: 85918
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4595, col 55 to line 4595, col 120 of module SwitchCompleteTransientFailure: 308393
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4596, col 55 to line 4596, col 140 of module SwitchCompleteTransientFailure: 308393
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4597, col 55 to line 4597, col 129 of module SwitchCompleteTransientFailure: 308393
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4598, col 55 to line 4598, col 107 of module SwitchCompleteTransientFailure: 308393
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4599, col 55 to line 4599, col 80 of module SwitchCompleteTransientFailure: 308393
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4600, col 44 to line 4663, col 82 of module SwitchCompleteTransientFailure: 394311
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<SchedulerMechanism line 4665, col 1 to line 4665, col 24 of module SwitchCompleteTransientFailure>: 9692:203840
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4665, col 32 to line 4665, col 62 of module SwitchCompleteTransientFailure: 2902685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4665, col 32 to line 4665, col 39 of module SwitchCompleteTransientFailure: 2698845
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4666, col 32 to line 4666, col 78 of module SwitchCompleteTransientFailure: 446178
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4666, col 32 to line 4666, col 45 of module SwitchCompleteTransientFailure: 242338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4666, col 51 to line 4666, col 78 of module SwitchCompleteTransientFailure: 242338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4667, col 32 to line 4667, col 64 of module SwitchCompleteTransientFailure: 421270
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4667, col 32 to line 4667, col 41 of module SwitchCompleteTransientFailure: 217430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4667, col 45 to line 4667, col 64 of module SwitchCompleteTransientFailure: 217430
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4668, col 36 to line 4668, col 107 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4670, col 45 to line 4670, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4671, col 40 to line 4671, col 95 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4672, col 36 to line 4672, col 60 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4673, col 43 to line 4673, col 119 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4674, col 47 to line 4674, col 71 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4675, col 54 to line 4675, col 171 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4676, col 58 to line 4676, col 82 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4677, col 62 to line 4677, col 192 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4679, col 65 to line 4679, col 89 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4681, col 54 to line 4682, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4684, col 43 to line 4685, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4686, col 36 to line 4686, col 60 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4687, col 43 to line 4687, col 126 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4688, col 43 to line 4688, col 160 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4689, col 43 to line 4689, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4690, col 43 to line 4690, col 85 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4691, col 43 to line 4692, col 85 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4693, col 32 to line 4730, col 70 of module SwitchCompleteTransientFailure: 203840
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ScheduleTheIR line 4732, col 1 to line 4732, col 19 of module SwitchCompleteTransientFailure>: 9873:218967
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4732, col 27 to line 4732, col 52 of module SwitchCompleteTransientFailure: 2917809
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4732, col 27 to line 4732, col 34 of module SwitchCompleteTransientFailure: 2698842
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4733, col 27 to line 4733, col 73 of module SwitchCompleteTransientFailure: 477698
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4733, col 27 to line 4733, col 40 of module SwitchCompleteTransientFailure: 258731
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4733, col 46 to line 4733, col 73 of module SwitchCompleteTransientFailure: 258731
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4734, col 27 to line 4734, col 59 of module SwitchCompleteTransientFailure: 452847
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4734, col 27 to line 4734, col 36 of module SwitchCompleteTransientFailure: 233880
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4734, col 40 to line 4734, col 59 of module SwitchCompleteTransientFailure: 233880
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4735, col 31 to line 4735, col 102 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4737, col 40 to line 4737, col 94 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4738, col 35 to line 4738, col 90 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4739, col 31 to line 4739, col 55 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4740, col 38 to line 4740, col 108 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4741, col 38 to line 4741, col 130 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4742, col 42 to line 4742, col 66 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4743, col 46 to line 4743, col 128 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4745, col 49 to line 4745, col 76 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4747, col 38 to line 4748, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4749, col 31 to line 4749, col 55 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4750, col 38 to line 4750, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4751, col 38 to line 4751, col 155 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4752, col 38 to line 4752, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4753, col 41 to line 4753, col 100 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4753, col 41 to line 4753, col 68 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4753, col 73 to line 4753, col 100 of module SwitchCompleteTransientFailure: 26911
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4754, col 46 to line 4754, col 108 of module SwitchCompleteTransientFailure: 192056
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4755, col 46 to line 4755, col 96 of module SwitchCompleteTransientFailure: 26911
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4756, col 38 to line 4757, col 80 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4758, col 27 to line 4788, col 76 of module SwitchCompleteTransientFailure: 218967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerSeqStateReconciliation line 4790, col 1 to line 4790, col 38 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4790, col 46 to line 4790, col 90 of module SwitchCompleteTransientFailure: 2698839
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4795, col 46 to line 4795, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4797, col 57 to line 4797, col 227 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4799, col 57 to line 4799, col 81 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4800, col 46 to line 4800, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4801, col 46 to line 4872, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThread line 4880, col 1 to line 4880, col 22 of module SwitchCompleteTransientFailure>: 25119:144237
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4880, col 30 to line 4880, col 58 of module SwitchCompleteTransientFailure: 2822578
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4880, col 30 to line 4880, col 37 of module SwitchCompleteTransientFailure: 2698839
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 90 of module SwitchCompleteTransientFailure: 704086
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 42 to line 2301, col 60 of module SwitchCompleteTransientFailure: 704086
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 65 to line 2301, col 92 of module SwitchCompleteTransientFailure: 827825
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2301, col 65 to line 2301, col 80 of module SwitchCompleteTransientFailure: 704086
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4881, col 49 to line 4881, col 55 of module SwitchCompleteTransientFailure: 704086
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 827825
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 704086
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 704086
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4882, col 41 to line 4882, col 44 of module SwitchCompleteTransientFailure: 704086
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4883, col 30 to line 4883, col 46 of module SwitchCompleteTransientFailure: 827825
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4883, col 30 to line 4883, col 39 of module SwitchCompleteTransientFailure: 704086
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4883, col 43 to line 4883, col 46 of module SwitchCompleteTransientFailure: 704086
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2341, col 77 to line 2341, col 92 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2341, col 55 to line 2341, col 74 of module SwitchCompleteTransientFailure: 138618
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 138618:299306
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 162064
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 138618
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2341, col 64 to line 2341, col 73 of module SwitchCompleteTransientFailure: 138618
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2342, col 80 to line 2342, col 93 of module SwitchCompleteTransientFailure: 304925
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2342, col 80 to line 2342, col 84 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2342, col 88 to line 2342, col 93 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2342, col 58 to line 2342, col 77 of module SwitchCompleteTransientFailure: 138618
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 138618:299306
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 162064
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 138618
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2342, col 67 to line 2342, col 76 of module SwitchCompleteTransientFailure: 138618
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2307, col 32 to line 2307, col 79 of module SwitchCompleteTransientFailure: 304925
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2307, col 33 to line 2307, col 79 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2307, col 64 to line 2307, col 79 of module SwitchCompleteTransientFailure: 207492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2307, col 42 to line 2307, col 61 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 160688:368180
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 209576
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2307, col 51 to line 2307, col 60 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2343, col 67 to line 2343, col 74 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2344, col 49 to line 2344, col 139 of module SwitchCompleteTransientFailure: 304925
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2344, col 49 to line 2344, col 80 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2344, col 84 to line 2344, col 139 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2344, col 88 to line 2344, col 138 of module SwitchCompleteTransientFailure: 160688:482064
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2344, col 89 to line 2344, col 110 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2344, col 119 to line 2344, col 137 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||line 2339, col 24 to line 2340, col 109 of module SwitchCompleteTransientFailure: 160688:321376
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2339, col 55 to line 2340, col 108 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2339, col 58 to line 2339, col 86 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2307, col 32 to line 2307, col 79 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2307, col 33 to line 2307, col 79 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 64 to line 2307, col 79 of module SwitchCompleteTransientFailure: 207492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 42 to line 2307, col 61 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 160688:368180
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 209576
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||||line 2307, col 51 to line 2307, col 60 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2339, col 76 to line 2339, col 85 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2340, col 58 to line 2340, col 108 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2339, col 31 to line 2339, col 52 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2344, col 134 to line 2344, col 136 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4884, col 54 to line 4884, col 60 of module SwitchCompleteTransientFailure: 138618
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4884, col 63 to line 4884, col 66 of module SwitchCompleteTransientFailure: 138618
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4885, col 30 to line 4885, col 76 of module SwitchCompleteTransientFailure: 304925
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4885, col 30 to line 4885, col 43 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4885, col 49 to line 4885, col 76 of module SwitchCompleteTransientFailure: 160688
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4886, col 30 to line 4886, col 62 of module SwitchCompleteTransientFailure: 288474
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4886, col 30 to line 4886, col 39 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4886, col 43 to line 4886, col 62 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4887, col 30 to line 4887, col 96 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4887, col 42 to line 4887, col 96 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4887, col 43 to line 4887, col 50 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4887, col 59 to line 4887, col 95 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 4887, col 69 to line 4887, col 95 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2310, col 36 to line 2313, col 99 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2310, col 68 to line 2313, col 99 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2310, col 71 to line 2310, col 98 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2311, col 71 to line 2313, col 99 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2311, col 74 to line 2311, col 100 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2307, col 32 to line 2307, col 79 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2307, col 33 to line 2307, col 79 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 64 to line 2307, col 79 of module SwitchCompleteTransientFailure: 187769
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2307, col 42 to line 2307, col 61 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 144237:332006
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 189853
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||||line 2307, col 51 to line 2307, col 60 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2311, col 92 to line 2311, col 99 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2312, col 74 to line 2312, col 104 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2308, col 38 to line 2309, col 76 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2308, col 39 to line 2309, col 76 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2308, col 67 to line 2309, col 76 of module SwitchCompleteTransientFailure: 189853
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2308, col 48 to line 2308, col 64 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2312, col 103 to line 2312, col 103 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2313, col 74 to line 2313, col 99 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2310, col 49 to line 2310, col 65 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 4887, col 91 to line 4887, col 94 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4888, col 30 to line 4888, col 107 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4889, col 30 to line 4889, col 92 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4890, col 34 to line 4890, col 105 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4892, col 43 to line 4892, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4893, col 38 to line 4893, col 95 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4894, col 34 to line 4894, col 59 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4895, col 41 to line 4895, col 124 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4896, col 41 to line 4896, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4897, col 41 to line 4897, col 105 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4898, col 41 to line 4899, col 74 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4900, col 41 to line 4900, col 155 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4901, col 45 to line 4901, col 70 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4902, col 52 to line 4902, col 135 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4903, col 52 to line 4903, col 169 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4904, col 52 to line 4904, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4905, col 52 to line 4905, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4906, col 55 to line 4906, col 106 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2348, col 62 to line 2349, col 158 of module SwitchCompleteTransientFailure: 288474
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2348, col 62 to line 2348, col 93 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2348, col 97 to line 2349, col 158 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2348, col 101 to line 2349, col 157 of module SwitchCompleteTransientFailure: 144237:432711
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2348, col 102 to line 2348, col 123 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2349, col 111 to line 2349, col 156 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||line 2345, col 51 to line 2347, col 120 of module SwitchCompleteTransientFailure: 144237:288474
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2345, col 82 to line 2347, col 119 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2345, col 85 to line 2346, col 133 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2345, col 113 to line 2346, col 133 of module SwitchCompleteTransientFailure: 189685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2345, col 116 to line 2345, col 125 of module SwitchCompleteTransientFailure: 189685
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2346, col 116 to line 2346, col 133 of module SwitchCompleteTransientFailure: 146153
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2345, col 94 to line 2345, col 110 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 144237:333922
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 189853
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2345, col 103 to line 2345, col 109 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2347, col 85 to line 2347, col 119 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2345, col 58 to line 2345, col 79 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2349, col 139 to line 2349, col 141 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2349, col 144 to line 2349, col 146 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2349, col 149 to line 2349, col 155 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 92 to line 4907, col 98 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 101 to line 4907, col 104 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 107 to line 4907, col 125 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4907, col 128 to line 4907, col 138 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4908, col 63 to line 4908, col 146 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4909, col 63 to line 4909, col 114 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4910, col 63 to line 4910, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4911, col 63 to line 4911, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4912, col 52 to line 4913, col 94 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4914, col 30 to line 4948, col 68 of module SwitchCompleteTransientFailure: 144237
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadSendIR line 4950, col 1 to line 4950, col 28 of module SwitchCompleteTransientFailure>: 52013:118287
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4950, col 36 to line 4950, col 70 of module SwitchCompleteTransientFailure: 2817123
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4950, col 36 to line 4950, col 43 of module SwitchCompleteTransientFailure: 2698836
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4951, col 36 to line 4951, col 82 of module SwitchCompleteTransientFailure: 251297
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4951, col 36 to line 4951, col 49 of module SwitchCompleteTransientFailure: 133010
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4951, col 55 to line 4951, col 82 of module SwitchCompleteTransientFailure: 133010
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4952, col 36 to line 4952, col 68 of module SwitchCompleteTransientFailure: 236574
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4952, col 36 to line 4952, col 45 of module SwitchCompleteTransientFailure: 118287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4952, col 49 to line 4952, col 68 of module SwitchCompleteTransientFailure: 118287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4953, col 40 to line 4954, col 119 of module SwitchCompleteTransientFailure: 118287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4955, col 53 to line 4955, col 136 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4956, col 53 to line 4956, col 170 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4958, col 53 to line 4958, col 121 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4959, col 47 to line 4959, col 50 of module SwitchCompleteTransientFailure: 118287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4960, col 47 to line 4961, col 89 of module SwitchCompleteTransientFailure: 118287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4962, col 40 to line 4962, col 85 of module SwitchCompleteTransientFailure: 118287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4963, col 50 to line 4963, col 139 of module SwitchCompleteTransientFailure: 118287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4963, col 50 to line 4963, col 94 of module SwitchCompleteTransientFailure: 118287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 4963, col 99 to line 4963, col 139 of module SwitchCompleteTransientFailure: 117801
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4964, col 55 to line 4966, col 112 of module SwitchCompleteTransientFailure: 89790
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4967, col 58 to line 4967, col 118 of module SwitchCompleteTransientFailure: 28497
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4968, col 58 to line 4969, col 84 of module SwitchCompleteTransientFailure: 28497
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4970, col 47 to line 4970, col 111 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4971, col 47 to line 4972, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 4973, col 36 to line 5019, col 80 of module SwitchCompleteTransientFailure: 118287
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadForwardIR line 5021, col 1 to line 5021, col 31 of module SwitchCompleteTransientFailure>: 178219:178388
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5021, col 39 to line 5021, col 76 of module SwitchCompleteTransientFailure: 2877221
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5021, col 39 to line 5021, col 46 of module SwitchCompleteTransientFailure: 2698833
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5022, col 39 to line 5022, col 85 of module SwitchCompleteTransientFailure: 386039
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5022, col 39 to line 5022, col 52 of module SwitchCompleteTransientFailure: 207651
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5022, col 58 to line 5022, col 85 of module SwitchCompleteTransientFailure: 207651
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5023, col 39 to line 5023, col 71 of module SwitchCompleteTransientFailure: 356776
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5023, col 39 to line 5023, col 48 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5023, col 52 to line 5023, col 71 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5024, col 43 to line 5024, col 114 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5026, col 52 to line 5026, col 108 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5027, col 47 to line 5027, col 104 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5028, col 43 to line 5028, col 68 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5029, col 50 to line 5030, col 142 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5031, col 50 to line 5032, col 142 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5033, col 50 to line 5035, col 231 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5036, col 53 to line 5036, col 114 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5037, col 61 to line 5037, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5038, col 58 to line 5038, col 117 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5039, col 54 to line 5039, col 79 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5040, col 58 to line 5040, col 176 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5042, col 61 to line 5042, col 88 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5044, col 50 to line 5046, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5047, col 43 to line 5047, col 68 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5048, col 50 to line 5048, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5049, col 50 to line 5049, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5050, col 50 to line 5050, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5051, col 50 to line 5051, col 110 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5052, col 50 to line 5053, col 92 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5054, col 39 to line 5103, col 77 of module SwitchCompleteTransientFailure: 178388
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadUnlockSemaphore line 5105, col 1 to line 5105, col 37 of module SwitchCompleteTransientFailure>: 133009:633161
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5105, col 45 to line 5105, col 88 of module SwitchCompleteTransientFailure: 3331991
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5105, col 45 to line 5105, col 52 of module SwitchCompleteTransientFailure: 2698830
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5106, col 45 to line 5106, col 91 of module SwitchCompleteTransientFailure: 1557231
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5106, col 45 to line 5106, col 58 of module SwitchCompleteTransientFailure: 924070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5106, col 64 to line 5106, col 91 of module SwitchCompleteTransientFailure: 924070
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5107, col 45 to line 5107, col 77 of module SwitchCompleteTransientFailure: 1439718
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5107, col 45 to line 5107, col 54 of module SwitchCompleteTransientFailure: 806557
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5107, col 58 to line 5107, col 77 of module SwitchCompleteTransientFailure: 806557
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5108, col 49 to line 5109, col 128 of module SwitchCompleteTransientFailure: 633161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5110, col 62 to line 5110, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5111, col 62 to line 5111, col 179 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5113, col 62 to line 5113, col 130 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5114, col 56 to line 5114, col 59 of module SwitchCompleteTransientFailure: 633161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5115, col 56 to line 5116, col 98 of module SwitchCompleteTransientFailure: 633161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5117, col 49 to line 5117, col 94 of module SwitchCompleteTransientFailure: 633161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5118, col 59 to line 5118, col 107 of module SwitchCompleteTransientFailure: 633161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5119, col 64 to line 5119, col 151 of module SwitchCompleteTransientFailure: 633161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5121, col 67 to line 5121, col 95 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5122, col 56 to line 5122, col 109 of module SwitchCompleteTransientFailure: 633161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5123, col 56 to line 5123, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5124, col 56 to line 5124, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5125, col 45 to line 5192, col 83 of module SwitchCompleteTransientFailure: 633161
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<RemoveFromScheduledIRSet line 5194, col 1 to line 5194, col 30 of module SwitchCompleteTransientFailure>: 118737:613053
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5194, col 38 to line 5194, col 74 of module SwitchCompleteTransientFailure: 3311880
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5194, col 38 to line 5194, col 45 of module SwitchCompleteTransientFailure: 2698827
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5195, col 38 to line 5195, col 84 of module SwitchCompleteTransientFailure: 1343075
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5195, col 38 to line 5195, col 51 of module SwitchCompleteTransientFailure: 730022
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5195, col 57 to line 5195, col 84 of module SwitchCompleteTransientFailure: 730022
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5196, col 38 to line 5196, col 70 of module SwitchCompleteTransientFailure: 1226106
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5196, col 38 to line 5196, col 47 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5196, col 51 to line 5196, col 70 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5197, col 42 to line 5197, col 113 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5199, col 51 to line 5199, col 107 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5200, col 46 to line 5200, col 103 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5201, col 42 to line 5201, col 67 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5202, col 49 to line 5202, col 128 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5203, col 53 to line 5203, col 78 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5204, col 60 to line 5204, col 144 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5205, col 60 to line 5205, col 116 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5205, col 74 to line 5205, col 116 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2194, col 30 to line 2195, col 76 of module SwitchCompleteTransientFailure: 613053:156815
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5205, col 88 to line 5205, col 97 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5205, col 100 to line 5205, col 115 of module SwitchCompleteTransientFailure: 150591
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5207, col 60 to line 5208, col 84 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5210, col 49 to line 5212, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5213, col 42 to line 5213, col 67 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5214, col 49 to line 5214, col 132 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5215, col 49 to line 5215, col 166 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5216, col 49 to line 5216, col 113 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5217, col 49 to line 5217, col 94 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5218, col 49 to line 5219, col 91 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5220, col 38 to line 5268, col 76 of module SwitchCompleteTransientFailure: 613053
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadRemoveQueue1 line 5270, col 1 to line 5270, col 34 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5270, col 42 to line 5270, col 82 of module SwitchCompleteTransientFailure: 2698824
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5273, col 42 to line 5273, col 126 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5274, col 42 to line 5274, col 98 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5275, col 42 to line 5275, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5276, col 42 to line 5336, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerThreadStateReconciliation line 5338, col 1 to line 5338, col 41 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5338, col 49 to line 5338, col 96 of module SwitchCompleteTransientFailure: 2698824
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5345, col 49 to line 5345, col 86 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5348, col 71 to line 5348, col 148 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5350, col 71 to line 5350, col 91 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5352, col 71 to line 5352, col 166 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5354, col 71 to line 5354, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5357, col 82 to line 5357, col 177 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5359, col 82 to line 5359, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5361, col 71 to line 5361, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5362, col 60 to line 5362, col 80 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5363, col 49 to line 5363, col 94 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5364, col 49 to line 5440, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerEventHandlerProc line 5450, col 1 to line 5450, col 32 of module SwitchCompleteTransientFailure>: 4687:13318
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5450, col 40 to line 5450, col 78 of module SwitchCompleteTransientFailure: 2712142
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5450, col 40 to line 5450, col 47 of module SwitchCompleteTransientFailure: 2698824
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 90 of module SwitchCompleteTransientFailure: 1287492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 42 to line 2301, col 60 of module SwitchCompleteTransientFailure: 1287492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 65 to line 2301, col 92 of module SwitchCompleteTransientFailure: 1300810
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2301, col 65 to line 2301, col 80 of module SwitchCompleteTransientFailure: 1287492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5451, col 59 to line 5451, col 65 of module SwitchCompleteTransientFailure: 1287492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1300810
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 1287492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1287492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5452, col 51 to line 5452, col 54 of module SwitchCompleteTransientFailure: 1287492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5453, col 40 to line 5453, col 64 of module SwitchCompleteTransientFailure: 1300810
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5453, col 40 to line 5453, col 57 of module SwitchCompleteTransientFailure: 1287492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5453, col 61 to line 5453, col 64 of module SwitchCompleteTransientFailure: 1287492
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5454, col 40 to line 5454, col 86 of module SwitchCompleteTransientFailure: 29636
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5454, col 40 to line 5454, col 53 of module SwitchCompleteTransientFailure: 16318
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5454, col 59 to line 5454, col 86 of module SwitchCompleteTransientFailure: 16318
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5455, col 40 to line 5455, col 72 of module SwitchCompleteTransientFailure: 27434
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5455, col 40 to line 5455, col 49 of module SwitchCompleteTransientFailure: 14116
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5455, col 53 to line 5455, col 72 of module SwitchCompleteTransientFailure: 14116
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5456, col 40 to line 5456, col 117 of module SwitchCompleteTransientFailure: 13318
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5457, col 43 to line 5457, col 141 of module SwitchCompleteTransientFailure: 13318
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5457, col 43 to line 5457, col 81 of module SwitchCompleteTransientFailure: 13318
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2354, col 30 to line 2357, col 83 of module SwitchCompleteTransientFailure: 13318
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2354, col 33 to line 2354, col 56 of module SwitchCompleteTransientFailure: 13318
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2355, col 33 to line 2355, col 61 of module SwitchCompleteTransientFailure: 13318
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2356, col 33 to line 2357, col 83 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5457, col 59 to line 5457, col 80 of module SwitchCompleteTransientFailure: 51974
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5457, col 86 to line 5457, col 141 of module SwitchCompleteTransientFailure: 649
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5458, col 48 to line 5458, col 99 of module SwitchCompleteTransientFailure: 649
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5459, col 54 to line 5459, col 159 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5459, col 54 to line 5459, col 95 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 2358, col 33 to line 2359, col 84 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5459, col 73 to line 5459, col 94 of module SwitchCompleteTransientFailure: 25338
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5459, col 100 to line 5459, col 159 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5460, col 59 to line 5460, col 123 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5461, col 62 to line 5461, col 132 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5462, col 40 to line 5519, col 78 of module SwitchCompleteTransientFailure: 13318
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerEvenHanlderRemoveEventFromQueue line 5521, col 1 to line 5521, col 47 of module SwitchCompleteTransientFailure>: 126747:1046832
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5521, col 55 to line 5521, col 108 of module SwitchCompleteTransientFailure: 3745654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5521, col 55 to line 5521, col 62 of module SwitchCompleteTransientFailure: 2698822
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5522, col 55 to line 5522, col 101 of module SwitchCompleteTransientFailure: 2371433
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5522, col 55 to line 5522, col 68 of module SwitchCompleteTransientFailure: 1324601
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5522, col 74 to line 5522, col 101 of module SwitchCompleteTransientFailure: 1324601
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5523, col 55 to line 5523, col 87 of module SwitchCompleteTransientFailure: 2179389
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5523, col 55 to line 5523, col 64 of module SwitchCompleteTransientFailure: 1132557
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5523, col 68 to line 5523, col 87 of module SwitchCompleteTransientFailure: 1132557
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5524, col 59 to line 5524, col 130 of module SwitchCompleteTransientFailure: 1046832
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5526, col 68 to line 5526, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5527, col 63 to line 5527, col 116 of module SwitchCompleteTransientFailure: 1046832
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5528, col 59 to line 5528, col 82 of module SwitchCompleteTransientFailure: 1046832
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5529, col 66 to line 5529, col 145 of module SwitchCompleteTransientFailure: 1046832
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5530, col 70 to line 5530, col 93 of module SwitchCompleteTransientFailure: 1046832
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5531, col 74 to line 5531, col 122 of module SwitchCompleteTransientFailure: 1046832
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5533, col 77 to line 5533, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5535, col 66 to line 5536, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5537, col 59 to line 5537, col 82 of module SwitchCompleteTransientFailure: 1046832
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5538, col 66 to line 5538, col 149 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5539, col 66 to line 5539, col 183 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5540, col 66 to line 5540, col 136 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5541, col 66 to line 5541, col 121 of module SwitchCompleteTransientFailure: 1046832
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5542, col 66 to line 5543, col 108 of module SwitchCompleteTransientFailure: 1046832
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5544, col 55 to line 5622, col 93 of module SwitchCompleteTransientFailure: 1046832
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerSuspendSW line 5624, col 1 to line 5624, col 25 of module SwitchCompleteTransientFailure>: 311:649
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5624, col 33 to line 5624, col 64 of module SwitchCompleteTransientFailure: 2699469
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5624, col 33 to line 5624, col 40 of module SwitchCompleteTransientFailure: 2698820
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5625, col 33 to line 5625, col 79 of module SwitchCompleteTransientFailure: 1332
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5625, col 33 to line 5625, col 46 of module SwitchCompleteTransientFailure: 683
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5625, col 52 to line 5625, col 79 of module SwitchCompleteTransientFailure: 683
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5626, col 33 to line 5626, col 65 of module SwitchCompleteTransientFailure: 1326
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5626, col 33 to line 5626, col 42 of module SwitchCompleteTransientFailure: 677
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5626, col 46 to line 5626, col 65 of module SwitchCompleteTransientFailure: 677
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5627, col 37 to line 5628, col 116 of module SwitchCompleteTransientFailure: 649
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5629, col 50 to line 5629, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5630, col 50 to line 5630, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5632, col 50 to line 5632, col 118 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5633, col 44 to line 5633, col 47 of module SwitchCompleteTransientFailure: 649
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5634, col 44 to line 5635, col 86 of module SwitchCompleteTransientFailure: 649
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5636, col 37 to line 5636, col 82 of module SwitchCompleteTransientFailure: 649
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5637, col 41 to line 5640, col 114 of module SwitchCompleteTransientFailure: 649
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5641, col 44 to line 5641, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5642, col 44 to line 5643, col 77 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5644, col 33 to line 5683, col 71 of module SwitchCompleteTransientFailure: 649
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerCheckIfThisIsLastEvent line 5685, col 1 to line 5685, col 38 of module SwitchCompleteTransientFailure>: 5034:12669
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5685, col 46 to line 5685, col 90 of module SwitchCompleteTransientFailure: 2711488
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5685, col 46 to line 5685, col 53 of module SwitchCompleteTransientFailure: 2698819
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5686, col 46 to line 5686, col 92 of module SwitchCompleteTransientFailure: 28304
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5686, col 46 to line 5686, col 59 of module SwitchCompleteTransientFailure: 15635
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5686, col 65 to line 5686, col 92 of module SwitchCompleteTransientFailure: 15635
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5687, col 46 to line 5687, col 78 of module SwitchCompleteTransientFailure: 26108
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5687, col 46 to line 5687, col 55 of module SwitchCompleteTransientFailure: 13439
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5687, col 59 to line 5687, col 78 of module SwitchCompleteTransientFailure: 13439
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5688, col 50 to line 5689, col 129 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5690, col 63 to line 5690, col 146 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5691, col 63 to line 5691, col 180 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5693, col 63 to line 5693, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5694, col 57 to line 5694, col 60 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5695, col 57 to line 5696, col 99 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5697, col 50 to line 5697, col 95 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5698, col 60 to line 5698, col 113 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5699, col 65 to line 5699, col 114 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5700, col 68 to line 5700, col 122 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5701, col 57 to line 5701, col 127 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5702, col 46 to line 5773, col 84 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<getIRsToBeChecked line 5775, col 1 to line 5775, col 23 of module SwitchCompleteTransientFailure>: 5234:12669
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5775, col 31 to line 5775, col 60 of module SwitchCompleteTransientFailure: 2711487
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5775, col 31 to line 5775, col 38 of module SwitchCompleteTransientFailure: 2698818
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5776, col 31 to line 5776, col 77 of module SwitchCompleteTransientFailure: 28304
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5776, col 31 to line 5776, col 44 of module SwitchCompleteTransientFailure: 15635
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5776, col 50 to line 5776, col 77 of module SwitchCompleteTransientFailure: 15635
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5777, col 31 to line 5777, col 63 of module SwitchCompleteTransientFailure: 26108
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5777, col 31 to line 5777, col 40 of module SwitchCompleteTransientFailure: 13439
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5777, col 44 to line 5777, col 63 of module SwitchCompleteTransientFailure: 13439
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5778, col 35 to line 5779, col 114 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5780, col 48 to line 5780, col 131 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5781, col 48 to line 5781, col 165 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5783, col 48 to line 5783, col 116 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5784, col 42 to line 5784, col 45 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5785, col 42 to line 5786, col 84 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5787, col 35 to line 5787, col 80 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5788, col 42 to line 5788, col 134 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5788, col 59 to line 5788, col 134 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5788, col 60 to line 5788, col 72 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5788, col 81 to line 5788, col 133 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 5788, col 91 to line 5788, col 133 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2364, col 25 to line 2365, col 80 of module SwitchCompleteTransientFailure: 12669:18117
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2364, col 46 to line 2365, col 79 of module SwitchCompleteTransientFailure: 38007
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2364, col 49 to line 2364, col 62 of module SwitchCompleteTransientFailure: 38007
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2365, col 49 to line 2365, col 79 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2364, col 32 to line 2364, col 43 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 5788, col 107 to line 5788, col 132 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5789, col 46 to line 5789, col 70 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5790, col 50 to line 5790, col 107 of module SwitchCompleteTransientFailure: 843
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5791, col 50 to line 5791, col 93 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5792, col 42 to line 5792, col 112 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5793, col 42 to line 5793, col 64 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5794, col 31 to line 5831, col 69 of module SwitchCompleteTransientFailure: 12669
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ResetAllIRs line 5833, col 1 to line 5833, col 17 of module SwitchCompleteTransientFailure>: 7323:11826
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5833, col 25 to line 5833, col 48 of module SwitchCompleteTransientFailure: 2710643
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5833, col 25 to line 5833, col 32 of module SwitchCompleteTransientFailure: 2698817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5834, col 25 to line 5834, col 71 of module SwitchCompleteTransientFailure: 26552
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5834, col 25 to line 5834, col 38 of module SwitchCompleteTransientFailure: 14726
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5834, col 44 to line 5834, col 71 of module SwitchCompleteTransientFailure: 14726
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5835, col 25 to line 5835, col 57 of module SwitchCompleteTransientFailure: 24402
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5835, col 25 to line 5835, col 34 of module SwitchCompleteTransientFailure: 12576
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5835, col 38 to line 5835, col 57 of module SwitchCompleteTransientFailure: 12576
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5836, col 29 to line 5837, col 108 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5838, col 42 to line 5838, col 125 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5839, col 42 to line 5839, col 159 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5841, col 42 to line 5841, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5842, col 36 to line 5842, col 39 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5843, col 36 to line 5844, col 78 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5845, col 29 to line 5845, col 74 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5846, col 36 to line 5846, col 111 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5847, col 36 to line 5847, col 123 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5848, col 36 to line 5848, col 98 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5849, col 36 to line 5850, col 156 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5851, col 39 to line 5851, col 63 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5852, col 44 to line 5852, col 101 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5853, col 47 to line 5853, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5854, col 36 to line 5854, col 106 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5855, col 36 to line 5856, col 73 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5857, col 25 to line 5888, col 63 of module SwitchCompleteTransientFailure: 11826
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerFreeSuspendedSW line 5890, col 1 to line 5890, col 31 of module SwitchCompleteTransientFailure>: 18120:32630
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5890, col 39 to line 5890, col 76 of module SwitchCompleteTransientFailure: 2731447
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5890, col 39 to line 5890, col 46 of module SwitchCompleteTransientFailure: 2698817
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5891, col 39 to line 5891, col 85 of module SwitchCompleteTransientFailure: 72682
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5891, col 39 to line 5891, col 52 of module SwitchCompleteTransientFailure: 40052
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5891, col 58 to line 5891, col 85 of module SwitchCompleteTransientFailure: 40052
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5892, col 39 to line 5892, col 71 of module SwitchCompleteTransientFailure: 67420
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5892, col 39 to line 5892, col 48 of module SwitchCompleteTransientFailure: 34790
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 5892, col 52 to line 5892, col 71 of module SwitchCompleteTransientFailure: 34790
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5893, col 43 to line 5893, col 114 of module SwitchCompleteTransientFailure: 32630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5895, col 52 to line 5895, col 104 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5896, col 47 to line 5896, col 100 of module SwitchCompleteTransientFailure: 32630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5897, col 43 to line 5897, col 66 of module SwitchCompleteTransientFailure: 32630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5898, col 50 to line 5898, col 169 of module SwitchCompleteTransientFailure: 32630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5899, col 54 to line 5899, col 77 of module SwitchCompleteTransientFailure: 32630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5900, col 58 to line 5902, col 198 of module SwitchCompleteTransientFailure: 32630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5904, col 61 to line 5905, col 94 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5907, col 50 to line 5909, col 83 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5910, col 43 to line 5910, col 66 of module SwitchCompleteTransientFailure: 32630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5911, col 50 to line 5911, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5912, col 50 to line 5912, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5913, col 50 to line 5913, col 120 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5914, col 50 to line 5914, col 120 of module SwitchCompleteTransientFailure: 32630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5915, col 50 to line 5916, col 92 of module SwitchCompleteTransientFailure: 32630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5917, col 39 to line 5966, col 77 of module SwitchCompleteTransientFailure: 32630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerEventHandlerStateReconciliation line 5968, col 1 to line 5968, col 47 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5968, col 55 to line 5968, col 108 of module SwitchCompleteTransientFailure: 2698816
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5974, col 55 to line 5974, col 92 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5976, col 66 to line 5976, col 158 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5977, col 66 to line 5978, col 207 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5980, col 66 to line 5981, col 99 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5982, col 55 to line 5982, col 110 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 5983, col 55 to line 6063, col 93 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerMonitorCheckIfMastr line 6074, col 1 to line 6074, col 35 of module SwitchCompleteTransientFailure>: 331266:361490
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6074, col 43 to line 6074, col 84 of module SwitchCompleteTransientFailure: 3060306
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6074, col 43 to line 6074, col 50 of module SwitchCompleteTransientFailure: 2698816
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2300, col 42 to line 2300, col 90 of module SwitchCompleteTransientFailure: 1126611
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 42 to line 2301, col 60 of module SwitchCompleteTransientFailure: 1126611
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2301, col 65 to line 2301, col 92 of module SwitchCompleteTransientFailure: 1488101
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2301, col 65 to line 2301, col 80 of module SwitchCompleteTransientFailure: 1126611
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6075, col 62 to line 6075, col 68 of module SwitchCompleteTransientFailure: 1126611
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 2299, col 25 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1488101
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 25 to line 2299, col 61 of module SwitchCompleteTransientFailure: 1126611
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 2299, col 65 to line 2299, col 73 of module SwitchCompleteTransientFailure: 1126611
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6076, col 54 to line 6076, col 57 of module SwitchCompleteTransientFailure: 1126611
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6077, col 43 to line 6077, col 66 of module SwitchCompleteTransientFailure: 1488101
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6077, col 43 to line 6077, col 59 of module SwitchCompleteTransientFailure: 1126611
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6077, col 63 to line 6077, col 66 of module SwitchCompleteTransientFailure: 1126611
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6078, col 43 to line 6078, col 89 of module SwitchCompleteTransientFailure: 804343
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6078, col 43 to line 6078, col 56 of module SwitchCompleteTransientFailure: 442853
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6078, col 62 to line 6078, col 89 of module SwitchCompleteTransientFailure: 442853
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6079, col 43 to line 6079, col 75 of module SwitchCompleteTransientFailure: 741995
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6079, col 43 to line 6079, col 52 of module SwitchCompleteTransientFailure: 380505
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6079, col 56 to line 6079, col 75 of module SwitchCompleteTransientFailure: 380505
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6080, col 43 to line 6080, col 80 of module SwitchCompleteTransientFailure: 361490
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6081, col 43 to line 6081, col 95 of module SwitchCompleteTransientFailure: 361490
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6082, col 43 to line 6085, col 96 of module SwitchCompleteTransientFailure: 361490
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6082, col 50 to line 6084, col 89 of module SwitchCompleteTransientFailure: 361490
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6082, col 53 to line 6082, col 83 of module SwitchCompleteTransientFailure: 361490
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6083, col 53 to line 6084, col 89 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6086, col 43 to line 6087, col 96 of module SwitchCompleteTransientFailure: 361490
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6088, col 46 to line 6088, col 111 of module SwitchCompleteTransientFailure: 361490
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6089, col 54 to line 6089, col 133 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6089, col 62 to line 6089, col 133 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6089, col 63 to line 6089, col 66 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6089, col 75 to line 6089, col 132 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6089, col 85 to line 6089, col 132 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 703123
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2369, col 73 to line 2372, col 113 of module SwitchCompleteTransientFailure: 703123
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 76 to line 2370, col 114 of module SwitchCompleteTransientFailure: 703123
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 79 to line 2369, col 109 of module SwitchCompleteTransientFailure: 703123
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2370, col 79 to line 2370, col 114 of module SwitchCompleteTransientFailure: 527191
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2371, col 76 to line 2372, col 113 of module SwitchCompleteTransientFailure: 175932
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2373, col 73 to line 2373, col 102 of module SwitchCompleteTransientFailure: 571174
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6089, col 100 to line 6089, col 114 of module SwitchCompleteTransientFailure: 571174
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6089, col 117 to line 6089, col 131 of module SwitchCompleteTransientFailure: 879055
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6090, col 54 to line 6091, col 108 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6092, col 54 to line 6092, col 102 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6093, col 54 to line 6093, col 81 of module SwitchCompleteTransientFailure: 356038
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6094, col 51 to line 6096, col 65 of module SwitchCompleteTransientFailure: 5452
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6097, col 43 to line 6158, col 81 of module SwitchCompleteTransientFailure: 361490
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<MonitoringServerRemoveFromQueue line 6160, col 1 to line 6160, col 37 of module SwitchCompleteTransientFailure>: 766456:910630
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6160, col 45 to line 6160, col 88 of module SwitchCompleteTransientFailure: 3609441
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6160, col 45 to line 6160, col 52 of module SwitchCompleteTransientFailure: 2698811
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6161, col 45 to line 6161, col 91 of module SwitchCompleteTransientFailure: 2067869
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6161, col 45 to line 6161, col 58 of module SwitchCompleteTransientFailure: 1157239
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6161, col 64 to line 6161, col 91 of module SwitchCompleteTransientFailure: 1157239
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6162, col 45 to line 6162, col 77 of module SwitchCompleteTransientFailure: 1900202
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6162, col 45 to line 6162, col 54 of module SwitchCompleteTransientFailure: 989572
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6162, col 58 to line 6162, col 77 of module SwitchCompleteTransientFailure: 989572
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6163, col 49 to line 6164, col 128 of module SwitchCompleteTransientFailure: 910630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6165, col 62 to line 6165, col 145 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6166, col 62 to line 6166, col 179 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6168, col 62 to line 6168, col 130 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6169, col 56 to line 6169, col 59 of module SwitchCompleteTransientFailure: 910630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6170, col 56 to line 6171, col 98 of module SwitchCompleteTransientFailure: 910630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6172, col 49 to line 6172, col 94 of module SwitchCompleteTransientFailure: 910630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6173, col 53 to line 6174, col 114 of module SwitchCompleteTransientFailure: 910630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6175, col 56 to line 6175, col 114 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6176, col 56 to line 6176, col 82 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6177, col 45 to line 6244, col 83 of module SwitchCompleteTransientFailure: 910630
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerUpdateIR2 line 6246, col 1 to line 6246, col 25 of module SwitchCompleteTransientFailure>: 325565:336848
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6246, col 33 to line 6246, col 64 of module SwitchCompleteTransientFailure: 3035654
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6246, col 33 to line 6246, col 40 of module SwitchCompleteTransientFailure: 2698806
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6247, col 33 to line 6247, col 79 of module SwitchCompleteTransientFailure: 751814
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6247, col 33 to line 6247, col 46 of module SwitchCompleteTransientFailure: 414966
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6247, col 52 to line 6247, col 79 of module SwitchCompleteTransientFailure: 414966
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6248, col 33 to line 6248, col 65 of module SwitchCompleteTransientFailure: 691373
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6248, col 33 to line 6248, col 42 of module SwitchCompleteTransientFailure: 354525
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6248, col 46 to line 6248, col 65 of module SwitchCompleteTransientFailure: 354525
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6249, col 37 to line 6250, col 116 of module SwitchCompleteTransientFailure: 336848
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6251, col 50 to line 6251, col 133 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6252, col 50 to line 6252, col 167 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6254, col 50 to line 6254, col 118 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6255, col 44 to line 6255, col 47 of module SwitchCompleteTransientFailure: 336848
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6256, col 44 to line 6257, col 86 of module SwitchCompleteTransientFailure: 336848
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6258, col 37 to line 6258, col 82 of module SwitchCompleteTransientFailure: 336848
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6259, col 41 to line 6262, col 104 of module SwitchCompleteTransientFailure: 336848
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6263, col 44 to line 6263, col 102 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6264, col 44 to line 6266, col 70 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6267, col 33 to line 6305, col 71 of module SwitchCompleteTransientFailure: 336848
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2772:0 @!@!@
<ControllerWatchDogProc line 6311, col 1 to line 6311, col 28 of module SwitchCompleteTransientFailure>: 0:0
@!@!@ENDMSG 2772 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6311, col 36 to line 6311, col 70 of module SwitchCompleteTransientFailure: 5397606
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6312, col 36 to line 6312, col 82 of module SwitchCompleteTransientFailure: 5397606
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6313, col 36 to line 6313, col 68 of module SwitchCompleteTransientFailure: 4607952
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6314, col 36 to line 6314, col 143 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6314, col 63 to line 6314, col 143 of module SwitchCompleteTransientFailure: 4261160
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6314, col 64 to line 6314, col 86 of module SwitchCompleteTransientFailure: 4261160
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6314, col 95 to line 6314, col 142 of module SwitchCompleteTransientFailure: 4261160
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6314, col 105 to line 6314, col 142 of module SwitchCompleteTransientFailure: 4261160
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  |||line 2375, col 40 to line 2376, col 102 of module SwitchCompleteTransientFailure: 4261160:653912
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2375, col 60 to line 2376, col 101 of module SwitchCompleteTransientFailure: 29828120
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2375, col 63 to line 2375, col 73 of module SwitchCompleteTransientFailure: 29828120
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2376, col 63 to line 2376, col 101 of module SwitchCompleteTransientFailure: 14914060
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 2375, col 47 to line 2375, col 57 of module SwitchCompleteTransientFailure: 4261160
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6314, col 135 to line 6314, col 141 of module SwitchCompleteTransientFailure: 4261160
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6315, col 36 to line 6315, col 82 of module SwitchCompleteTransientFailure: 4261160
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6319, col 41 to line 6319, col 64 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6320, col 41 to line 6320, col 129 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6321, col 36 to line 6321, col 87 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6322, col 36 to line 6370, col 55 of module SwitchCompleteTransientFailure: 0
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2774:0 @!@!@
<IRCriticalSection line 6511, col 1 to line 6511, col 17 of module SwitchCompleteTransientFailure>
@!@!@ENDMSG 2774 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6514, col 25 to line 6517, col 109 of module SwitchCompleteTransientFailure: 2773320
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2774:0 @!@!@
<ConsistencyReq line 6524, col 1 to line 6524, col 14 of module SwitchCompleteTransientFailure>
@!@!@ENDMSG 2774 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  line 6524, col 19 to line 6529, col 169 of module SwitchCompleteTransientFailure: 2773320
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6524, col 55 to line 6529, col 169 of module SwitchCompleteTransientFailure: 8340035
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6524, col 58 to line 6524, col 62 of module SwitchCompleteTransientFailure: 8340035
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6525, col 58 to line 6525, col 162 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6525, col 58 to line 6525, col 108 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 7071294
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 3777686:7071294
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 7555372
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6525, col 67 to line 6525, col 107 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 6161967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 82 to line 6525, col 82 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 85 to line 6525, col 106 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6525, col 112 to line 6525, col 162 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 7071294
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 3777686:7071294
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 7555372
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6525, col 121 to line 6525, col 161 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 6161967
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 136 to line 6525, col 136 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6525, col 139 to line 6525, col 160 of module SwitchCompleteTransientFailure: 3777686
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6526, col 58 to line 6527, col 169 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6526, col 61 to line 6526, col 125 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6526, col 61 to line 6526, col 91 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 31 to line 2191, col 52 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 45 to line 2191, col 52 of module SwitchCompleteTransientFailure: 3483226
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 40 to line 2191, col 42 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 26 to line 2191, col 28 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 2809530:9102286
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 6989172
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 76 to line 6526, col 87 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 90 to line 6526, col 90 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6526, col 95 to line 6526, col 125 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 31 to line 2191, col 52 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 45 to line 2191, col 52 of module SwitchCompleteTransientFailure: 3483226
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 40 to line 2191, col 42 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 26 to line 2191, col 28 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 2809530:9102286
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 6989172
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 110 to line 6526, col 121 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6526, col 124 to line 6526, col 124 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6527, col 61 to line 6527, col 169 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6527, col 61 to line 6527, col 148 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6527, col 63 to line 6527, col 103 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6527, col 78 to line 6527, col 78 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6527, col 81 to line 6527, col 102 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6527, col 106 to line 6527, col 146 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6527, col 157 to line 6527, col 169 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6527, col 157 to line 6527, col 167 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 1404765:2809530
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6527, col 166 to line 6527, col 166 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6528, col 58 to line 6529, col 169 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6528, col 61 to line 6528, col 125 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6528, col 61 to line 6528, col 91 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 1404765:4214295
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 3494586
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 76 to line 6528, col 87 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 90 to line 6528, col 90 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6528, col 95 to line 6528, col 125 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6521, col 28 to line 6521, col 63 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2191, col 13 to line 2191, col 52 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 31 to line 2191, col 52 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 45 to line 2191, col 52 of module SwitchCompleteTransientFailure: 2078461
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 2191, col 40 to line 2191, col 42 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2191, col 26 to line 2191, col 28 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||line 6521, col 32 to line 6521, col 62 of module SwitchCompleteTransientFailure: 1404765:4887991
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 51 to line 6521, col 61 of module SwitchCompleteTransientFailure: 3494586
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6521, col 39 to line 6521, col 48 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 110 to line 6528, col 121 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6528, col 124 to line 6528, col 124 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 6529, col 61 to line 6529, col 169 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6529, col 61 to line 6529, col 148 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6529, col 63 to line 6529, col 103 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 2369, col 35 to line 2373, col 102 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 70 to line 2373, col 102 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 2369, col 48 to line 2369, col 67 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6529, col 78 to line 6529, col 78 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6529, col 81 to line 6529, col 102 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6529, col 106 to line 6529, col 146 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||line 6529, col 157 to line 6529, col 169 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||line 6529, col 157 to line 6529, col 167 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6522, col 17 to line 6522, col 67 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 58 to line 6522, col 67 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||line 6522, col 30 to line 6522, col 55 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||||||||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 1404765:2809530
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 2809530
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||||||||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||||line 6522, col 39 to line 6522, col 54 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||||||line 6529, col 166 to line 6529, col 166 of module SwitchCompleteTransientFailure: 1404765
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |line 6524, col 31 to line 6524, col 52 of module SwitchCompleteTransientFailure: 2773320
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2775:0 @!@!@
  ||line 2192, col 18 to line 2192, col 43 of module SwitchCompleteTransientFailure: 2773320:22922919
@!@!@ENDMSG 2775 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2192, col 19 to line 2192, col 24 of module SwitchCompleteTransientFailure: 5714534
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  |||line 2192, col 33 to line 2192, col 42 of module SwitchCompleteTransientFailure: 2773320
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2221:0 @!@!@
  ||line 6524, col 40 to line 6524, col 51 of module SwitchCompleteTransientFailure: 2773320
@!@!@ENDMSG 2221 @!@!@
@!@!@STARTMSG 2777:0 @!@!@
End of statistics (please note that for performance reasons large models
are best checked with coverage and cost statistics disabled).
@!@!@ENDMSG 2777 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(97) at 2021-04-01 06:56:53: 10,112,737 states generated (855,011 s/min), 2,773,320 distinct states found (234,478 ds/min), 74,517 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2199:0 @!@!@
10112737 states generated, 2773320 distinct states found, 74517 states left on queue.
@!@!@ENDMSG 2199 @!@!@
@!@!@STARTMSG 2186:0 @!@!@
Finished in 709658ms at (2021-04-01 06:56:53)
@!@!@ENDMSG 2186 @!@!@
